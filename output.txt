Mon Jun 20 06:51:45 UTC 2022
customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_accessanalyzer_analyzer []

PRETEST: tests/aws_accessanalyzer_analyzer

TEST: tests/aws_accessanalyzer_analyzer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_accessanalyzer_analyzer.named_test_resource will be created
  + resource "aws_accessanalyzer_analyzer" "named_test_resource" {
      + analyzer_name = "turbottest3066"
      + arn           = (known after apply)
      + id            = (known after apply)
      + tags          = {
          + "name" = "turbottest3066"
        }
      + tags_all      = {
          + "name" = "turbottest3066"
        }
      + type          = "ACCOUNT"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = "arn:aws:access-analyzer:us-east-1:632902152528:analyzer/turbottest3066"
  + resource_name = "turbottest3066"
aws_accessanalyzer_analyzer.named_test_resource: Creating...
aws_accessanalyzer_analyzer.named_test_resource: Creation complete after 1s [id=turbottest3066]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:access-analyzer:us-east-1:632902152528:analyzer/turbottest3066"
resource_name = "turbottest3066"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:access-analyzer:us-east-1:632902152528:analyzer/turbottest3066"
    ],
    "name": "turbottest3066",
    "title": "turbottest3066"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:access-analyzer:us-east-1:632902152528:analyzer/turbottest3066"
    ],
    "tags": {
      "name": "turbottest3066"
    },
    "title": "turbottest3066"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "turbottest3066",
    "region": "us-east-1",
    "status": "ACTIVE",
    "tags": {
      "name": "turbottest3066"
    },
    "title": "turbottest3066",
    "type": "ACCOUNT"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:access-analyzer:us-east-1:632902152528:analyzer/turbottest3066"
    ],
    "name": "turbottest3066",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest3066"
    },
    "title": "turbottest3066"
  }
]
✔ PASSED

POSTTEST: tests/aws_accessanalyzer_analyzer

TEARDOWN: tests/aws_accessanalyzer_analyzer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_acm_certificate []

PRETEST: tests/aws_acm_certificate

TEST: tests/aws_acm_certificate
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_acm_certificate.named_test_resource will be created
  + resource "aws_acm_certificate" "named_test_resource" {
      + arn                       = (known after apply)
      + certificate_body          = (known after apply)
      + domain_name               = (known after apply)
      + domain_validation_options = (known after apply)
      + id                        = (known after apply)
      + private_key               = (sensitive value)
      + status                    = (known after apply)
      + subject_alternative_names = (known after apply)
      + tags                      = {
          + "name" = "turbottest38362"
        }
      + tags_all                  = {
          + "name" = "turbottest38362"
        }
      + validation_emails         = (known after apply)
      + validation_method         = (known after apply)
    }

  # tls_private_key.example will be created
  + resource "tls_private_key" "example" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 2048
    }

  # tls_self_signed_cert.example will be created
  + resource "tls_self_signed_cert" "example" {
      + allowed_uses          = [
          + "key_encipherment",
          + "digital_signature",
          + "server_auth",
        ]
      + cert_pem              = (known after apply)
      + early_renewal_hours   = 0
      + id                    = (known after apply)
      + key_algorithm         = "RSA"
      + private_key_pem       = (sensitive value)
      + ready_for_renewal     = true
      + validity_end_time     = (known after apply)
      + validity_period_hours = 12
      + validity_start_time   = (known after apply)

      + subject {
          + common_name  = "turbot.com"
          + organization = "Turbot HQ Pvt. Ltd."
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id       = "632902152528"
  + aws_region       = "us-east-1"
  + certificate_body = (known after apply)
  + resource_aka     = (known after apply)
  + resource_name    = "turbottest38362"
tls_private_key.example: Creating...
tls_private_key.example: Creation complete after 0s [id=dd82822754dedd2fc9f2f7355a8e4b5148a29505]
tls_self_signed_cert.example: Creating...
tls_self_signed_cert.example: Creation complete after 0s [id=265097002873893861483868593906107081556]
aws_acm_certificate.named_test_resource: Creating...
aws_acm_certificate.named_test_resource: Creation complete after 1s [id=arn:aws:acm:us-east-1:632902152528:certificate/0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with tls_self_signed_cert.example,
  on variables.tf line 56, in resource "tls_self_signed_cert" "example":
  56:   key_algorithm   = "RSA"

This is now ignored, as the key algorithm is inferred from the
`private_key_pem`.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
certificate_body = "-----BEGIN CERTIFICATE-----\\nMIIDJjCCAg6gAwIBAgIRAMdv01qJH0MkyC8vzRJg41QwDQYJKoZIhvcNAQELBQAw\\nMzEcMBoGA1UEChMTVHVyYm90IEhRIFB2dC4gTHRkLjETMBEGA1UEAxMKdHVyYm90\\nLmNvbTAeFw0yMjA2MjAwNjUyNDJaFw0yMjA2MjAxODUyNDJaMDMxHDAaBgNVBAoT\\nE1R1cmJvdCBIUSBQdnQuIEx0ZC4xEzARBgNVBAMTCnR1cmJvdC5jb20wggEiMA0G\\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9ca/FtanYEKqZA4hPc++BEKjQWVwA\\nX4Bx1syAAZIu/seCM6ZbnYuIAhwtfl/OqUfodO0s7Zo9EYair40FmQDBtxPQOW3m\\nl6K4UE4Z02vHewQsqJkXFqDnAGpKu/iRuLhU7AqmOgn61iHXdw2+d26QnfOkoNX1\\n66xfH5J0UflXHYNLROCxFbXuU4m0/kSoUpk4J/GpuJC7RFlRf1MClmOW2CYpkk/s\\nHlSoflNMVml9cj8ZKd6rkE1BjqeK0wsrENzw+Q/JIPBTa3nxu9IupEv/0vtJOvA3\\nq79F6dcbprmBEd4zzu5x4VWR6uEotpbH9yilKh1mT4aXbXj89DQNTSL9AgMBAAGj\\nNTAzMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMB\\nAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQCT943mlGMw4hmZrkws/oBVoHlDcvSY\\nzMnOrKFYlm646Eo5RZ/i24NYs64KFqPESWHWvJnn1hriUWeEfG/Ua9zKzz8Ic/2o\\nzT6eeNckMxuuAxIk7vt4q2tOZy56mGDbVjSOyWGgcpXp6xVsV2eTLEUq6lQkmDg8\\ncGUTmeKFf0r0ypovBlg7BDhR63Re5DwIpRSt8ismHjwTEcGjOoykotwilSsabSrQ\\no0ow2skB8XsFHcPyqAAgkJof2nqjJl/C4qSzn6VdHfq9UZmcx/kKMxdiJrt+3QCO\\nirsFWNEF2U3xwRkEGIXkOmwzmFitzozdBlkBf13UuLC3PJqhoWHiLQeh\\n-----END CERTIFICATE-----\\n"
resource_aka = "arn:aws:acm:us-east-1:632902152528:certificate/0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c"
resource_name = "turbottest38362"

Running SQL query: test-get-certificate-chain-query.sql
[
  {
    "certificate": "-----BEGIN CERTIFICATE-----\nMIIDJjCCAg6gAwIBAgIRAMdv01qJH0MkyC8vzRJg41QwDQYJKoZIhvcNAQELBQAw\nMzEcMBoGA1UEChMTVHVyYm90IEhRIFB2dC4gTHRkLjETMBEGA1UEAxMKdHVyYm90\nLmNvbTAeFw0yMjA2MjAwNjUyNDJaFw0yMjA2MjAxODUyNDJaMDMxHDAaBgNVBAoT\nE1R1cmJvdCBIUSBQdnQuIEx0ZC4xEzARBgNVBAMTCnR1cmJvdC5jb20wggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9ca/FtanYEKqZA4hPc++BEKjQWVwA\nX4Bx1syAAZIu/seCM6ZbnYuIAhwtfl/OqUfodO0s7Zo9EYair40FmQDBtxPQOW3m\nl6K4UE4Z02vHewQsqJkXFqDnAGpKu/iRuLhU7AqmOgn61iHXdw2+d26QnfOkoNX1\n66xfH5J0UflXHYNLROCxFbXuU4m0/kSoUpk4J/GpuJC7RFlRf1MClmOW2CYpkk/s\nHlSoflNMVml9cj8ZKd6rkE1BjqeK0wsrENzw+Q/JIPBTa3nxu9IupEv/0vtJOvA3\nq79F6dcbprmBEd4zzu5x4VWR6uEotpbH9yilKh1mT4aXbXj89DQNTSL9AgMBAAGj\nNTAzMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMB\nAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQCT943mlGMw4hmZrkws/oBVoHlDcvSY\nzMnOrKFYlm646Eo5RZ/i24NYs64KFqPESWHWvJnn1hriUWeEfG/Ua9zKzz8Ic/2o\nzT6eeNckMxuuAxIk7vt4q2tOZy56mGDbVjSOyWGgcpXp6xVsV2eTLEUq6lQkmDg8\ncGUTmeKFf0r0ypovBlg7BDhR63Re5DwIpRSt8ismHjwTEcGjOoykotwilSsabSrQ\no0ow2skB8XsFHcPyqAAgkJof2nqjJl/C4qSzn6VdHfq9UZmcx/kKMxdiJrt+3QCO\nirsFWNEF2U3xwRkEGIXkOmwzmFitzozdBlkBf13UuLC3PJqhoWHiLQeh\n-----END CERTIFICATE-----\n",
    "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDJjCCAg6gAwIBAgIRAMdv01qJH0MkyC8vzRJg41QwDQYJKoZIhvcNAQELBQAw\nMzEcMBoGA1UEChMTVHVyYm90IEhRIFB2dC4gTHRkLjETMBEGA1UEAxMKdHVyYm90\nLmNvbTAeFw0yMjA2MjAwNjUyNDJaFw0yMjA2MjAxODUyNDJaMDMxHDAaBgNVBAoT\nE1R1cmJvdCBIUSBQdnQuIEx0ZC4xEzARBgNVBAMTCnR1cmJvdC5jb20wggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9ca/FtanYEKqZA4hPc++BEKjQWVwA\nX4Bx1syAAZIu/seCM6ZbnYuIAhwtfl/OqUfodO0s7Zo9EYair40FmQDBtxPQOW3m\nl6K4UE4Z02vHewQsqJkXFqDnAGpKu/iRuLhU7AqmOgn61iHXdw2+d26QnfOkoNX1\n66xfH5J0UflXHYNLROCxFbXuU4m0/kSoUpk4J/GpuJC7RFlRf1MClmOW2CYpkk/s\nHlSoflNMVml9cj8ZKd6rkE1BjqeK0wsrENzw+Q/JIPBTa3nxu9IupEv/0vtJOvA3\nq79F6dcbprmBEd4zzu5x4VWR6uEotpbH9yilKh1mT4aXbXj89DQNTSL9AgMBAAGj\nNTAzMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMB\nAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQCT943mlGMw4hmZrkws/oBVoHlDcvSY\nzMnOrKFYlm646Eo5RZ/i24NYs64KFqPESWHWvJnn1hriUWeEfG/Ua9zKzz8Ic/2o\nzT6eeNckMxuuAxIk7vt4q2tOZy56mGDbVjSOyWGgcpXp6xVsV2eTLEUq6lQkmDg8\ncGUTmeKFf0r0ypovBlg7BDhR63Re5DwIpRSt8ismHjwTEcGjOoykotwilSsabSrQ\no0ow2skB8XsFHcPyqAAgkJof2nqjJl/C4qSzn6VdHfq9UZmcx/kKMxdiJrt+3QCO\nirsFWNEF2U3xwRkEGIXkOmwzmFitzozdBlkBf13UuLC3PJqhoWHiLQeh\n-----END CERTIFICATE-----\n"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "certificate_arn": "arn:aws:acm:us-east-1:632902152528:certificate/0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c",
    "domain_name": "turbot.com",
    "in_use_by": [],
    "issuer": "Turbot HQ Pvt. Ltd."
  }
]
✔ PASSED

Running SQL query: test-get-tags-query.sql
[
  {
    "tags": {
      "name": "turbottest38362"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:acm:us-east-1:632902152528:certificate/0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c"
    ],
    "certificate_arn": "arn:aws:acm:us-east-1:632902152528:certificate/0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c",
    "domain_name": "turbot.com",
    "title": "0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:acm:us-east-1:632902152528:certificate/0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c"
    ],
    "region": "us-east-1",
    "title": "0b11da8b-1bb4-4bd0-93d3-7b9bcc86ac3c"
  }
]
✔ PASSED

POSTTEST: tests/aws_acm_certificate

TEARDOWN: tests/aws_acm_certificate

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gateway_api_key []

PRETEST: tests/aws_api_gateway_api_key

TEST: tests/aws_api_gateway_api_key
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_api_gateway_api_key.named_test_resource will be created
  + resource "aws_api_gateway_api_key" "named_test_resource" {
      + arn               = (known after apply)
      + created_date      = (known after apply)
      + description       = "Managed by Terraform"
      + enabled           = true
      + id                = (known after apply)
      + last_updated_date = (known after apply)
      + name              = "turbottest90612"
      + tags              = {
          + "name" = "turbottest90612"
        }
      + tags_all          = {
          + "name" = "turbottest90612"
        }
      + value             = (sensitive value)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + created_date  = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest90612"
aws_api_gateway_api_key.named_test_resource: Creating...
aws_api_gateway_api_key.named_test_resource: Creation complete after 1s [id=mg2iu4wxak]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

created_date = "2022-06-20 06:53:26"
resource_aka = "arn:aws:apigateway:us-east-1::/apikeys/mg2iu4wxak"
resource_id = "mg2iu4wxak"
resource_name = "turbottest90612"

Running SQL query: query.sql
[
  {
    "name": "turbottest90612"
  }
]
✔ PASSED

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apikeys/mg2iu4wxak"
    ],
    "title": "turbottest90612"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apikeys/mg2iu4wxak"
    ],
    "created_date": "2022-06-20T06:53:26Z",
    "created_date": "2022-06-20 06:53:26",
    "id": "mg2iu4wxak",
    "name": "turbottest90612",
    "title": "turbottest90612"
  }
]

✘ FAILED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apikeys/mg2iu4wxak"
    ],
    "tags": {
      "name": "turbottest90612"
    },
    "title": "turbottest90612"
  }
]
✔ PASSED

TEARDOWN: tests/aws_api_gateway_api_key

SUMMARY:

✘ tests/aws_api_gateway_api_key failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gateway_authorizer []

PRETEST: tests/aws_api_gateway_authorizer

TEST: tests/aws_api_gateway_authorizer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_api_gateway_authorizer.named_test_resource will be created
  + resource "aws_api_gateway_authorizer" "named_test_resource" {
      + arn                              = (known after apply)
      + authorizer_result_ttl_in_seconds = 300
      + id                               = (known after apply)
      + identity_source                  = "method.request.header.Authorization"
      + name                             = "turbottest82974"
      + provider_arns                    = (known after apply)
      + rest_api_id                      = (known after apply)
      + type                             = "COGNITO_USER_POOLS"
    }

  # aws_api_gateway_rest_api.test will be created
  + resource "aws_api_gateway_rest_api" "test" {
      + api_key_source               = (known after apply)
      + arn                          = (known after apply)
      + binary_media_types           = (known after apply)
      + created_date                 = (known after apply)
      + description                  = (known after apply)
      + disable_execute_api_endpoint = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + minimum_compression_size     = -1
      + name                         = "turbottest82974"
      + policy                       = (known after apply)
      + root_resource_id             = (known after apply)
      + tags_all                     = (known after apply)

      + endpoint_configuration {
          + types            = (known after apply)
          + vpc_endpoint_ids = (known after apply)
        }
    }

  # aws_cognito_user_pool.pool will be created
  + resource "aws_cognito_user_pool" "pool" {
      + arn                        = (known after apply)
      + creation_date              = (known after apply)
      + custom_domain              = (known after apply)
      + domain                     = (known after apply)
      + email_verification_message = (known after apply)
      + email_verification_subject = (known after apply)
      + endpoint                   = (known after apply)
      + estimated_number_of_users  = (known after apply)
      + id                         = (known after apply)
      + last_modified_date         = (known after apply)
      + mfa_configuration          = "OFF"
      + name                       = "mypool"
      + sms_verification_message   = (known after apply)
      + tags_all                   = (known after apply)

      + admin_create_user_config {
          + allow_admin_create_user_only = (known after apply)

          + invite_message_template {
              + email_message = (known after apply)
              + email_subject = (known after apply)
              + sms_message   = (known after apply)
            }
        }

      + password_policy {
          + minimum_length                   = (known after apply)
          + require_lowercase                = (known after apply)
          + require_numbers                  = (known after apply)
          + require_symbols                  = (known after apply)
          + require_uppercase                = (known after apply)
          + temporary_password_validity_days = (known after apply)
        }

      + sms_configuration {
          + external_id    = (known after apply)
          + sns_caller_arn = (known after apply)
        }

      + verification_message_template {
          + default_email_option  = (known after apply)
          + email_message         = (known after apply)
          + email_message_by_link = (known after apply)
          + email_subject         = (known after apply)
          + email_subject_by_link = (known after apply)
          + sms_message           = (known after apply)
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_id   = (known after apply)
  + resource_name = "turbottest82974"
  + rest_api_id   = (known after apply)
aws_api_gateway_rest_api.test: Creating...
aws_cognito_user_pool.pool: Creating...
aws_api_gateway_rest_api.test: Creation complete after 1s [id=x59y5gj3d3]
aws_cognito_user_pool.pool: Creation complete after 1s [id=us-east-1_T23z9Tx7u]
aws_api_gateway_authorizer.named_test_resource: Creating...
aws_api_gateway_authorizer.named_test_resource: Creation complete after 1s [id=wxxgt8]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

resource_id = "wxxgt8"
resource_name = "turbottest82974"
rest_api_id = "x59y5gj3d3"

Running SQL query: query.sql
[
  {
    "name": "turbottest82974"
  }
]
✔ PASSED

Running SQL query: test-get-call-query.sql
[
  {
    "name": "turbottest82974",
    "rest_api_id": "x59y5gj3d3",
    "title": "turbottest82974"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "id": "wxxgt8",
    "name": "turbottest82974",
    "rest_api_id": "x59y5gj3d3",
    "title": "turbottest82974"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gateway_authorizer

TEARDOWN: tests/aws_api_gateway_authorizer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gateway_rest_api []

PRETEST: tests/aws_api_gateway_rest_api

TEST: tests/aws_api_gateway_rest_api
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_api_gateway_rest_api.named_test_resource will be created
  + resource "aws_api_gateway_rest_api" "named_test_resource" {
      + api_key_source               = (known after apply)
      + arn                          = (known after apply)
      + binary_media_types           = (known after apply)
      + created_date                 = (known after apply)
      + description                  = (known after apply)
      + disable_execute_api_endpoint = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + minimum_compression_size     = -1
      + name                         = "turbottest51309"
      + policy                       = (known after apply)
      + root_resource_id             = (known after apply)
      + tags                         = {
          + "name" = "turbottest51309"
        }
      + tags_all                     = {
          + "name" = "turbottest51309"
        }

      + endpoint_configuration {
          + types            = (known after apply)
          + vpc_endpoint_ids = (known after apply)
        }
    }

  # aws_api_gateway_rest_api_policy.test will be created
  + resource "aws_api_gateway_rest_api_policy" "test" {
      + id          = (known after apply)
      + policy      = (known after apply)
      + rest_api_id = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + created_date  = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest51309"
aws_api_gateway_rest_api.named_test_resource: Creating...
aws_api_gateway_rest_api.named_test_resource: Creation complete after 1s [id=smrjlxipj4]
aws_api_gateway_rest_api_policy.test: Creating...
aws_api_gateway_rest_api_policy.test: Creation complete after 1s [id=smrjlxipj4]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

created_date = "2022-06-20 06:54:42"
resource_aka = "arn:aws:apigateway:us-east-1::/restapis/smrjlxipj4"
resource_id = "smrjlxipj4"
resource_name = "turbottest51309"

Running SQL query: query.sql
[
  {
    "name": "turbottest51309"
  }
]
✔ PASSED

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/restapis/smrjlxipj4"
    ],
    "policy": {
      "Statement": [
        {
          "Action": "execute-api:Invoke",
          "Condition": {
            "IpAddress": {
              "aws:SourceIp": "123.123.123.123/32"
            }
          },
          "Effect": "Allow",
          "Principal": {
            "AWS": "*"
          },
          "Resource": "arn:aws:apigateway:us-east-1::/restapis/smrjlxipj4"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Statement": [
        {
          "Action": [
            "execute-api:invoke"
          ],
          "Condition": {
            "IpAddress": {
              "aws:sourceip": [
                "123.123.123.123/32"
              ]
            }
          },
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "*"
            ]
          },
          "Resource": [
            "arn:aws:apigateway:us-east-1::/restapis/smrjlxipj4"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "tags": {
      "name": "turbottest51309"
    },
    "title": "turbottest51309"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/restapis/smrjlxipj4"
    ],
    "api_id": "smrjlxipj4",
    "created_date": "2022-06-20T06:54:42Z",
    "created_date": "2022-06-20 06:54:42",
    "name": "turbottest51309",
    "tags": {
      "name": "turbottest51309"
    },
    "title": "turbottest51309"
  }
]

✘ FAILED

TEARDOWN: tests/aws_api_gateway_rest_api

SUMMARY:

✘ tests/aws_api_gateway_rest_api failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gateway_stage []

PRETEST: tests/aws_api_gateway_stage

TEST: tests/aws_api_gateway_stage
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_api_gateway_deployment.test will be created
  + resource "aws_api_gateway_deployment" "test" {
      + created_date  = (known after apply)
      + execution_arn = (known after apply)
      + id            = (known after apply)
      + invoke_url    = (known after apply)
      + rest_api_id   = (known after apply)
      + stage_name    = "dev"
    }

  # aws_api_gateway_integration.test will be created
  + resource "aws_api_gateway_integration" "test" {
      + cache_namespace      = (known after apply)
      + connection_type      = "INTERNET"
      + http_method          = "GET"
      + id                   = (known after apply)
      + passthrough_behavior = (known after apply)
      + resource_id          = (known after apply)
      + rest_api_id          = (known after apply)
      + timeout_milliseconds = 29000
      + type                 = "MOCK"
    }

  # aws_api_gateway_method.test will be created
  + resource "aws_api_gateway_method" "test" {
      + api_key_required = false
      + authorization    = "NONE"
      + http_method      = "GET"
      + id               = (known after apply)
      + resource_id      = (known after apply)
      + rest_api_id      = (known after apply)
    }

  # aws_api_gateway_resource.test will be created
  + resource "aws_api_gateway_resource" "test" {
      + id          = (known after apply)
      + parent_id   = (known after apply)
      + path        = (known after apply)
      + path_part   = "mytestresource"
      + rest_api_id = (known after apply)
    }

  # aws_api_gateway_rest_api.test will be created
  + resource "aws_api_gateway_rest_api" "test" {
      + api_key_source               = (known after apply)
      + arn                          = (known after apply)
      + binary_media_types           = (known after apply)
      + created_date                 = (known after apply)
      + description                  = (known after apply)
      + disable_execute_api_endpoint = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + minimum_compression_size     = -1
      + name                         = "turbottest15401"
      + policy                       = (known after apply)
      + root_resource_id             = (known after apply)
      + tags_all                     = (known after apply)

      + endpoint_configuration {
          + types            = (known after apply)
          + vpc_endpoint_ids = (known after apply)
        }
    }

  # aws_api_gateway_stage.named_test_resource will be created
  + resource "aws_api_gateway_stage" "named_test_resource" {
      + arn           = (known after apply)
      + deployment_id = (known after apply)
      + execution_arn = (known after apply)
      + id            = (known after apply)
      + invoke_url    = (known after apply)
      + rest_api_id   = (known after apply)
      + stage_name    = "turbottest15401"
      + tags          = {
          + "name" = "turbottest15401"
        }
      + tags_all      = {
          + "name" = "turbottest15401"
        }
      + web_acl_arn   = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_name = "turbottest15401"
  + rest_api_id   = (known after apply)
aws_api_gateway_rest_api.test: Creating...
aws_api_gateway_rest_api.test: Creation complete after 1s [id=8c2j3byu91]
aws_api_gateway_resource.test: Creating...
aws_api_gateway_resource.test: Creation complete after 0s [id=y2201w]
aws_api_gateway_method.test: Creating...
aws_api_gateway_method.test: Creation complete after 1s [id=agm-8c2j3byu91-y2201w-GET]
aws_api_gateway_integration.test: Creating...
aws_api_gateway_integration.test: Creation complete after 0s [id=agi-8c2j3byu91-y2201w-GET]
aws_api_gateway_deployment.test: Creating...
aws_api_gateway_deployment.test: Creation complete after 1s [id=bermyw]
aws_api_gateway_stage.named_test_resource: Creating...
aws_api_gateway_stage.named_test_resource: Creation complete after 1s [id=ags-8c2j3byu91-turbottest15401]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:apigateway:us-east-1::/restapis/8c2j3byu91/stages/turbottest15401"
resource_name = "turbottest15401"
rest_api_id = "8c2j3byu91"

Running SQL query: query.sql
[
  {
    "name": "turbottest15401"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/restapis/8c2j3byu91/stages/turbottest15401"
    ],
    "arn": "arn:aws:apigateway:us-east-1::/restapis/8c2j3byu91/stages/turbottest15401",
    "name": "turbottest15401",
    "rest_api_id": "8c2j3byu91",
    "tags": {
      "name": "turbottest15401"
    },
    "title": "turbottest15401"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/restapis/8c2j3byu91/stages/turbottest15401"
    ],
    "name": "turbottest15401",
    "rest_api_id": "8c2j3byu91",
    "tags": {
      "name": "turbottest15401"
    },
    "title": "turbottest15401"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gateway_stage

TEARDOWN: tests/aws_api_gateway_stage

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gateway_usage_plan []

PRETEST: tests/aws_api_gateway_usage_plan

TEST: tests/aws_api_gateway_usage_plan
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_api_gateway_deployment.test will be created
  + resource "aws_api_gateway_deployment" "test" {
      + created_date  = (known after apply)
      + execution_arn = (known after apply)
      + id            = (known after apply)
      + invoke_url    = (known after apply)
      + rest_api_id   = (known after apply)
      + stage_name    = "dev"
    }

  # aws_api_gateway_integration.test will be created
  + resource "aws_api_gateway_integration" "test" {
      + cache_namespace      = (known after apply)
      + connection_type      = "INTERNET"
      + http_method          = "GET"
      + id                   = (known after apply)
      + passthrough_behavior = (known after apply)
      + resource_id          = (known after apply)
      + rest_api_id          = (known after apply)
      + timeout_milliseconds = 29000
      + type                 = "MOCK"
    }

  # aws_api_gateway_method.test will be created
  + resource "aws_api_gateway_method" "test" {
      + api_key_required = false
      + authorization    = "NONE"
      + http_method      = "GET"
      + id               = (known after apply)
      + resource_id      = (known after apply)
      + rest_api_id      = (known after apply)
    }

  # aws_api_gateway_resource.test will be created
  + resource "aws_api_gateway_resource" "test" {
      + id          = (known after apply)
      + parent_id   = (known after apply)
      + path        = (known after apply)
      + path_part   = "mytestresource"
      + rest_api_id = (known after apply)
    }

  # aws_api_gateway_rest_api.test will be created
  + resource "aws_api_gateway_rest_api" "test" {
      + api_key_source               = (known after apply)
      + arn                          = (known after apply)
      + binary_media_types           = (known after apply)
      + created_date                 = (known after apply)
      + description                  = (known after apply)
      + disable_execute_api_endpoint = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + minimum_compression_size     = -1
      + name                         = "turbottest17219"
      + policy                       = (known after apply)
      + root_resource_id             = (known after apply)
      + tags_all                     = (known after apply)

      + endpoint_configuration {
          + types            = (known after apply)
          + vpc_endpoint_ids = (known after apply)
        }
    }

  # aws_api_gateway_stage.test will be created
  + resource "aws_api_gateway_stage" "test" {
      + arn           = (known after apply)
      + deployment_id = (known after apply)
      + execution_arn = (known after apply)
      + id            = (known after apply)
      + invoke_url    = (known after apply)
      + rest_api_id   = (known after apply)
      + stage_name    = "turbottest17219"
      + tags_all      = (known after apply)
      + web_acl_arn   = (known after apply)
    }

  # aws_api_gateway_usage_plan.named_test_resource will be created
  + resource "aws_api_gateway_usage_plan" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest17219"
      + tags     = {
          + "name" = "turbottest17219"
        }
      + tags_all = {
          + "name" = "turbottest17219"
        }
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest17219"
aws_api_gateway_rest_api.test: Creating...
aws_api_gateway_usage_plan.named_test_resource: Creating...
aws_api_gateway_rest_api.test: Creation complete after 2s [id=ip35abmynl]
aws_api_gateway_resource.test: Creating...
aws_api_gateway_usage_plan.named_test_resource: Creation complete after 2s [id=xjra46]
aws_api_gateway_resource.test: Creation complete after 0s [id=5fg1da]
aws_api_gateway_method.test: Creating...
aws_api_gateway_method.test: Creation complete after 0s [id=agm-ip35abmynl-5fg1da-GET]
aws_api_gateway_integration.test: Creating...
aws_api_gateway_integration.test: Creation complete after 1s [id=agi-ip35abmynl-5fg1da-GET]
aws_api_gateway_deployment.test: Creating...
aws_api_gateway_deployment.test: Creation complete after 1s [id=txa68l]
aws_api_gateway_stage.test: Creating...
aws_api_gateway_stage.test: Creation complete after 0s [id=ags-ip35abmynl-turbottest17219]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:apigateway:us-east-1::/usageplans/xjra46"
resource_id = "xjra46"
resource_name = "turbottest17219"

Running SQL query: query.sql
[
  {
    "name": "turbottest17219"
  }
]
✔ PASSED

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/usageplans/xjra46"
    ],
    "tags": {
      "name": "turbottest17219"
    },
    "title": "turbottest17219"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/usageplans/xjra46"
    ],
    "id": "xjra46",
    "name": "turbottest17219",
    "tags": {
      "name": "turbottest17219"
    },
    "title": "turbottest17219"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gateway_usage_plan

TEARDOWN: tests/aws_api_gateway_usage_plan

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gatewayv2_api []

PRETEST: tests/aws_api_gatewayv2_api

TEST: tests/aws_api_gatewayv2_api
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_apigatewayv2_api.named_test_resource will be created
  + resource "aws_apigatewayv2_api" "named_test_resource" {
      + api_endpoint                 = (known after apply)
      + api_key_selection_expression = "$request.header.x-api-key"
      + arn                          = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + name                         = "turbottest15912"
      + protocol_type                = "HTTP"
      + route_selection_expression   = "$request.method $request.path"
      + tags                         = {
          + "name" = "turbottest15912"
        }
      + tags_all                     = {
          + "name" = "turbottest15912"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + api_endpoint  = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest15912"
aws_apigatewayv2_api.named_test_resource: Creating...
aws_apigatewayv2_api.named_test_resource: Creation complete after 2s [id=emjfj6lkvl]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

api_endpoint = "https://emjfj6lkvl.execute-api.us-east-1.amazonaws.com"
resource_aka = "arn:aws:apigateway:us-east-1::/apis/emjfj6lkvl"
resource_id = "emjfj6lkvl"
resource_name = "turbottest15912"

Running SQL query: query.sql
[
  {
    "name": "turbottest15912"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apis/emjfj6lkvl"
    ],
    "tags": {
      "name": "turbottest15912"
    },
    "title": "turbottest15912"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apis/emjfj6lkvl"
    ],
    "api_endpoint": "https://emjfj6lkvl.execute-api.us-east-1.amazonaws.com",
    "api_id": "emjfj6lkvl",
    "name": "turbottest15912",
    "tags": {
      "name": "turbottest15912"
    },
    "title": "turbottest15912"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gatewayv2_api

TEARDOWN: tests/aws_api_gatewayv2_api

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gatewayv2_domain_name []

PRETEST: tests/aws_api_gatewayv2_domain_name

TEST: tests/aws_api_gatewayv2_domain_name
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_acm_certificate.example will be created
  + resource "aws_acm_certificate" "example" {
      + arn                       = (known after apply)
      + certificate_body          = (known after apply)
      + domain_name               = (known after apply)
      + domain_validation_options = (known after apply)
      + id                        = (known after apply)
      + private_key               = (sensitive value)
      + status                    = (known after apply)
      + subject_alternative_names = (known after apply)
      + tags_all                  = (known after apply)
      + validation_emails         = (known after apply)
      + validation_method         = (known after apply)
    }

  # aws_apigatewayv2_domain_name.named_test_resource will be created
  + resource "aws_apigatewayv2_domain_name" "named_test_resource" {
      + api_mapping_selection_expression = (known after apply)
      + arn                              = (known after apply)
      + domain_name                      = "turbottest74773.com"
      + id                               = (known after apply)
      + tags                             = {
          + "name" = "turbottest74773"
        }
      + tags_all                         = {
          + "name" = "turbottest74773"
        }

      + domain_name_configuration {
          + certificate_arn                        = (known after apply)
          + endpoint_type                          = "REGIONAL"
          + hosted_zone_id                         = (known after apply)
          + ownership_verification_certificate_arn = (known after apply)
          + security_policy                        = "TLS_1_2"
          + target_domain_name                     = (known after apply)
        }
    }

  # tls_private_key.example will be created
  + resource "tls_private_key" "example" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 2048
    }

  # tls_self_signed_cert.example will be created
  + resource "tls_self_signed_cert" "example" {
      + allowed_uses          = [
          + "key_encipherment",
          + "digital_signature",
          + "server_auth",
        ]
      + cert_pem              = (known after apply)
      + early_renewal_hours   = 0
      + id                    = (known after apply)
      + key_algorithm         = "RSA"
      + private_key_pem       = (sensitive value)
      + ready_for_renewal     = true
      + validity_end_time     = (known after apply)
      + validity_period_hours = 12
      + validity_start_time   = (known after apply)

      + subject {
          + common_name  = "turbottest74773.com"
          + organization = "Turbot HQ Pvt. Ltd."
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + api_mapping_selection_expression = (known after apply)
  + resource_aka                     = (known after apply)
  + resource_id                      = (known after apply)
  + resource_name                    = "turbottest74773.com"
  + tags                             = "turbottest74773"
tls_private_key.example: Creating...
tls_private_key.example: Creation complete after 0s [id=723d19745a9f7ae0c1365dac0cf9cd4157e7874c]
tls_self_signed_cert.example: Creating...
tls_self_signed_cert.example: Creation complete after 0s [id=39617917335543390694426698873219741895]
aws_acm_certificate.example: Creating...
aws_acm_certificate.example: Creation complete after 2s [id=arn:aws:acm:us-east-1:632902152528:certificate/6c76b08e-513b-452f-9313-a2589a2139f6]
aws_apigatewayv2_domain_name.named_test_resource: Creating...
aws_apigatewayv2_domain_name.named_test_resource: Creation complete after 5s [id=turbottest74773.com]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with tls_self_signed_cert.example,
  on variables.tf line 55, in resource "tls_self_signed_cert" "example":
  55:   key_algorithm   = "RSA"

This is now ignored, as the key algorithm is inferred from the
`private_key_pem`.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

api_mapping_selection_expression = "$request.basepath"
resource_aka = "arn:aws:apigateway:us-east-1::/domainnames/turbottest74773.com"
resource_id = "turbottest74773.com"
resource_name = "turbottest74773.com"
tags = "turbottest74773"

Running SQL query: query.sql
[
  {
    "domain_name": "turbottest74773.com"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/domainnames/turbottest74773.com"
    ],
    "tags": {
      "name": "turbottest74773"
    },
    "title": "turbottest74773.com"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/domainnames/turbottest74773.com"
    ],
    "domain_name": "turbottest74773.com",
    "tags": {
      "name": "turbottest74773"
    },
    "title": "turbottest74773.com"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gatewayv2_domain_name

TEARDOWN: tests/aws_api_gatewayv2_domain_name

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gatewayv2_integration []

PRETEST: tests/aws_api_gatewayv2_integration

TEST: tests/aws_api_gatewayv2_integration
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.archive_file.zip will be read during apply
  # (config refers to values not yet known)
 <= data "archive_file" "zip"  {
      + id                  = (known after apply)
      + output_base64sha256 = (known after apply)
      + output_md5          = (known after apply)
      + output_path         = "/tmp/tests/aws_api_gatewayv2_integration/terraform/test/../../test.zip"
      + output_sha          = (known after apply)
      + output_size         = (known after apply)
      + source_file         = "/tmp/tests/aws_api_gatewayv2_integration/terraform/test/../../test.py"
      + type                = "zip"
    }

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = "arn:${partition}:apigateway:${region}::/apis/${api_id}/integrations/${integration_id}"
      + vars     = {
          + "alternate_region" = "us-east-2"
          + "api_id"           = (known after apply)
          + "integration_id"   = (known after apply)
          + "partition"        = "aws"
          + "region"           = "us-east-1"
        }
    }

  # aws_apigatewayv2_api.named_test_resource will be created
  + resource "aws_apigatewayv2_api" "named_test_resource" {
      + api_endpoint                 = (known after apply)
      + api_key_selection_expression = "$request.header.x-api-key"
      + arn                          = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + name                         = "turbottest57084"
      + protocol_type                = "HTTP"
      + route_selection_expression   = "$request.method $request.path"
      + tags                         = {
          + "name" = "turbottest57084"
        }
      + tags_all                     = {
          + "name" = "turbottest57084"
        }
    }

  # aws_apigatewayv2_integration.named_test_resource will be created
  + resource "aws_apigatewayv2_integration" "named_test_resource" {
      + api_id                                    = (known after apply)
      + connection_type                           = "INTERNET"
      + description                               = "Lambda example"
      + id                                        = (known after apply)
      + integration_response_selection_expression = (known after apply)
      + integration_type                          = "AWS_PROXY"
      + integration_uri                           = (known after apply)
      + payload_format_version                    = "1.0"
      + timeout_milliseconds                      = (known after apply)
    }

  # aws_iam_role.aws_lambda_function will be created
  + resource "aws_iam_role" "aws_lambda_function" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "lambda.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest57084"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_lambda_function.named_test_resource will be created
  + resource "aws_lambda_function" "named_test_resource" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "/tmp/tests/aws_api_gatewayv2_integration/terraform/test/../../test.zip"
      + function_name                  = "turbottest57084"
      + handler                        = "test.test"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + reserved_concurrent_executions = -1
      + role                           = (known after apply)
      + runtime                        = "python3.7"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + source_code_hash               = (known after apply)
      + source_code_size               = (known after apply)
      + tags                           = {
          + "name" = "turbottest57084"
        }
      + tags_all                       = {
          + "name" = "turbottest57084"
        }
      + timeout                        = 3
      + version                        = (known after apply)

      + ephemeral_storage {
          + size = (known after apply)
        }

      + tracing_config {
          + mode = (known after apply)
        }
    }

  # local_file.python_file will be created
  + resource "local_file" "python_file" {
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/tests/aws_api_gatewayv2_integration/terraform/test/../../test.py"
      + id                   = (known after apply)
      + sensitive_content    = (sensitive value)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + api_id       = (known after apply)
  + resource_aka = (known after apply)
  + resource_id  = (known after apply)
local_file.python_file: Creating...
local_file.python_file: Creation complete after 0s [id=31a055a187e07d0bd8fca8ceb1f633aa4497fe53]
data.archive_file.zip: Reading...
data.archive_file.zip: Read complete after 0s [id=5268107579eeeec9b40269bd6c4ac9b5b42770e5]
aws_apigatewayv2_api.named_test_resource: Creating...
aws_iam_role.aws_lambda_function: Creating...
aws_apigatewayv2_api.named_test_resource: Creation complete after 2s [id=6hz4wet1jl]
aws_iam_role.aws_lambda_function: Creation complete after 2s [id=turbottest57084]
aws_lambda_function.named_test_resource: Creating...
aws_lambda_function.named_test_resource: Still creating... [10s elapsed]
aws_lambda_function.named_test_resource: Creation complete after 16s [id=turbottest57084]
aws_apigatewayv2_integration.named_test_resource: Creating...
aws_apigatewayv2_integration.named_test_resource: Creation complete after 1s [id=ukiphco]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=02fe2d5626d6b7a6aca306f7ff1a483f13720ec1650d07dd530669b5bac1fadf]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with local_file.python_file,
  on variables.tf line 60, in resource "local_file" "python_file":
  60:     sensitive_content      = "def test (event, context):\n\tprint ('This is a test for integration testing to check creation of a lambda function')"

Use the `local_sensitive_file` resource instead.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

api_id = "6hz4wet1jl"
resource_aka = "arn:aws:apigateway:us-east-1::/apis/6hz4wet1jl/integrations/ukiphco"
resource_id = "ukiphco"

Running SQL query: query.sql
[
  {
    "integration_id": "ukiphco"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apis/6hz4wet1jl/integrations/ukiphco"
    ],
    "integration_id": "ukiphco",
    "integration_type": "AWS_PROXY"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apis/6hz4wet1jl/integrations/ukiphco"
    ],
    "api_id": "6hz4wet1jl",
    "integration_id": "ukiphco",
    "integration_type": "AWS_PROXY",
    "title": "ukiphco"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gatewayv2_integration

TEARDOWN: tests/aws_api_gatewayv2_integration

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_api_gatewayv2_stage []

PRETEST: tests/aws_api_gatewayv2_stage

TEST: tests/aws_api_gatewayv2_stage
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_apigatewayv2_api.test will be created
  + resource "aws_apigatewayv2_api" "test" {
      + api_endpoint                 = (known after apply)
      + api_key_selection_expression = "$request.header.x-api-key"
      + arn                          = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + name                         = "turbottest1066"
      + protocol_type                = "HTTP"
      + route_selection_expression   = "$request.method $request.path"
      + tags_all                     = (known after apply)
    }

  # aws_apigatewayv2_stage.named_test_resource will be created
  + resource "aws_apigatewayv2_stage" "named_test_resource" {
      + api_id        = (known after apply)
      + arn           = (known after apply)
      + auto_deploy   = false
      + deployment_id = (known after apply)
      + execution_arn = (known after apply)
      + id            = (known after apply)
      + invoke_url    = (known after apply)
      + name          = "turbottest1066"
      + tags          = {
          + "name" = "turbottest1066"
        }
      + tags_all      = {
          + "name" = "turbottest1066"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + api_id        = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest1066"
aws_apigatewayv2_api.test: Creating...
aws_apigatewayv2_api.test: Creation complete after 2s [id=v3ezvtgufi]
aws_apigatewayv2_stage.named_test_resource: Creating...
aws_apigatewayv2_stage.named_test_resource: Creation complete after 1s [id=turbottest1066]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

api_id = "v3ezvtgufi"
resource_aka = "arn:aws:apigateway:us-east-1::/apis/v3ezvtgufi/stages/turbottest1066"
resource_name = "turbottest1066"

Running SQL query: query.sql
[
  {
    "stage_name": "turbottest1066"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apis/v3ezvtgufi/stages/turbottest1066"
    ],
    "tags": {
      "name": "turbottest1066"
    },
    "title": "turbottest1066"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:apigateway:us-east-1::/apis/v3ezvtgufi/stages/turbottest1066"
    ],
    "api_id": "v3ezvtgufi",
    "stage_name": "turbottest1066",
    "tags": {
      "name": "turbottest1066"
    },
    "title": "turbottest1066"
  }
]
✔ PASSED

POSTTEST: tests/aws_api_gatewayv2_stage

TEARDOWN: tests/aws_api_gatewayv2_stage

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_appautoscaling_target []

PRETEST: tests/aws_appautoscaling_target

TEST: tests/aws_appautoscaling_target
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_appautoscaling_target.named_test_resource will be created
  + resource "aws_appautoscaling_target" "named_test_resource" {
      + id                 = (known after apply)
      + max_capacity       = 100
      + min_capacity       = 5
      + resource_id        = "table/turbottest20781"
      + role_arn           = (known after apply)
      + scalable_dimension = "dynamodb:table:ReadCapacityUnits"
      + service_namespace  = "dynamodb"
    }

  # aws_dynamodb_table.example will be created
  + resource "aws_dynamodb_table" "example" {
      + arn              = (known after apply)
      + billing_mode     = "PROVISIONED"
      + hash_key         = "userId"
      + id               = (known after apply)
      + name             = "turbottest20781"
      + read_capacity    = 20
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags             = {
          + "name" = "turbottest20781"
        }
      + tags_all         = {
          + "name" = "turbottest20781"
        }
      + write_capacity   = 20

      + attribute {
          + name = "userId"
          + type = "S"
        }

      + point_in_time_recovery {
          + enabled = (known after apply)
        }

      + server_side_encryption {
          + enabled     = (known after apply)
          + kms_key_arn = (known after apply)
        }

      + ttl {
          + attribute_name = (known after apply)
          + enabled        = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_id   = (known after apply)
  + resource_name = "turbottest20781"
aws_dynamodb_table.example: Creating...
aws_dynamodb_table.example: Still creating... [10s elapsed]
aws_dynamodb_table.example: Creation complete after 16s [id=turbottest20781]
aws_appautoscaling_target.named_test_resource: Creating...
aws_appautoscaling_target.named_test_resource: Creation complete after 1s [id=table/turbottest20781]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_id = "table/turbottest20781"
resource_name = "turbottest20781"

Running SQL query: test-get-query.sql
[
  {
    "partition": "aws",
    "region": "us-east-1",
    "resource_id": "table/turbottest20781"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "partition": "aws",
    "region": "us-east-1",
    "resource_id": "table/turbottest20781"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "region": "us-east-1",
    "title": "table/turbottest20781"
  }
]
✔ PASSED

POSTTEST: tests/aws_appautoscaling_target

TEARDOWN: tests/aws_appautoscaling_target

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_auditmanager_assessment []

PRETEST: tests/aws_auditmanager_assessment

TEST: tests/aws_auditmanager_assessment
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.assessment will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "assessment"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_auditmanager_assessment/terraform/test/assessment.json"
      + id             = (known after apply)
    }

  # data.local_file.framework will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "framework"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_auditmanager_assessment/terraform/test/list-framework.json"
      + id             = (known after apply)
    }

  # aws_s3_bucket.named_test_resource will be created
  + resource "aws_s3_bucket" "named_test_resource" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest77978"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # null_resource.list_frameworks will be created
  + resource "null_resource" "list_frameworks" {
      + id = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

  # null_resource.tag_assessment will be created
  + resource "null_resource" "tag_assessment" {
      + id = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id     = "632902152528"
  + assessment_arn = (known after apply)
  + assessment_id  = (known after apply)
  + aws_partition  = "aws"
  + aws_region     = "us-east-1"
  + resource_name  = "turbottest77978"
null_resource.list_frameworks: Creating...
aws_s3_bucket.named_test_resource: Creating...
null_resource.list_frameworks: Provisioning with 'local-exec'...
null_resource.list_frameworks (local-exec): Executing: ["/bin/sh" "-c" "aws auditmanager list-assessment-frameworks --framework-type Standard --output json --profile default --region us-east-1 > /tmp/tests/aws_auditmanager_assessment/terraform/test/list-framework.json"]
null_resource.list_frameworks: Creation complete after 3s [id=4837210837426758881]
data.local_file.framework: Reading...
data.local_file.framework: Read complete after 0s [id=c45ef443edf33e749caa5ee7c57304404f382dd6]
aws_s3_bucket.named_test_resource: Creation complete after 4s [id=turbottest77978]
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws auditmanager create-assessment --name turbottest77978 --description 'Test assessment to validate table outcomes.' --scope 'awsAccounts=[{id=\"632902152528\"}],awsServices=[{serviceName=\"ec2\"}]' --roles 'roleArn=\"arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f\",roleType=\"PROCESS_OWNER\"' --assessment-reports-destination 'destinationType=\"S3\",destination=\"s3://turbottest77978\"' --framework-id 'f7cdaffa-69c5-367a-8c58-c9a4bc5704e1' --profile default --region  us-east-1 > /tmp/tests/aws_auditmanager_assessment/terraform/test/assessment.json"]

null_resource.named_test_resource (local-exec): An error occurred (ValidationException) when calling the CreateAssessment operation: 1 validation error detected: Value 'arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f' at 'roles.1.member.roleArn' failed to satisfy constraint: Member must satisfy regular expression pattern: ^arn:.*:iam:.*

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: local-exec provisioner error

  with null_resource.named_test_resource,
  on variables.tf line 73, in resource "null_resource" "named_test_resource":
  73:   provisioner "local-exec" {

Error running command 'aws auditmanager create-assessment --name
turbottest77978 --description 'Test assessment to validate table outcomes.'
--scope 'awsAccounts=[{id="632902152528"}],awsServices=[{serviceName="ec2"}]'
--roles
'roleArn="arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f",roleType="PROCESS_OWNER"'
--assessment-reports-destination
'destinationType="S3",destination="s3://turbottest77978"' --framework-id
'f7cdaffa-69c5-367a-8c58-c9a4bc5704e1' --profile default --region  us-east-1
> /tmp/tests/aws_auditmanager_assessment/terraform/test/assessment.json':
exit status 254. Output: 
An error occurred (ValidationException) when calling the CreateAssessment
operation: 1 validation error detected: Value
'arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f'
at 'roles.1.member.roleArn' failed to satisfy constraint: Member must satisfy
regular expression pattern: ^arn:.*:iam:.*

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_auditmanager_assessment

SUMMARY:

✘ tests/aws_auditmanager_assessment failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_auditmanager_control []

PRETEST: tests/aws_auditmanager_control

TEST: tests/aws_auditmanager_control
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.control will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "control"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_auditmanager_control/terraform/test/control.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + control_id    = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest1665"
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "      aws auditmanager create-control --name turbottest1665 --control-mapping-sources \"sourceName\"=turbottest1665,\"sourceType\"=\"AWS_Cloudtrail\",\"sourceSetUpOption\"=\"System_Controls_Mapping\",sourceKeyword=\"{keywordInputType=\"SELECT_FROM_LIST\",keywordValue=\"a4b_ApproveSkill\"}\" --tags name=turbottest1665 --profile default > /tmp/tests/aws_auditmanager_control/terraform/test/control.json;\n"]
null_resource.named_test_resource: Creation complete after 2s [id=6088740443582087703]
data.local_file.control: Reading...
data.local_file.control: Read complete after 0s [id=459c96b2a40c695276b27ece0ece642422d51ba7]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
control_id = "738b2fc6-1b54-42fe-8a12-8ee262568ce8"
resource_aka = "arn:aws:auditmanager:us-east-1:632902152528:control/738b2fc6-1b54-42fe-8a12-8ee262568ce8"
resource_name = "turbottest1665"

Running SQL query: test-get-query.sql
[
  {
    "control_sources": "AWS CloudTrail",
    "id": "738b2fc6-1b54-42fe-8a12-8ee262568ce8",
    "name": "turbottest1665",
    "type": "Custom"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = TooManyRequestsException: 
	status code: 429, request id: b7dc3fb6-9da3-456d-8fcc-7782190af504 (SQLSTATE HV000)
{}
[
  {
    "control_sources": "AWS CloudTrail",
    "id": "738b2fc6-1b54-42fe-8a12-8ee262568ce8",
    "name": "turbottest1665",
    "type": "Custom"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:auditmanager:us-east-1:632902152528:control/738b2fc6-1b54-42fe-8a12-8ee262568ce8"
    ],
    "tags": {
      "name": "turbottest1665"
    },
    "title": "turbottest1665"
  }
]
✔ PASSED

TEARDOWN: tests/aws_auditmanager_control

SUMMARY:

✘ tests/aws_auditmanager_control failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_auditmanager_framework []

PRETEST: tests/aws_auditmanager_framework

TEST: tests/aws_auditmanager_framework
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_auditmanager_framework/terraform/test/output.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + arn           = (known after apply)
  + aws_account   = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + id            = (known after apply)
  + name          = (known after apply)
  + type          = (known after apply)
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws auditmanager list-assessment-frameworks --framework-type Standard --output json --profile default --region us-east-1 > /tmp/tests/aws_auditmanager_framework/terraform/test/output.json"]
null_resource.named_test_resource: Creation complete after 1s [id=5151847613981376402]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=c45ef443edf33e749caa5ee7c57304404f382dd6]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

arn = "arn:aws:auditmanager:us-east-1::assessmentFramework/f7cdaffa-69c5-367a-8c58-c9a4bc5704e1"
aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
id = "f7cdaffa-69c5-367a-8c58-c9a4bc5704e1"
name = "HIPAA"
type = "Standard"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:auditmanager:us-east-1::assessmentFramework/f7cdaffa-69c5-367a-8c58-c9a4bc5704e1",
    "id": "f7cdaffa-69c5-367a-8c58-c9a4bc5704e1",
    "name": "HIPAA",
    "partition": "aws",
    "type": "Standard"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:auditmanager:us-east-1::assessmentFramework/f7cdaffa-69c5-367a-8c58-c9a4bc5704e1",
    "id": "f7cdaffa-69c5-367a-8c58-c9a4bc5704e1",
    "name": "HIPAA",
    "partition": "aws",
    "type": "Standard"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:auditmanager:ap-south-1::assessmentFramework/f7cdaffa-69c5-367a-8c58-c9a4bc5704e1"
    ],
    "title": "HIPAA"
  },
  {
    "akas": [
      "arn:aws:auditmanager:us-east-1::assessmentFramework/f7cdaffa-69c5-367a-8c58-c9a4bc5704e1"
    ],
    "title": "HIPAA"
  }
]

✘ FAILED

TEARDOWN: tests/aws_auditmanager_framework

SUMMARY:

✘ tests/aws_auditmanager_framework failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_backup_plan []

PRETEST: tests/aws_backup_plan

TEST: tests/aws_backup_plan
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_backup_plan.named_test_resource will be created
  + resource "aws_backup_plan" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest57914"
      + tags_all = (known after apply)
      + version  = (known after apply)

      + rule {
          + completion_window        = 180
          + enable_continuous_backup = false
          + rule_name                = "tf_example_backup_rule"
          + schedule                 = "cron(0 12 * * ? *)"
          + start_window             = 60
          + target_vault_name        = "turbottest57914"
        }
    }

  # aws_backup_vault.named_test_resource will be created
  + resource "aws_backup_vault" "named_test_resource" {
      + arn             = (known after apply)
      + id              = (known after apply)
      + kms_key_arn     = (known after apply)
      + name            = "turbottest57914"
      + recovery_points = (known after apply)
      + tags_all        = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + id           = (known after apply)
  + resource_aka = (known after apply)
aws_backup_vault.named_test_resource: Creating...
aws_backup_vault.named_test_resource: Creation complete after 2s [id=turbottest57914]
aws_backup_plan.named_test_resource: Creating...
aws_backup_plan.named_test_resource: Creation complete after 0s [id=85f4a45d-e914-45ee-8e96-68cf301bbee3]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

id = "85f4a45d-e914-45ee-8e96-68cf301bbee3"
resource_aka = "arn:aws:backup:us-east-1:632902152528:backup-plan:85f4a45d-e914-45ee-8e96-68cf301bbee3"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:backup:us-east-1:632902152528:backup-plan:85f4a45d-e914-45ee-8e96-68cf301bbee3",
    "backup_plan_id": "85f4a45d-e914-45ee-8e96-68cf301bbee3"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:backup:us-east-1:632902152528:backup-plan:85f4a45d-e914-45ee-8e96-68cf301bbee3",
    "backup_plan_id": "85f4a45d-e914-45ee-8e96-68cf301bbee3"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:backup:us-east-1:632902152528:backup-plan:85f4a45d-e914-45ee-8e96-68cf301bbee3"
    ]
  }
]
✔ PASSED

POSTTEST: tests/aws_backup_plan

TEARDOWN: tests/aws_backup_plan

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_backup_selection []

PRETEST: tests/aws_backup_selection

TEST: tests/aws_backup_selection
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_backup_plan.named_test_resource will be created
  + resource "aws_backup_plan" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest5498"
      + tags_all = (known after apply)
      + version  = (known after apply)

      + rule {
          + completion_window        = 180
          + enable_continuous_backup = false
          + rule_name                = "turbottest5498"
          + schedule                 = "cron(0 12 * * ? *)"
          + start_window             = 60
          + target_vault_name        = "turbottest5498"
        }
    }

  # aws_backup_selection.named_test_resource will be created
  + resource "aws_backup_selection" "named_test_resource" {
      + iam_role_arn  = (known after apply)
      + id            = (known after apply)
      + name          = "turbottest5498"
      + not_resources = (known after apply)
      + plan_id       = (known after apply)
      + resources     = (known after apply)

      + condition {
          + string_equals {
              + key   = (known after apply)
              + value = (known after apply)
            }

          + string_like {
              + key   = (known after apply)
              + value = (known after apply)
            }

          + string_not_equals {
              + key   = (known after apply)
              + value = (known after apply)
            }

          + string_not_like {
              + key   = (known after apply)
              + value = (known after apply)
            }
        }
    }

  # aws_backup_vault.named_test_resource will be created
  + resource "aws_backup_vault" "named_test_resource" {
      + arn             = (known after apply)
      + id              = (known after apply)
      + kms_key_arn     = (known after apply)
      + name            = "turbottest5498"
      + recovery_points = (known after apply)
      + tags_all        = (known after apply)
    }

  # aws_ebs_volume.named_test_resource will be created
  + resource "aws_ebs_volume" "named_test_resource" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 1
      + snapshot_id       = (known after apply)
      + tags              = {
          + "Name" = "turbottest5498"
        }
      + tags_all          = {
          + "Name" = "turbottest5498"
        }
      + throughput        = (known after apply)
      + type              = (known after apply)
    }

  # aws_iam_role.example will be created
  + resource "aws_iam_role" "example" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "sts:AssumeRole",
                        ]
                      + Effect    = "allow"
                      + Principal = {
                          + Service = [
                              + "backup.amazonaws.com",
                            ]
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest5498"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.example will be created
  + resource "aws_iam_role_policy_attachment" "example" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup"
      + role       = "turbottest5498"
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + iam_role_arn  = (known after apply)
  + plan_id       = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest5498"
  + selection_id  = (known after apply)
  + volume_arn    = (known after apply)
aws_iam_role.example: Creating...
aws_ebs_volume.named_test_resource: Creating...
aws_backup_vault.named_test_resource: Creating...
aws_backup_vault.named_test_resource: Creation complete after 1s [id=turbottest5498]
aws_backup_plan.named_test_resource: Creating...
aws_iam_role.example: Creation complete after 2s [id=turbottest5498]
aws_iam_role_policy_attachment.example: Creating...
aws_backup_plan.named_test_resource: Creation complete after 1s [id=2117d84e-3330-44a4-b831-5c7ead785f78]
aws_iam_role_policy_attachment.example: Creation complete after 0s [id=turbottest5498-20220620070802002400000001]
aws_ebs_volume.named_test_resource: Still creating... [10s elapsed]
aws_ebs_volume.named_test_resource: Creation complete after 11s [id=vol-0f55447fb8dbaa441]
aws_backup_selection.named_test_resource: Creating...
aws_backup_selection.named_test_resource: Creation complete after 1s [id=b669698b-6067-49ee-b7c5-6f59f9cb6a2e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

iam_role_arn = "arn:aws:iam::632902152528:role/turbottest5498"
plan_id = "2117d84e-3330-44a4-b831-5c7ead785f78"
resource_aka = "arn:aws:backup:us-east-1:632902152528:backup-plan:2117d84e-3330-44a4-b831-5c7ead785f78/selection/b669698b-6067-49ee-b7c5-6f59f9cb6a2e"
resource_name = "turbottest5498"
selection_id = "b669698b-6067-49ee-b7c5-6f59f9cb6a2e"
volume_arn = "arn:aws:ec2:us-east-1:632902152528:volume/vol-0f55447fb8dbaa441"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:backup:us-east-1:632902152528:backup-plan:2117d84e-3330-44a4-b831-5c7ead785f78/selection/b669698b-6067-49ee-b7c5-6f59f9cb6a2e",
    "backup_plan_id": "2117d84e-3330-44a4-b831-5c7ead785f78",
    "iam_role_arn": "arn:aws:iam::632902152528:role/turbottest5498",
    "resources": [
      "arn:aws:ec2:us-east-1:632902152528:volume/vol-0f55447fb8dbaa441"
    ],
    "selection_id": "b669698b-6067-49ee-b7c5-6f59f9cb6a2e",
    "selection_name": "turbottest5498"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:backup:us-east-1:632902152528:backup-plan:2117d84e-3330-44a4-b831-5c7ead785f78/selection/b669698b-6067-49ee-b7c5-6f59f9cb6a2e",
    "backup_plan_id": "2117d84e-3330-44a4-b831-5c7ead785f78",
    "selection_id": "b669698b-6067-49ee-b7c5-6f59f9cb6a2e"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:backup:us-east-1:632902152528:backup-plan:2117d84e-3330-44a4-b831-5c7ead785f78/selection/b669698b-6067-49ee-b7c5-6f59f9cb6a2e"
    ],
    "title": "turbottest5498"
  }
]
✔ PASSED

POSTTEST: tests/aws_backup_selection

TEARDOWN: tests/aws_backup_selection

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_backup_vault []

PRETEST: tests/aws_backup_vault

TEST: tests/aws_backup_vault
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_backup_vault.named_test_resource will be created
  + resource "aws_backup_vault" "named_test_resource" {
      + arn             = (known after apply)
      + id              = (known after apply)
      + kms_key_arn     = (known after apply)
      + name            = "turbottest12589"
      + recovery_points = (known after apply)
      + tags_all        = (known after apply)
    }

  # aws_backup_vault_policy.named_test_resource will be created
  + resource "aws_backup_vault_policy" "named_test_resource" {
      + backup_vault_arn  = (known after apply)
      + backup_vault_name = "turbottest12589"
      + id                = (known after apply)
      + policy            = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + id           = (known after apply)
  + resource_aka = (known after apply)
aws_backup_vault.named_test_resource: Creating...
aws_backup_vault.named_test_resource: Creation complete after 1s [id=turbottest12589]
aws_backup_vault_policy.named_test_resource: Creating...
aws_backup_vault_policy.named_test_resource: Creation complete after 1s [id=turbottest12589]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

id = "turbottest12589"
resource_aka = "arn:aws:backup:us-east-1:632902152528:backup-vault:turbottest12589"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:backup:us-east-1:632902152528:backup-vault:turbottest12589",
    "name": "turbottest12589"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest12589",
    "policy": {
      "Id": "default",
      "Statement": [
        {
          "Action": [
            "backup:DescribeBackupVault",
            "backup:DeleteBackupVault",
            "backup:PutBackupVaultAccessPolicy",
            "backup:DeleteBackupVaultAccessPolicy",
            "backup:GetBackupVaultAccessPolicy",
            "backup:StartBackupJob",
            "backup:GetBackupVaultNotifications",
            "backup:PutBackupVaultNotifications"
          ],
          "Effect": "Allow",
          "Principal": {
            "AWS": "*"
          },
          "Resource": "arn:aws:backup:us-east-1:632902152528:backup-vault:turbottest12589",
          "Sid": "default"
        }
      ],
      "Version": "2012-10-17"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:backup:us-east-1:632902152528:backup-vault:turbottest12589",
    "name": "turbottest12589"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:backup:us-east-1:632902152528:backup-vault:turbottest12589"
    ],
    "title": "turbottest12589"
  }
]
✔ PASSED

POSTTEST: tests/aws_backup_vault

TEARDOWN: tests/aws_backup_vault

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudformation_stack []

PRETEST: tests/aws_cloudformation_stack

TEST: tests/aws_cloudformation_stack
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudformation_stack.named_test_resource will be created
  + resource "aws_cloudformation_stack" "named_test_resource" {
      + id            = (known after apply)
      + name          = "turbottest9335"
      + outputs       = (known after apply)
      + parameters    = (known after apply)
      + policy_body   = (known after apply)
      + tags          = {
          + "name" = "turbottest9335"
        }
      + tags_all      = {
          + "name" = "turbottest9335"
        }
      + template_body = jsonencode(
            {
              + Resources = {
                  + CloudFormationStackTest = {
                      + Type = "AWS::SQS::Queue"
                    }
                }
            }
        )
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest9335"
aws_cloudformation_stack.named_test_resource: Creating...
aws_cloudformation_stack.named_test_resource: Still creating... [10s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [20s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [30s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [40s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [50s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [1m0s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [1m10s elapsed]
aws_cloudformation_stack.named_test_resource: Still creating... [1m20s elapsed]
aws_cloudformation_stack.named_test_resource: Creation complete after 1m23s [id=arn:aws:cloudformation:us-east-1:632902152528:stack/turbottest9335/f22213a0-f067-11ec-a5bd-0a4a75b1a30f]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
region_name = "us-east-1"
resource_aka = "arn:aws:cloudformation:us-east-1:632902152528:stack/turbottest9335/f22213a0-f067-11ec-a5bd-0a4a75b1a30f"
resource_name = "turbottest9335"

Running SQL query: query.sql
[
  {
    "name": "turbottest9335",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest9335"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:cloudformation:us-east-1:632902152528:stack/turbottest9335/f22213a0-f067-11ec-a5bd-0a4a75b1a30f"
    ],
    "id": "arn:aws:cloudformation:us-east-1:632902152528:stack/turbottest9335/f22213a0-f067-11ec-a5bd-0a4a75b1a30f",
    "name": "turbottest9335",
    "tags": {
      "name": "turbottest9335"
    },
    "title": "turbottest9335"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:cloudformation:us-east-1:632902152528:stack/turbottest9335/f22213a0-f067-11ec-a5bd-0a4a75b1a30f"
    ],
    "id": "arn:aws:cloudformation:us-east-1:632902152528:stack/turbottest9335/f22213a0-f067-11ec-a5bd-0a4a75b1a30f",
    "name": "turbottest9335",
    "tags": {
      "name": "turbottest9335"
    },
    "title": "turbottest9335"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudformation_stack

TEARDOWN: tests/aws_cloudformation_stack

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudfront_cache_policy []

PRETEST: tests/aws_cloudfront_cache_policy

TEST: tests/aws_cloudfront_cache_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudfront_cache_policy.named_test_resource will be created
  + resource "aws_cloudfront_cache_policy" "named_test_resource" {
      + comment     = "turbottest16508"
      + default_ttl = 50
      + etag        = (known after apply)
      + id          = (known after apply)
      + max_ttl     = 100
      + min_ttl     = 1
      + name        = "turbottest16508"

      + parameters_in_cache_key_and_forwarded_to_origin {
          + cookies_config {
              + cookie_behavior = "whitelist"

              + cookies {
                  + items = [
                      + "turbottest16508",
                    ]
                }
            }

          + headers_config {
              + header_behavior = "whitelist"

              + headers {
                  + items = [
                      + "turbottest16508",
                    ]
                }
            }

          + query_strings_config {
              + query_string_behavior = "whitelist"

              + query_strings {
                  + items = [
                      + "turbottest16508",
                    ]
                }
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + etag          = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest16508"
aws_cloudfront_cache_policy.named_test_resource: Creating...
aws_cloudfront_cache_policy.named_test_resource: Creation complete after 2s [id=dd8a59c1-ba0d-42e4-9a94-cd280ec29c3c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

etag = "E23ZP02F085DFQ"
resource_aka = "arn:aws:cloudfront::632902152528:cache-policy/dd8a59c1-ba0d-42e4-9a94-cd280ec29c3c"
resource_id = "dd8a59c1-ba0d-42e4-9a94-cd280ec29c3c"
resource_name = "turbottest16508"

Running SQL query: test-get-query.sql
[
  {
    "comment": "turbottest16508",
    "etag": "E23ZP02F085DFQ",
    "id": "dd8a59c1-ba0d-42e4-9a94-cd280ec29c3c",
    "name": "turbottest16508"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "comment": "turbottest16508",
    "etag": "E23ZP02F085DFQ",
    "id": "dd8a59c1-ba0d-42e4-9a94-cd280ec29c3c",
    "name": "turbottest16508"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:cloudfront::632902152528:cache-policy/dd8a59c1-ba0d-42e4-9a94-cd280ec29c3c"
    ],
    "region": "global",
    "title": "turbottest16508"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudfront_cache_policy

TEARDOWN: tests/aws_cloudfront_cache_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudfront_distribution []

PRETEST: tests/aws_cloudfront_distribution

TEST: tests/aws_cloudfront_distribution
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudfront_distribution.named_test_resource will be created
  + resource "aws_cloudfront_distribution" "named_test_resource" {
      + arn                            = (known after apply)
      + caller_reference               = (known after apply)
      + default_root_object            = "index.html"
      + domain_name                    = (known after apply)
      + enabled                        = false
      + etag                           = (known after apply)
      + hosted_zone_id                 = (known after apply)
      + http_version                   = "http2"
      + id                             = (known after apply)
      + in_progress_validation_batches = (known after apply)
      + is_ipv6_enabled                = false
      + last_modified_time             = (known after apply)
      + price_class                    = "PriceClass_200"
      + retain_on_delete               = false
      + status                         = (known after apply)
      + tags                           = {
          + "name" = "turbottest91249"
        }
      + tags_all                       = {
          + "name" = "turbottest91249"
        }
      + trusted_key_groups             = (known after apply)
      + trusted_signers                = (known after apply)
      + wait_for_deployment            = true

      + default_cache_behavior {
          + allowed_methods        = [
              + "DELETE",
              + "GET",
              + "HEAD",
              + "OPTIONS",
              + "PATCH",
              + "POST",
              + "PUT",
            ]
          + cached_methods         = [
              + "GET",
              + "HEAD",
            ]
          + compress               = false
          + default_ttl            = 3600
          + max_ttl                = 86400
          + min_ttl                = 0
          + target_origin_id       = "s3-turbottest91249"
          + trusted_key_groups     = (known after apply)
          + trusted_signers        = (known after apply)
          + viewer_protocol_policy = "allow-all"

          + forwarded_values {
              + headers                 = (known after apply)
              + query_string            = false
              + query_string_cache_keys = (known after apply)

              + cookies {
                  + forward           = "none"
                  + whitelisted_names = (known after apply)
                }
            }
        }

      + ordered_cache_behavior {
          + allowed_methods        = [
              + "GET",
              + "HEAD",
              + "OPTIONS",
            ]
          + cached_methods         = [
              + "GET",
              + "HEAD",
            ]
          + compress               = true
          + default_ttl            = 3600
          + max_ttl                = 86400
          + min_ttl                = 0
          + path_pattern           = "/content/*"
          + target_origin_id       = "s3-turbottest91249"
          + viewer_protocol_policy = "redirect-to-https"

          + forwarded_values {
              + headers                 = (known after apply)
              + query_string            = false
              + query_string_cache_keys = (known after apply)

              + cookies {
                  + forward = "none"
                }
            }
        }

      + origin {
          + connection_attempts = 3
          + connection_timeout  = 10
          + domain_name         = (known after apply)
          + origin_id           = "s3-turbottest91249"
        }

      + restrictions {
          + geo_restriction {
              + locations        = [
                  + "CA",
                  + "DE",
                  + "GB",
                  + "US",
                ]
              + restriction_type = "whitelist"
            }
        }

      + viewer_certificate {
          + cloudfront_default_certificate = true
          + minimum_protocol_version       = "TLSv1"
        }
    }

  # aws_s3_bucket.test_bucket will be created
  + resource "aws_s3_bucket" "test_bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest91249"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + domain_name     = (known after apply)
  + etag            = (known after apply)
  + is_ipv6_enabled = false
  + resource_aka    = (known after apply)
  + resource_id     = (known after apply)
  + resource_name   = "turbottest91249"
aws_s3_bucket.test_bucket: Creating...
aws_s3_bucket.test_bucket: Creation complete after 4s [id=turbottest91249]
aws_cloudfront_distribution.named_test_resource: Creating...
aws_cloudfront_distribution.named_test_resource: Still creating... [10s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [20s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [30s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [40s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [50s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [1m0s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [1m10s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [1m20s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [1m30s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [1m40s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [1m50s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [2m0s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [2m10s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [2m20s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [2m30s elapsed]
aws_cloudfront_distribution.named_test_resource: Still creating... [2m40s elapsed]
aws_cloudfront_distribution.named_test_resource: Creation complete after 2m45s [id=E1DJY7B38ATIAC]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

domain_name = "d2d0zxluwkrisg.cloudfront.net"
etag = "E1Y7BHATRKZ3S8"
is_ipv6_enabled = false
resource_aka = "arn:aws:cloudfront::632902152528:distribution/E1DJY7B38ATIAC"
resource_id = "E1DJY7B38ATIAC"
resource_name = "turbottest91249"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:cloudfront::632902152528:distribution/E1DJY7B38ATIAC"
    ],
    "default_root_object": "index.html",
    "domain_name": "d2d0zxluwkrisg.cloudfront.net",
    "e_tag": "E1Y7BHATRKZ3S8",
    "id": "E1DJY7B38ATIAC",
    "price_class": "PriceClass_200",
    "status": "Deployed",
    "tags": {
      "name": "turbottest91249"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:cloudfront::632902152528:distribution/E1DJY7B38ATIAC"
    ],
    "comment": "",
    "domain_name": "d2d0zxluwkrisg.cloudfront.net",
    "e_tag": "E1Y7BHATRKZ3S8",
    "enabled": false,
    "id": "E1DJY7B38ATIAC",
    "in_progress_invalidation_batches": 0,
    "is_ipv6_enabled": false
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:cloudfront::632902152528:distribution/E1DJY7B38ATIAC"
    ],
    "region": "global",
    "tags": {
      "name": "turbottest91249"
    }
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudfront_distribution

TEARDOWN: tests/aws_cloudfront_distribution

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudfront_origin_access_identity []

PRETEST: tests/aws_cloudfront_origin_access_identity

TEST: tests/aws_cloudfront_origin_access_identity
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudfront_origin_access_identity.named_test_resource will be created
  + resource "aws_cloudfront_origin_access_identity" "named_test_resource" {
      + caller_reference                = (known after apply)
      + cloudfront_access_identity_path = (known after apply)
      + comment                         = "turbottest101"
      + etag                            = (known after apply)
      + iam_arn                         = (known after apply)
      + id                              = (known after apply)
      + s3_canonical_user_id            = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + caller_reference     = (known after apply)
  + etag                 = (known after apply)
  + resource_aka         = (known after apply)
  + resource_id          = (known after apply)
  + resource_name        = "turbottest101"
  + s3_canonical_user_id = (known after apply)
aws_cloudfront_origin_access_identity.named_test_resource: Creating...
aws_cloudfront_origin_access_identity.named_test_resource: Creation complete after 2s [id=E1GAPL709V3DWI]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

caller_reference = "terraform-20220620071644905600000001"
etag = "E2L92XJI8KCR9Q"
resource_aka = "arn:aws:cloudfront::632902152528:origin-access-identity/E1GAPL709V3DWI"
resource_id = "E1GAPL709V3DWI"
resource_name = "turbottest101"
s3_canonical_user_id = "e1d73407c64caea9be64b13b8fad79a18ba334838f18f5c3a2303c7b8443c6fa9a5bdf7581cebd4e27426a0862fda085"

Running SQL query: test-get-query.sql
[
  {
    "comment": "turbottest101",
    "etag": "E2L92XJI8KCR9Q",
    "id": "E1GAPL709V3DWI",
    "s3_canonical_user_id": "e1d73407c64caea9be64b13b8fad79a18ba334838f18f5c3a2303c7b8443c6fa9a5bdf7581cebd4e27426a0862fda085"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:cloudfront::632902152528:origin-access-identity/E1GAPL709V3DWI",
    "caller_reference": "terraform-20220620071644905600000001",
    "id": "E1GAPL709V3DWI"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:cloudfront::632902152528:origin-access-identity/E1GAPL709V3DWI",
    "comment": "turbottest101",
    "etag": "E2L92XJI8KCR9Q",
    "id": "E1GAPL709V3DWI"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:cloudfront::632902152528:origin-access-identity/E1GAPL709V3DWI"
    ],
    "title": "E1GAPL709V3DWI"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudfront_origin_access_identity

TEARDOWN: tests/aws_cloudfront_origin_access_identity

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudfront_origin_request_policy []

PRETEST: tests/aws_cloudfront_origin_request_policy

TEST: tests/aws_cloudfront_origin_request_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudfront_origin_request_policy.named_test_resource will be created
  + resource "aws_cloudfront_origin_request_policy" "named_test_resource" {
      + comment = "turbottest33294"
      + etag    = (known after apply)
      + id      = (known after apply)
      + name    = "turbottest33294"

      + cookies_config {
          + cookie_behavior = "whitelist"

          + cookies {
              + items = [
                  + "example",
                ]
            }
        }

      + headers_config {
          + header_behavior = "whitelist"

          + headers {
              + items = [
                  + "example",
                ]
            }
        }

      + query_strings_config {
          + query_string_behavior = "whitelist"

          + query_strings {
              + items = [
                  + "example",
                ]
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + etag          = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest33294"
aws_cloudfront_origin_request_policy.named_test_resource: Creating...
aws_cloudfront_origin_request_policy.named_test_resource: Creation complete after 1s [id=b3b07ed1-a7bc-4b09-b0b7-b0d0c7327b76]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
etag = "E23ZP02F085DFQ"
resource_aka = "arn:aws:cloudfront::632902152528:origin-request-policy/b3b07ed1-a7bc-4b09-b0b7-b0d0c7327b76"
resource_id = "b3b07ed1-a7bc-4b09-b0b7-b0d0c7327b76"
resource_name = "turbottest33294"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "comment": "turbottest33294",
    "etag": "E23ZP02F085DFQ",
    "id": "b3b07ed1-a7bc-4b09-b0b7-b0d0c7327b76",
    "title": "turbottest33294"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "comment": "turbottest33294",
    "etag": "E23ZP02F085DFQ",
    "id": "b3b07ed1-a7bc-4b09-b0b7-b0d0c7327b76",
    "name": "turbottest33294",
    "title": "turbottest33294"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:cloudfront::632902152528:origin-request-policy/b3b07ed1-a7bc-4b09-b0b7-b0d0c7327b76"
    ],
    "title": "turbottest33294"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudfront_origin_request_policy

TEARDOWN: tests/aws_cloudfront_origin_request_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudtrail_trail []

PRETEST: tests/aws_cloudtrail_trail

TEST: tests/aws_cloudtrail_trail
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudtrail.named_test_resource will be created
  + resource "aws_cloudtrail" "named_test_resource" {
      + arn                           = (known after apply)
      + enable_log_file_validation    = false
      + enable_logging                = true
      + home_region                   = (known after apply)
      + id                            = (known after apply)
      + include_global_service_events = false
      + is_multi_region_trail         = false
      + is_organization_trail         = false
      + name                          = "turbottest68432"
      + s3_bucket_name                = (known after apply)
      + s3_key_prefix                 = "prefix"
      + tags                          = {
          + "name" = "turbottest68432"
        }
      + tags_all                      = {
          + "name" = "turbottest68432"
        }

      + event_selector {
          + include_management_events = true
          + read_write_type           = "All"

          + data_resource {
              + type   = "AWS::Lambda::Function"
              + values = [
                  + "arn:aws:lambda",
                ]
            }
        }
    }

  # aws_s3_bucket.named_test_resource will be created
  + resource "aws_s3_bucket" "named_test_resource" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest68432"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "s3:GetBucketAcl"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "cloudtrail.amazonaws.com"
                        }
                      + Resource  = "arn:aws:s3:::turbottest68432"
                      + Sid       = "AWSCloudTrailAclCheck"
                    },
                  + {
                      + Action    = "s3:PutObject"
                      + Condition = {
                          + StringEquals = {
                              + s3:x-amz-acl = "bucket-owner-full-control"
                            }
                        }
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "cloudtrail.amazonaws.com"
                        }
                      + Resource  = "arn:aws:s3:::turbottest68432/prefix/AWSLogs/632902152528/*"
                      + Sid       = "AWSCloudTrailWrite"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest68432"
aws_s3_bucket.named_test_resource: Creating...
aws_s3_bucket.named_test_resource: Creation complete after 5s [id=turbottest68432]
aws_cloudtrail.named_test_resource: Creating...
aws_cloudtrail.named_test_resource: Creation complete after 2s [id=turbottest68432]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_s3_bucket.named_test_resource,
  on variables.tf line 76, in resource "aws_s3_bucket" "named_test_resource":
  76:   policy = <<POLICY
  77: {
  78:     "Version": "2012-10-17",
  79:     "Statement": [
  80:         {
  81:             "Sid": "AWSCloudTrailAclCheck",
  82:             "Effect": "Allow",
  83:             "Principal": {
  84:               "Service": "cloudtrail.amazonaws.com"
  85:             },
  86:             "Action": "s3:GetBucketAcl",
  87:             "Resource": "arn:aws:s3:::${var.resource_name}"
  88:         },
  89:         {
  90:             "Sid": "AWSCloudTrailWrite",
  91:             "Effect": "Allow",
  92:             "Principal": {
  93:               "Service": "cloudtrail.amazonaws.com"
  94:             },
  95:             "Action": "s3:PutObject",
  96:             "Resource": "arn:aws:s3:::${var.resource_name}/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*",
  97:             "Condition": {
  98:                 "StringEquals": {
  99:                     "s3:x-amz-acl": "bucket-owner-full-control"
 100:                 }
 101:             }
 102:         }
 103:     ]
 104: }
 105: POLICY

Use the aws_s3_bucket_policy resource instead

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:cloudtrail:us-east-1:632902152528:trail/turbottest68432"
resource_name = "turbottest68432"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:cloudtrail:us-east-1:632902152528:trail/turbottest68432",
    "has_custom_event_selectors": true,
    "has_insight_selectors": false,
    "home_region": "us-east-1",
    "include_global_service_events": false,
    "is_multi_region_trail": false,
    "is_organization_trail": false,
    "log_file_validation_enabled": false,
    "name": "turbottest68432",
    "s3_bucket_name": "turbottest68432",
    "s3_key_prefix": "prefix"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "event_selectors": [
      {
        "DataResources": [
          {
            "Type": "AWS::Lambda::Function",
            "Values": [
              "arn:aws:lambda"
            ]
          }
        ],
        "ExcludeManagementEventSources": [],
        "IncludeManagementEvents": true,
        "ReadWriteType": "All"
      }
    ],
    "is_logging": true,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest68432"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "arn": "arn:aws:cloudtrail:us-east-1:632902152528:trail/turbottest68432",
    "name": "turbottest68432"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:cloudtrail:us-east-1:632902152528:trail/turbottest68432"
    ],
    "tags": {
      "name": "turbottest68432"
    },
    "title": "turbottest68432"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudtrail_trail

TEARDOWN: tests/aws_cloudtrail_trail

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudwatch_alarm []

PRETEST: tests/aws_cloudwatch_alarm

TEST: tests/aws_cloudwatch_alarm
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_metric_alarm.named_test_resource will be created
  + resource "aws_cloudwatch_metric_alarm" "named_test_resource" {
      + actions_enabled                       = true
      + alarm_description                     = "turbottest98136"
      + alarm_name                            = "turbottest98136"
      + arn                                   = (known after apply)
      + comparison_operator                   = "GreaterThanOrEqualToThreshold"
      + evaluate_low_sample_count_percentiles = (known after apply)
      + evaluation_periods                    = 2
      + id                                    = (known after apply)
      + metric_name                           = "CPUUtilization"
      + namespace                             = "AWS/EC2"
      + period                                = 120
      + statistic                             = "Average"
      + tags                                  = {
          + "name" = "turbottest98136"
        }
      + tags_all                              = {
          + "name" = "turbottest98136"
        }
      + threshold                             = 80
      + treat_missing_data                    = "missing"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest98136"
aws_cloudwatch_metric_alarm.named_test_resource: Creating...
aws_cloudwatch_metric_alarm.named_test_resource: Creation complete after 1s [id=turbottest98136]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136"
resource_name = "turbottest98136"

Running SQL query: test-get-query.sql
[
  {
    "alarm_description": "turbottest98136",
    "arn": "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136",
    "comparison_operator": "GreaterThanOrEqualToThreshold",
    "metric_name": "CPUUtilization",
    "name": "turbottest98136"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136"
    ],
    "alarm_description": "turbottest98136",
    "arn": "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136",
    "comparison_operator": "GreaterThanOrEqualToThreshold",
    "metric_name": "CPUUtilization",
    "name": "turbottest98136",
    "tags": {
      "name": "turbottest98136"
    },
    "threshold": 80
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "alarm_description": "turbottest98136",
    "arn": "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136",
    "comparison_operator": "GreaterThanOrEqualToThreshold",
    "metric_name": "CPUUtilization",
    "name": "turbottest98136"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136"
    ],
    "arn": "arn:aws:cloudwatch:us-east-1:632902152528:alarm:turbottest98136",
    "name": "turbottest98136",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest98136"
    },
    "title": "turbottest98136"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudwatch_alarm

TEARDOWN: tests/aws_cloudwatch_alarm

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudwatch_log_group []

PRETEST: tests/aws_cloudwatch_log_group

TEST: tests/aws_cloudwatch_log_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.named_test_resource will be created
  + resource "aws_cloudwatch_log_group" "named_test_resource" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "turbottest16898"
      + retention_in_days = 0
      + tags              = {
          + "name" = "turbottest16898"
        }
      + tags_all          = {
          + "name" = "turbottest16898"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest16898"
aws_cloudwatch_log_group.named_test_resource: Creating...
aws_cloudwatch_log_group.named_test_resource: Creation complete after 1s [id=turbottest16898]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:logs:us-east-1:632902152528:log-group:turbottest16898"
resource_name = "turbottest16898"

Running SQL query: test-get-query.sql
[
  {
    "name": "turbottest16898"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "tags": {
      "name": "turbottest16898"
    }
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "arn": "arn:aws:logs:us-east-1:632902152528:log-group:turbottest16898:*",
    "metric_filter_count": 0,
    "name": "turbottest16898",
    "retention_in_days": null,
    "stored_bytes": 0
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:logs:us-east-1:632902152528:log-group:turbottest16898:*"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest16898"
    },
    "title": "turbottest16898"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudwatch_log_group

TEARDOWN: tests/aws_cloudwatch_log_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudwatch_log_resource_policy []

PRETEST: tests/aws_cloudwatch_log_resource_policy

TEST: tests/aws_cloudwatch_log_resource_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.named_test_resource will be created
  + resource "aws_cloudwatch_log_group" "named_test_resource" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "turbottest60382"
      + retention_in_days = 0
      + tags              = {
          + "name" = "turbottest60382"
        }
      + tags_all          = {
          + "name" = "turbottest60382"
        }
    }

  # aws_cloudwatch_log_resource_policy.named_test_resource will be created
  + resource "aws_cloudwatch_log_resource_policy" "named_test_resource" {
      + id              = (known after apply)
      + policy_document = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "logs:PutLogEvents",
                          + "logs:CreateLogStream",
                        ]
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "route53.amazonaws.com"
                        }
                      + Resource  = "arn:aws:logs:*:*:log-group:/aws/route53/*"
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_name     = "turbottest60382"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_name = "turbottest60382"
aws_cloudwatch_log_group.named_test_resource: Creating...
aws_cloudwatch_log_resource_policy.named_test_resource: Creating...
aws_cloudwatch_log_resource_policy.named_test_resource: Creation complete after 1s [id=turbottest60382]
aws_cloudwatch_log_group.named_test_resource: Creation complete after 2s [id=turbottest60382]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_name = "turbottest60382"

Running SQL query: test-list-call-query.sql
[
  {
    "account_id": "632902152528",
    "partition": "aws",
    "policy_name": "turbottest60382",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest60382"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudwatch_log_resource_policy

TEARDOWN: tests/aws_cloudwatch_log_resource_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_cloudwatch_log_stream []

PRETEST: tests/aws_cloudwatch_log_stream

TEST: tests/aws_cloudwatch_log_stream
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.named_test_resource will be created
  + resource "aws_cloudwatch_log_group" "named_test_resource" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "turbottest29628"
      + retention_in_days = 0
      + tags              = {
          + "name" = "turbottest29628"
        }
      + tags_all          = {
          + "name" = "turbottest29628"
        }
    }

  # aws_cloudwatch_log_stream.named_test_resource will be created
  + resource "aws_cloudwatch_log_stream" "named_test_resource" {
      + arn            = (known after apply)
      + id             = (known after apply)
      + log_group_name = "turbottest29628"
      + name           = "turbottest29628"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest29628"
aws_cloudwatch_log_group.named_test_resource: Creating...
aws_cloudwatch_log_group.named_test_resource: Creation complete after 1s [id=turbottest29628]
aws_cloudwatch_log_stream.named_test_resource: Creating...
aws_cloudwatch_log_stream.named_test_resource: Creation complete after 0s [id=turbottest29628]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:logs:us-east-1:632902152528:log-group:turbottest29628:log-stream:turbottest29628"
resource_name = "turbottest29628"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:logs:us-east-1:632902152528:log-group:turbottest29628:log-stream:turbottest29628",
    "log_group_name": "turbottest29628",
    "name": "turbottest29628",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:logs:us-east-1:632902152528:log-group:turbottest29628:log-stream:turbottest29628",
    "log_group_name": "turbottest29628",
    "name": "turbottest29628"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "arn": "arn:aws:logs:us-east-1:632902152528:log-group:turbottest29628:log-stream:turbottest29628",
    "log_group_name": "turbottest29628",
    "name": "turbottest29628"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:logs:us-east-1:632902152528:log-group:turbottest29628:log-stream:turbottest29628"
    ],
    "title": "turbottest29628"
  }
]
✔ PASSED

POSTTEST: tests/aws_cloudwatch_log_stream

TEARDOWN: tests/aws_cloudwatch_log_stream

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_codebuild_project []

PRETEST: tests/aws_codebuild_project

TEST: tests/aws_codebuild_project
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_codebuild_project.named_test_resource will be created
  + resource "aws_codebuild_project" "named_test_resource" {
      + arn                  = (known after apply)
      + badge_enabled        = false
      + badge_url            = (known after apply)
      + build_timeout        = 60
      + description          = "Resource for testing"
      + encryption_key       = (known after apply)
      + id                   = (known after apply)
      + name                 = "turbottest33548"
      + project_visibility   = "PRIVATE"
      + public_project_alias = (known after apply)
      + queued_timeout       = 480
      + service_role         = (known after apply)
      + tags                 = {
          + "foo" = "bar"
        }
      + tags_all             = {
          + "foo" = "bar"
        }

      + artifacts {
          + encryption_disabled    = false
          + override_artifact_name = false
          + type                   = "NO_ARTIFACTS"
        }

      + cache {
          + location = "turbottest33548"
          + type     = "S3"
        }

      + environment {
          + compute_type                = "BUILD_GENERAL1_SMALL"
          + image                       = "aws/codebuild/standard:1.0"
          + image_pull_credentials_type = "CODEBUILD"
          + privileged_mode             = false
          + type                        = "LINUX_CONTAINER"
        }

      + source {
          + location = "https://github.com/mitchellh/packer.git"
          + type     = "GITHUB"
        }
    }

  # aws_iam_role.test_role will be created
  + resource "aws_iam_role" "test_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "codebuild.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest33548"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy.test_role_policy will be created
  + resource "aws_iam_role_policy" "test_role_policy" {
      + id     = (known after apply)
      + name   = (known after apply)
      + policy = (known after apply)
      + role   = "turbottest33548"
    }

  # aws_s3_bucket.test_bucket will be created
  + resource "aws_s3_bucket" "test_bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest33548"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest33548"
aws_vpc.my_vpc: Creating...
aws_iam_role.test_role: Creating...
aws_s3_bucket.test_bucket: Creating...
aws_iam_role.test_role: Creation complete after 2s [id=turbottest33548]
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-095220ec92b539275]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_s3_bucket.test_bucket: Creation complete after 4s [id=turbottest33548]
aws_codebuild_project.named_test_resource: Creating...
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-0d5235e669aa485b2]
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0292355e8c57a4745]
aws_iam_role_policy.test_role_policy: Creating...
aws_iam_role_policy.test_role_policy: Creation complete after 1s [id=turbottest33548:terraform-20220620072128338800000001]
aws_codebuild_project.named_test_resource: Creation complete after 7s [id=arn:aws:codebuild:us-east-1:632902152528:project/turbottest33548]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:codebuild:us-east-1:632902152528:project/turbottest33548"
resource_id = "arn:aws:codebuild:us-east-1:632902152528:project/turbottest33548"
resource_name = "turbottest33548"

Running SQL query: test-get-query.sql
[
  {
    "artifacts": {
      "ArtifactIdentifier": null,
      "BucketOwnerAccess": null,
      "EncryptionDisabled": null,
      "Location": null,
      "Name": null,
      "NamespaceType": null,
      "OverrideArtifactName": false,
      "Packaging": null,
      "Path": null,
      "Type": "NO_ARTIFACTS"
    },
    "cache": {
      "Location": "turbottest33548",
      "Modes": null,
      "Type": "S3"
    },
    "description": "Resource for testing",
    "name": "turbottest33548",
    "source": {
      "Auth": null,
      "BuildStatusConfig": null,
      "Buildspec": "",
      "GitCloneDepth": 0,
      "GitSubmodulesConfig": null,
      "InsecureSsl": false,
      "Location": "https://github.com/mitchellh/packer.git",
      "ReportBuildStatus": false,
      "SourceIdentifier": null,
      "Type": "GITHUB"
    },
    "title": "turbottest33548"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:codebuild:us-east-1:632902152528:project/turbottest33548"
    ],
    "description": "Resource for testing",
    "name": "turbottest33548",
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest33548"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "artifacts": {
      "ArtifactIdentifier": null,
      "BucketOwnerAccess": null,
      "EncryptionDisabled": null,
      "Location": null,
      "Name": null,
      "NamespaceType": null,
      "OverrideArtifactName": false,
      "Packaging": null,
      "Path": null,
      "Type": "NO_ARTIFACTS"
    },
    "description": "Resource for testing",
    "name": "turbottest33548",
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest33548"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

POSTTEST: tests/aws_codebuild_project

TEARDOWN: tests/aws_codebuild_project

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_codebuild_source_credential []

PRETEST: tests/aws_codebuild_source_credential

TEST: tests/aws_codebuild_source_credential
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_codebuild_source_credential.named_test_resource will be created
  + resource "aws_codebuild_source_credential" "named_test_resource" {
      + arn         = (known after apply)
      + auth_type   = "PERSONAL_ACCESS_TOKEN"
      + id          = (known after apply)
      + server_type = "GITHUB"
      + token       = (sensitive value)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + arn    = (known after apply)
  + region = "us-east-1"
aws_codebuild_source_credential.named_test_resource: Creating...
aws_codebuild_source_credential.named_test_resource: Creation complete after 1s [id=arn:aws:codebuild:us-east-1:632902152528:token/github]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 38, in data "null_data_source" "resource":
  38: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

arn = "arn:aws:codebuild:us-east-1:632902152528:token/github"
region = "us-east-1"

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:codebuild:us-east-1:632902152528:token/github",
    "auth_type": "PERSONAL_ACCESS_TOKEN",
    "server_type": "GITHUB"
  }
]
✔ PASSED

POSTTEST: tests/aws_codebuild_source_credential

TEARDOWN: tests/aws_codebuild_source_credential

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_codecommit_repository []

PRETEST: tests/aws_codecommit_repository

TEST: tests/aws_codecommit_repository
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_codecommit_repository.named_test_resource will be created
  + resource "aws_codecommit_repository" "named_test_resource" {
      + arn             = (known after apply)
      + clone_url_http  = (known after apply)
      + clone_url_ssh   = (known after apply)
      + description     = "This is the Sample App Repository"
      + id              = (known after apply)
      + repository_id   = (known after apply)
      + repository_name = "turbottest37815"
      + tags            = {
          + "name" = "turbottest37815"
        }
      + tags_all        = {
          + "name" = "turbottest37815"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest37815"
aws_codecommit_repository.named_test_resource: Creating...
aws_codecommit_repository.named_test_resource: Creation complete after 2s [id=turbottest37815]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:codecommit:us-east-1:632902152528:turbottest37815"
resource_id = "6cc19c86-4348-42f7-964e-6a2ede8d282f"
resource_name = "turbottest37815"

Running SQL query: test-hydrate-query.sql
[
  {
    "repository_name": "turbottest37815",
    "tags": {
      "name": "turbottest37815"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:codecommit:us-east-1:632902152528:turbottest37815",
    "description": "This is the Sample App Repository",
    "repository_id": "6cc19c86-4348-42f7-964e-6a2ede8d282f",
    "repository_name": "turbottest37815"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:codecommit:us-east-1:632902152528:turbottest37815"
    ],
    "title": "turbottest37815"
  }
]
✔ PASSED

POSTTEST: tests/aws_codecommit_repository

TEARDOWN: tests/aws_codecommit_repository

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_codepipeline_pipeline []

PRETEST: tests/aws_codepipeline_pipeline

TEST: tests/aws_codepipeline_pipeline
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_codepipeline.named_test_resource will be created
  + resource "aws_codepipeline" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest89918"
      + role_arn = (known after apply)
      + tags_all = (known after apply)

      + artifact_store {
          + location = "turbottest89918"
          + region   = (known after apply)
          + type     = "S3"

          + encryption_key {
              + id   = (known after apply)
              + type = "KMS"
            }
        }

      + stage {
          + name = "Source"

          + action {
              + category         = "Source"
              + configuration    = (known after apply)
              + name             = "Source"
              + output_artifacts = [
                  + "source_output",
                ]
              + owner            = "AWS"
              + provider         = "CodeStarSourceConnection"
              + region           = (known after apply)
              + run_order        = (known after apply)
              + version          = "1"
            }
        }
      + stage {
          + name = "Build"

          + action {
              + category         = "Build"
              + configuration    = {
                  + "ProjectName" = "test"
                }
              + input_artifacts  = [
                  + "source_output",
                ]
              + name             = "Build"
              + output_artifacts = [
                  + "build_output",
                ]
              + owner            = "AWS"
              + provider         = "CodeBuild"
              + region           = (known after apply)
              + run_order        = (known after apply)
              + version          = "1"
            }
        }
      + stage {
          + name = "Deploy"

          + action {
              + category        = "Deploy"
              + configuration   = {
                  + "ActionMode"     = "REPLACE_ON_FAILURE"
                  + "Capabilities"   = "CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM"
                  + "OutputFileName" = "CreateStackOutput.json"
                  + "StackName"      = "MyStack"
                  + "TemplatePath"   = "build_output::sam-templated.yaml"
                }
              + input_artifacts = [
                  + "build_output",
                ]
              + name            = "Deploy"
              + owner           = "AWS"
              + provider        = "CloudFormation"
              + region          = (known after apply)
              + run_order       = (known after apply)
              + version         = "1"
            }
        }
    }

  # aws_codestarconnections_connection.example will be created
  + resource "aws_codestarconnections_connection" "example" {
      + arn               = (known after apply)
      + connection_status = (known after apply)
      + id                = (known after apply)
      + name              = "example-connection"
      + provider_type     = "GitHub"
      + tags_all          = (known after apply)
    }

  # aws_iam_role.codepipeline_role will be created
  + resource "aws_iam_role" "codepipeline_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "codepipeline.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest89918"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy.codepipeline_policy will be created
  + resource "aws_iam_role_policy" "codepipeline_policy" {
      + id     = (known after apply)
      + name   = "turbottest89918"
      + policy = (known after apply)
      + role   = (known after apply)
    }

  # aws_kms_alias.s3kmskey will be created
  + resource "aws_kms_alias" "s3kmskey" {
      + arn            = (known after apply)
      + id             = (known after apply)
      + name           = "alias/my-key-alias_turbottest89918"
      + name_prefix    = (known after apply)
      + target_key_arn = (known after apply)
      + target_key_id  = (known after apply)
    }

  # aws_kms_key.named_test_resource will be created
  + resource "aws_kms_key" "named_test_resource" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + deletion_window_in_days            = 7
      + description                        = "turbottest89918"
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = (known after apply)
      + policy                             = (known after apply)
      + tags_all                           = (known after apply)
    }

  # aws_s3_bucket.codepipeline_bucket will be created
  + resource "aws_s3_bucket" "codepipeline_bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest89918"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id     = "632902152528"
  + aws_partition  = "aws"
  + encryption_key = (known after apply)
  + region_name    = "us-east-1"
  + resource_aka   = (known after apply)
  + resource_name  = "turbottest89918"
  + role_arn       = (known after apply)
aws_iam_role.codepipeline_role: Creating...
aws_codestarconnections_connection.example: Creating...
aws_kms_key.named_test_resource: Creating...
aws_s3_bucket.codepipeline_bucket: Creating...
aws_codestarconnections_connection.example: Creation complete after 1s [id=arn:aws:codestar-connections:us-east-1:632902152528:connection/2afda432-f7a8-488a-8c45-32f84e3f3427]
aws_kms_key.named_test_resource: Creation complete after 2s [id=59c80984-9018-4101-8227-f6fa6fd0bcb2]
aws_kms_alias.s3kmskey: Creating...
aws_iam_role.codepipeline_role: Creation complete after 2s [id=turbottest89918]
aws_kms_alias.s3kmskey: Creation complete after 0s [id=alias/my-key-alias_turbottest89918]
aws_s3_bucket.codepipeline_bucket: Creation complete after 4s [id=turbottest89918]
aws_iam_role_policy.codepipeline_policy: Creating...
aws_codepipeline.named_test_resource: Creating...
aws_iam_role_policy.codepipeline_policy: Creation complete after 0s [id=turbottest89918:turbottest89918]
aws_codepipeline.named_test_resource: Still creating... [10s elapsed]
aws_codepipeline.named_test_resource: Creation complete after 10s [id=turbottest89918]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on vatiable.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
encryption_key = "arn:aws:kms:us-east-1:632902152528:alias/my-key-alias_turbottest89918"
region_name = "us-east-1"
resource_aka = "arn:aws:codepipeline:us-east-1:632902152528:turbottest89918"
resource_name = "turbottest89918"
role_arn = "arn:aws:iam::632902152528:role/turbottest89918"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:codepipeline:us-east-1:632902152528:turbottest89918",
    "encryption_key": {
      "Id": "arn:aws:kms:us-east-1:632902152528:alias/my-key-alias_turbottest89918",
      "Type": "KMS"
    },
    "name": "turbottest89918",
    "role_arn": "arn:aws:iam::632902152528:role/turbottest89918",
    "tags_src": [],
    "title": "turbottest89918"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:codepipeline:us-east-1:632902152528:turbottest89918"
    ],
    "name": "turbottest89918",
    "tags": {},
    "title": "turbottest89918"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:codepipeline:us-east-1:632902152528:turbottest89918",
    "name": "turbottest89918",
    "tags": {},
    "title": "turbottest89918"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:codepipeline:us-east-1:632902152528:turbottest89918"
    ],
    "name": "turbottest89918",
    "region": "us-east-1",
    "title": "turbottest89918"
  }
]
✔ PASSED

POSTTEST: tests/aws_codepipeline_pipeline

TEARDOWN: tests/aws_codepipeline_pipeline

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_config_aggregate_authorization []

PRETEST: tests/aws_config_aggregate_authorization

TEST: tests/aws_config_aggregate_authorization
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_config_aggregate_authorization.named_test_resource will be created
  + resource "aws_config_aggregate_authorization" "named_test_resource" {
      + account_id = "123456789012"
      + arn        = (known after apply)
      + id         = (known after apply)
      + region     = "eu-west-2"
      + tags       = {
          + "name" = "turbottest33829"
        }
      + tags_all   = {
          + "name" = "turbottest33829"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id            = "632902152528"
  + authorized_account_id = (known after apply)
  + authorized_aws_region = (known after apply)
  + aws_partition         = "aws"
  + region_name           = "us-east-1"
  + resource_aka          = (known after apply)
  + resource_name         = "turbottest33829"
aws_config_aggregate_authorization.named_test_resource: Creating...
aws_config_aggregate_authorization.named_test_resource: Creation complete after 1s [id=123456789012:eu-west-2]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
authorized_account_id = "123456789012"
authorized_aws_region = "eu-west-2"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:config:us-east-1:632902152528:aggregation-authorization/123456789012/eu-west-2"
resource_name = "turbottest33829"

Running SQL query: test-list-call-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_config_aggregate_authorization" does not exist (SQLSTATE 42P01)
{}
[
  {
    "arn": "arn:aws:config:us-east-1:632902152528:aggregation-authorization/123456789012/eu-west-2",
    "authorized_account_id": "123456789012",
    "authorized_aws_region": "eu-west-2"
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_config_aggregate_authorization" does not exist (SQLSTATE 42P01)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_config_aggregate_authorization" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:config:us-east-1:632902152528:aggregation-authorization/123456789012/eu-west-2"
    ],
    "tags": {
      "name": "turbottest33829"
    },
    "title": "arn:aws:config:us-east-1:632902152528:aggregation-authorization/123456789012/eu-west-2"
  }
]

✘ FAILED

TEARDOWN: tests/aws_config_aggregate_authorization

SUMMARY:

✘ tests/aws_config_aggregate_authorization failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_config_configuration_recorder []

PRETEST: tests/aws_config_configuration_recorder

TEST: tests/aws_config_configuration_recorder
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_config_configuration_recorder.named_test_resource will be created
  + resource "aws_config_configuration_recorder" "named_test_resource" {
      + id       = (known after apply)
      + name     = "turbottest83587"
      + role_arn = (known after apply)

      + recording_group {
          + all_supported                 = (known after apply)
          + include_global_resource_types = (known after apply)
          + resource_types                = (known after apply)
        }
    }

  # aws_iam_role.r will be created
  + resource "aws_iam_role" "r" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "config.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest83587"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = "arn:aws:config:us-east-1:632902152528:config-recorder/turbottest83587"
  + resource_name = "turbottest83587"
aws_iam_role.r: Creating...
aws_iam_role.r: Creation complete after 2s [id=turbottest83587]
aws_config_configuration_recorder.named_test_resource: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Creating Configuration Recorder failed: MaxNumberOfConfigurationRecordersExceededException: Failed to put configuration recorder 'turbottest83587' because the maximum number of configuration recorders: 1 is reached.

  with aws_config_configuration_recorder.named_test_resource,
  on variables.tf line 51, in resource "aws_config_configuration_recorder" "named_test_resource":
  51: resource "aws_config_configuration_recorder" "named_test_resource" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_config_configuration_recorder

SUMMARY:

✘ tests/aws_config_configuration_recorder failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_config_conformance_pack []

PRETEST: tests/aws_config_conformance_pack

TEST: tests/aws_config_conformance_pack
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_config_configuration_recorder.configuration_recorder will be created
  + resource "aws_config_configuration_recorder" "configuration_recorder" {
      + id       = (known after apply)
      + name     = "turbottest83982"
      + role_arn = (known after apply)

      + recording_group {
          + all_supported                 = (known after apply)
          + include_global_resource_types = (known after apply)
          + resource_types                = (known after apply)
        }
    }

  # aws_config_conformance_pack.named_test_resource will be created
  + resource "aws_config_conformance_pack" "named_test_resource" {
      + arn           = (known after apply)
      + id            = (known after apply)
      + name          = "turbottest83982"
      + template_body = <<-EOT
                Parameters:
                  AccessKeysRotatedParameterMaxAccessKeyAge:
                    Type: String
                Resources:
                  IAMPasswordPolicy:
                    Properties:
                      ConfigRuleName: IAMPasswordPolicy
                      Source:
                        Owner: AWS
                        SourceIdentifier: IAM_PASSWORD_POLICY
                    Type: AWS::Config::ConfigRule
        EOT

      + input_parameter {
          + parameter_name  = "AccessKeysRotatedParameterMaxAccessKeyAge"
          + parameter_value = "90"
        }
    }

  # aws_iam_role.r will be created
  + resource "aws_iam_role" "r" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "config.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "awsconfig-example"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest83982"
aws_iam_role.r: Creating...
aws_iam_role.r: Creation complete after 2s [id=awsconfig-example]
aws_config_configuration_recorder.configuration_recorder: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Creating Configuration Recorder failed: MaxNumberOfConfigurationRecordersExceededException: Failed to put configuration recorder 'turbottest83982' because the maximum number of configuration recorders: 1 is reached.

  with aws_config_configuration_recorder.configuration_recorder,
  on variables.tf line 51, in resource "aws_config_configuration_recorder" "configuration_recorder":
  51: resource "aws_config_configuration_recorder" "configuration_recorder" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_config_conformance_pack

SUMMARY:

✘ tests/aws_config_conformance_pack failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_config_rule []

PRETEST: tests/aws_config_rule

TEST: tests/aws_config_rule
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_config_config_rule.named_test_resource will be created
  + resource "aws_config_config_rule" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest95980"
      + rule_id  = (known after apply)
      + tags     = {
          + "name" = "turbottest95980"
        }
      + tags_all = {
          + "name" = "turbottest95980"
        }

      + source {
          + owner             = "AWS"
          + source_identifier = "S3_BUCKET_VERSIONING_ENABLED"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest95980"
  + rule_id       = (known after apply)
aws_config_config_rule.named_test_resource: Creating...
aws_config_config_rule.named_test_resource: Creation complete after 1s [id=turbottest95980]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:config:us-east-1:632902152528:config-rule/config-rule-ixzqgz"
resource_name = "turbottest95980"
rule_id = "config-rule-ixzqgz"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:config:us-east-1:632902152528:config-rule/config-rule-ixzqgz"
    ],
    "arn": "arn:aws:config:us-east-1:632902152528:config-rule/config-rule-ixzqgz",
    "description": null,
    "name": "turbottest95980",
    "rule_id": "config-rule-ixzqgz",
    "rule_state": "ACTIVE",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest95980"
      }
    ],
    "title": "turbottest95980"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "arn": "arn:aws:config:us-east-1:632902152528:config-rule/config-rule-ixzqgz",
    "name": "turbottest95980",
    "rule_id": "config-rule-ixzqgz",
    "title": "turbottest95980"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:config:us-east-1:632902152528:config-rule/config-rule-ixzqgz"
    ],
    "arn": "arn:aws:config:us-east-1:632902152528:config-rule/config-rule-ixzqgz",
    "tags": {
      "name": "turbottest95980"
    },
    "title": "turbottest95980"
  }
]
✔ PASSED

POSTTEST: tests/aws_config_rule

TEARDOWN: tests/aws_config_rule

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_dax_cluster []

PRETEST: tests/aws_dax_cluster

TEST: tests/aws_dax_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_dax_cluster.named_test_resource will be created
  + resource "aws_dax_cluster" "named_test_resource" {
      + arn                    = (known after apply)
      + cluster_address        = (known after apply)
      + cluster_name           = "turbottest41454"
      + configuration_endpoint = (known after apply)
      + description            = "A test cluster"
      + iam_role_arn           = (known after apply)
      + id                     = (known after apply)
      + maintenance_window     = (known after apply)
      + node_type              = "dax.r4.large"
      + nodes                  = (known after apply)
      + parameter_group_name   = (known after apply)
      + port                   = (known after apply)
      + replication_factor     = 1
      + security_group_ids     = (known after apply)
      + subnet_group_name      = "turbottest41454"
      + tags                   = {
          + "name" = "turbottest41454"
        }
      + tags_all               = {
          + "name" = "turbottest41454"
        }
    }

  # aws_dax_subnet_group.my_subnet_group will be created
  + resource "aws_dax_subnet_group" "my_subnet_group" {
      + id         = (known after apply)
      + name       = "turbottest41454"
      + subnet_ids = (known after apply)
      + vpc_id     = (known after apply)
    }

  # aws_iam_role.my_role will be created
  + resource "aws_iam_role" "my_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "dax.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest41454"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest41454"
aws_iam_role.my_role: Creating...
aws_vpc.my_vpc: Creating...
aws_iam_role.my_role: Creation complete after 2s [id=turbottest41454]
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-082565a2f1002858e]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0234a16f3e90bdf11]
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-0a9f886b852ad9aed]
aws_dax_subnet_group.my_subnet_group: Creating...
aws_dax_subnet_group.my_subnet_group: Creation complete after 3s [id=turbottest41454]
aws_dax_cluster.named_test_resource: Creating...
aws_dax_cluster.named_test_resource: Still creating... [10s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [20s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [30s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [40s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [50s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [3m20s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [3m30s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [3m40s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [3m50s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [4m0s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [4m10s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [4m20s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [4m30s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [4m40s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [4m50s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [5m0s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [5m10s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [5m20s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [5m30s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [5m40s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [5m50s elapsed]
aws_dax_cluster.named_test_resource: Still creating... [6m0s elapsed]
aws_dax_cluster.named_test_resource: Creation complete after 6m1s [id=turbottest41454]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:dax:us-east-1:632902152528:cache/turbottest41454"
resource_id = "turbottest41454"
resource_name = "turbottest41454"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:dax:us-east-1:632902152528:cache/turbottest41454",
    "cluster_name": "turbottest41454",
    "description": "A test cluster",
    "node_type": "dax.r4.large",
    "tags": {
      "name": "turbottest41454"
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:dax:us-east-1:632902152528:cache/turbottest41454"
    ],
    "cluster_name": "turbottest41454",
    "tags": {
      "name": "turbottest41454"
    },
    "title": "turbottest41454"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:dax:us-east-1:632902152528:cache/turbottest41454"
    ],
    "cluster_name": "turbottest41454",
    "title": "turbottest41454"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_dax_cluster

TEARDOWN: tests/aws_dax_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_directory_service_directory []

PRETEST: tests/aws_directory_service_directory

TEST: tests/aws_directory_service_directory
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_directory_service_directory.named_test_resource will be created
  + resource "aws_directory_service_directory" "named_test_resource" {
      + access_url        = (known after apply)
      + alias             = (known after apply)
      + dns_ip_addresses  = (known after apply)
      + edition           = (known after apply)
      + enable_sso        = false
      + id                = (known after apply)
      + name              = "turbottest27026.com"
      + password          = (sensitive value)
      + security_group_id = (known after apply)
      + short_name        = (known after apply)
      + size              = "Small"
      + tags              = {
          + "Name" = "turbottest27026"
        }
      + tags_all          = {
          + "Name" = "turbottest27026"
        }
      + type              = "SimpleAD"

      + vpc_settings {
          + availability_zones = (known after apply)
          + subnet_ids         = (known after apply)
          + vpc_id             = (known after apply)
        }
    }

  # aws_iam_role.my_role will be created
  + resource "aws_iam_role" "my_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "dax.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest27026"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest27026"
aws_iam_role.my_role: Creating...
aws_vpc.my_vpc: Creating...
aws_iam_role.my_role: Creation complete after 2s [id=turbottest27026]
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0ff89f4359092e14f]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-039667f78029477d6]
aws_subnet.my_subnet2: Creation complete after 2s [id=subnet-0a05ba0d25c808723]
aws_directory_service_directory.named_test_resource: Creating...
aws_directory_service_directory.named_test_resource: Still creating... [10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [50s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [1m0s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [1m10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [1m20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [1m30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [1m40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [1m50s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [2m0s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [2m10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [2m20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [2m30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [2m40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [2m50s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [3m0s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [3m10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [3m20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [3m30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [3m40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [3m50s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [4m0s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [4m10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [4m20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [4m30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [4m40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [4m50s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [5m0s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [5m10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [5m20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [5m30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [5m40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [5m50s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [6m0s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [6m10s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [6m20s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [6m30s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [6m40s elapsed]
aws_directory_service_directory.named_test_resource: Still creating... [6m50s elapsed]
aws_directory_service_directory.named_test_resource: Creation complete after 6m55s [id=d-90674e2e0e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:ds:us-east-1:632902152528:directory/d-90674e2e0e"
resource_id = "d-90674e2e0e"
resource_name = "turbottest27026"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ds:us-east-1:632902152528:directory/d-90674e2e0e",
    "directory_id": "d-90674e2e0e",
    "name": "turbottest27026.com"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ds:us-east-1:632902152528:directory/d-90674e2e0e"
    ],
    "name": "turbottest27026.com",
    "tags": {
      "Name": "turbottest27026"
    },
    "title": "turbottest27026.com"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ds:us-east-1:632902152528:directory/d-90674e2e0e"
    ],
    "name": "turbottest27026.com",
    "title": "turbottest27026.com"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_directory_service_directory

TEARDOWN: tests/aws_directory_service_directory

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_dlm_lifecycle_policy []

PRETEST: tests/aws_dlm_lifecycle_policy

TEST: tests/aws_dlm_lifecycle_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_dlm_lifecycle_policy.named_test_resource will be created
  + resource "aws_dlm_lifecycle_policy" "named_test_resource" {
      + arn                = (known after apply)
      + description        = "example DLM lifecycle policy"
      + execution_role_arn = (known after apply)
      + id                 = (known after apply)
      + state              = "DISABLED"
      + tags_all           = (known after apply)

      + policy_details {
          + policy_type        = "EBS_SNAPSHOT_MANAGEMENT"
          + resource_locations = (known after apply)
          + resource_types     = [
              + "VOLUME",
            ]
          + target_tags        = {
              + "Snapshot" = "true"
            }

          + schedule {
              + copy_tags   = false
              + name        = "2 weeks of daily snapshots"
              + tags_to_add = {
                  + "SnapshotCreator" = "DLM"
                }

              + create_rule {
                  + interval      = 24
                  + interval_unit = "HOURS"
                  + location      = (known after apply)
                  + times         = [
                      + "23:45",
                    ]
                }

              + retain_rule {
                  + count = 14
                }
            }
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "dlm.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest40855"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy.named_test_resource will be created
  + resource "aws_iam_role_policy" "named_test_resource" {
      + id     = (known after apply)
      + name   = "turbottest40855"
      + policy = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:CreateSnapshot",
                          + "ec2:CreateSnapshots",
                          + "ec2:DeleteSnapshot",
                          + "ec2:DescribeInstances",
                          + "ec2:DescribeVolumes",
                          + "ec2:DescribeSnapshots",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                  + {
                      + Action   = [
                          + "ec2:CreateTags",
                        ]
                      + Effect   = "Allow"
                      + Resource = "arn:aws:ec2:*::snapshot/*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + role   = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest40855"
aws_iam_role.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 1s [id=turbottest40855]
aws_iam_role_policy.named_test_resource: Creating...
aws_dlm_lifecycle_policy.named_test_resource: Creating...
aws_iam_role_policy.named_test_resource: Creation complete after 1s [id=turbottest40855:turbottest40855]
aws_dlm_lifecycle_policy.named_test_resource: Creation complete after 2s [id=policy-0260b2709d50f7d7e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:dlm:us-east-1:632902152528:policy/policy-0260b2709d50f7d7e"
resource_id = "policy-0260b2709d50f7d7e"
resource_name = "turbottest40855"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_dlm_lifecycle_policy" does not exist (SQLSTATE 42P01)
{}
[
  {
    "arn": "arn:aws:dlm:us-east-1:632902152528:policy/policy-0260b2709d50f7d7e",
    "policy_id": "policy-0260b2709d50f7d7e"
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_dlm_lifecycle_policy" does not exist (SQLSTATE 42P01)
{}
[
  {
    "arn": "arn:aws:dlm:us-east-1:632902152528:policy/policy-0260b2709d50f7d7e",
    "policy_id": "policy-0260b2709d50f7d7e"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_dlm_lifecycle_policy" does not exist (SQLSTATE 42P01)
{}
[
  {
    "arn": "arn:aws:dlm:us-east-1:632902152528:policy/policy-0260b2709d50f7d7e",
    "policy_id": "policy-0260b2709d50f7d7e"
  }
]

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_dlm_lifecycle_policy" does not exist (SQLSTATE 42P01)
{}
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:dlm:us-east-1:632902152528:policy/policy-0260b2709d50f7d7e"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "title": "policy-0260b2709d50f7d7e"
  }
]

✘ FAILED

TEARDOWN: tests/aws_dlm_lifecycle_policy

SUMMARY:

✘ tests/aws_dlm_lifecycle_policy failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_dms_replication_instance []

PRETEST: tests/aws_dms_replication_instance

TEST: tests/aws_dms_replication_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_dms_replication_instance.named_test_resource will be created
  + resource "aws_dms_replication_instance" "named_test_resource" {
      + allocated_storage                = 5
      + apply_immediately                = true
      + auto_minor_version_upgrade       = true
      + availability_zone                = "us-east-1a"
      + engine_version                   = (known after apply)
      + id                               = (known after apply)
      + kms_key_arn                      = (known after apply)
      + multi_az                         = false
      + preferred_maintenance_window     = "sun:10:30-sun:14:30"
      + publicly_accessible              = false
      + replication_instance_arn         = (known after apply)
      + replication_instance_class       = "dms.t2.micro"
      + replication_instance_id          = "turbottest68282"
      + replication_instance_private_ips = (known after apply)
      + replication_instance_public_ips  = (known after apply)
      + replication_subnet_group_id      = (known after apply)
      + tags                             = {
          + "foo" = "bar"
        }
      + tags_all                         = {
          + "foo" = "bar"
        }
      + vpc_security_group_ids           = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest68282"
aws_dms_replication_instance.named_test_resource: Creating...
aws_dms_replication_instance.named_test_resource: Still creating... [10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [1m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [1m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [1m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [1m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [1m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [1m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [2m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [2m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [2m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [2m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [2m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [2m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [3m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [3m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [3m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [3m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [3m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [3m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [4m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [4m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [4m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [4m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [4m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [4m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [5m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [5m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [5m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [5m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [5m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [5m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [6m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [6m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [6m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [6m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [6m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [6m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [7m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [7m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [7m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [7m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [7m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [7m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [8m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [8m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [8m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [8m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [8m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [8m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [9m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [9m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [9m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [9m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [9m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [9m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [10m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [10m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [10m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [10m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [10m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [10m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [11m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [11m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [11m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [11m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [11m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [11m50s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [12m0s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [12m10s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [12m20s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [12m30s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [12m40s elapsed]
aws_dms_replication_instance.named_test_resource: Still creating... [12m50s elapsed]
aws_dms_replication_instance.named_test_resource: Creation complete after 12m52s [id=turbottest68282]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:dms:us-east-1:632902152528:rep:NF3H74BRC7BCDKVN3KXZQV2EL2KSQQDFMMSVMPQ"
resource_name = "turbottest68282"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:dms:us-east-1:632902152528:rep:NF3H74BRC7BCDKVN3KXZQV2EL2KSQQDFMMSVMPQ"
    ],
    "allocated_storage": 5,
    "arn": "arn:aws:dms:us-east-1:632902152528:rep:NF3H74BRC7BCDKVN3KXZQV2EL2KSQQDFMMSVMPQ",
    "auto_minor_version_upgrade": true,
    "availability_zone": "us-east-1a",
    "dns_name_servers": null,
    "free_until": null,
    "multi_az": false,
    "partition": "aws",
    "preferred_maintenance_window": "sun:10:30-sun:14:30",
    "publicly_accessible": false,
    "region": "us-east-1",
    "replication_instance_class": "dms.t2.micro",
    "replication_instance_identifier": "turbottest68282",
    "replication_instance_status": "available",
    "secondary_availability_zone": null,
    "tags": {
      "foo": "bar"
    },
    "tags_src": [
      {
        "Key": "foo",
        "ResourceArn": null,
        "Value": "bar"
      }
    ],
    "title": "turbottest68282"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:dms:us-east-1:632902152528:rep:NF3H74BRC7BCDKVN3KXZQV2EL2KSQQDFMMSVMPQ",
    "region": "us-east-1",
    "replication_instance_identifier": "turbottest68282",
    "tags": {
      "foo": "bar"
    },
    "tags_src": [
      {
        "Key": "foo",
        "ResourceArn": null,
        "Value": "bar"
      }
    ],
    "title": "turbottest68282"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:dms:us-east-1:632902152528:rep:NF3H74BRC7BCDKVN3KXZQV2EL2KSQQDFMMSVMPQ",
    "publicly_accessible": false,
    "region": "us-east-1",
    "replication_instance_class": "dms.t2.micro",
    "replication_instance_identifier": "turbottest68282",
    "title": "turbottest68282"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:dms:us-east-1:632902152528:rep:NF3H74BRC7BCDKVN3KXZQV2EL2KSQQDFMMSVMPQ"
    ],
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest68282"
  }
]
✔ PASSED

POSTTEST: tests/aws_dms_replication_instance

TEARDOWN: tests/aws_dms_replication_instance

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_dynamodb_table []

PRETEST: tests/aws_dynamodb_table

TEST: tests/aws_dynamodb_table
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_dynamodb_table.named_test_resource will be created
  + resource "aws_dynamodb_table" "named_test_resource" {
      + arn              = (known after apply)
      + billing_mode     = "PROVISIONED"
      + hash_key         = "userId"
      + id               = (known after apply)
      + name             = "turbottest61645"
      + read_capacity    = 20
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags             = {
          + "name" = "turbottest61645"
        }
      + tags_all         = {
          + "name" = "turbottest61645"
        }
      + write_capacity   = 20

      + attribute {
          + name = "userId"
          + type = "S"
        }

      + point_in_time_recovery {
          + enabled = (known after apply)
        }

      + server_side_encryption {
          + enabled     = (known after apply)
          + kms_key_arn = (known after apply)
        }

      + ttl {
          + attribute_name = (known after apply)
          + enabled        = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest61645"
aws_dynamodb_table.named_test_resource: Creating...
aws_dynamodb_table.named_test_resource: Creation complete after 9s [id=turbottest61645]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 47, in data "null_data_source" "resource":
  47: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:dynamodb:us-east-1:632902152528:table/turbottest61645"
resource_name = "turbottest61645"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:dynamodb:us-east-1:632902152528:table/turbottest61645",
    "name": "turbottest61645"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "continuous_backups_status": "ENABLED",
    "point_in_time_recovery_description": {
      "EarliestRestorableDateTime": null,
      "LatestRestorableDateTime": null,
      "PointInTimeRecoveryStatus": "DISABLED"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:dynamodb:us-east-1:632902152528:table/turbottest61645",
    "attribute_definitions": [
      {
        "AttributeName": "userId",
        "AttributeType": "S"
      }
    ],
    "key_schema": [
      {
        "AttributeName": "userId",
        "KeyType": "HASH"
      }
    ],
    "name": "turbottest61645",
    "read_capacity": 20,
    "write_capacity": 20
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:dynamodb:us-east-1:632902152528:table/turbottest61645"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest61645"
  }
]
✔ PASSED

POSTTEST: tests/aws_dynamodb_table

TEARDOWN: tests/aws_dynamodb_table

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ebs_snapshot []

PRETEST: tests/aws_ebs_snapshot

TEST: tests/aws_ebs_snapshot
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ebs_snapshot.named_test_resource will be created
  + resource "aws_ebs_snapshot" "named_test_resource" {
      + arn                    = (known after apply)
      + data_encryption_key_id = (known after apply)
      + description            = "Test snapshot"
      + encrypted              = (known after apply)
      + id                     = (known after apply)
      + kms_key_id             = (known after apply)
      + owner_alias            = (known after apply)
      + owner_id               = (known after apply)
      + storage_tier           = (known after apply)
      + tags                   = {
          + "Name" = "turbottest41071"
        }
      + tags_all               = {
          + "Name" = "turbottest41071"
        }
      + volume_id              = (known after apply)
      + volume_size            = (known after apply)
    }

  # aws_ebs_volume.test_volume will be created
  + resource "aws_ebs_volume" "test_volume" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 1
      + snapshot_id       = (known after apply)
      + tags_all          = (known after apply)
      + throughput        = (known after apply)
      + type              = (known after apply)
    }

  # aws_snapshot_create_volume_permission.example_perm will be created
  + resource "aws_snapshot_create_volume_permission" "example_perm" {
      + account_id  = "388460667113"
      + id          = (known after apply)
      + snapshot_id = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest41071"
  + snapshot_id   = (known after apply)
  + volume_id     = (known after apply)
aws_ebs_volume.test_volume: Creating...
aws_ebs_volume.test_volume: Still creating... [10s elapsed]
aws_ebs_volume.test_volume: Creation complete after 11s [id=vol-0f4cf0d1c33bc47cf]
aws_ebs_snapshot.named_test_resource: Creating...
aws_ebs_snapshot.named_test_resource: Still creating... [10s elapsed]
aws_ebs_snapshot.named_test_resource: Creation complete after 17s [id=snap-0f09a15d858f0d6b4]
aws_snapshot_create_volume_permission.example_perm: Creating...
aws_snapshot_create_volume_permission.example_perm: Creation complete after 1s [id=snap-0f09a15d858f0d6b4-388460667113]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:ec2:us-east-1::snapshot/snap-0f09a15d858f0d6b4"
resource_name = "turbottest41071"
snapshot_id = "snap-0f09a15d858f0d6b4"
volume_id = "vol-0f4cf0d1c33bc47cf"

Running SQL query: test-get-query.sql
[
  {
    "description": "Test snapshot",
    "encrypted": false,
    "owner_id": "632902152528",
    "snapshot_id": "snap-0f09a15d858f0d6b4",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest41071"
      }
    ],
    "volume_id": "vol-0f4cf0d1c33bc47cf",
    "volume_size": 1
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:snapshot/snap-0f09a15d858f0d6b4"
    ],
    "create_volume_permissions": [
      {
        "Group": null,
        "UserId": "388460667113"
      }
    ],
    "snapshot_id": "snap-0f09a15d858f0d6b4",
    "tags": {
      "Name": "turbottest41071"
    },
    "title": "snap-0f09a15d858f0d6b4"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "snapshot_id": "snap-0f09a15d858f0d6b4",
    "volume_id": "vol-0f4cf0d1c33bc47cf"
  }
]
✔ PASSED

POSTTEST: tests/aws_ebs_snapshot

TEARDOWN: tests/aws_ebs_snapshot

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ebs_volume []

PRETEST: tests/aws_ebs_volume

TEST: tests/aws_ebs_volume
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ebs_volume.named_test_resource will be created
  + resource "aws_ebs_volume" "named_test_resource" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 1
      + snapshot_id       = (known after apply)
      + tags              = {
          + "Name" = "turbottest60181"
        }
      + tags_all          = {
          + "Name" = "turbottest60181"
        }
      + throughput        = (known after apply)
      + type              = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest60181"
aws_ebs_volume.named_test_resource: Creating...
aws_ebs_volume.named_test_resource: Still creating... [10s elapsed]
aws_ebs_volume.named_test_resource: Creation complete after 11s [id=vol-06ecce66797505a45]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:volume/vol-06ecce66797505a45"
resource_id = "vol-06ecce66797505a45"
resource_name = "turbottest60181"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:volume/vol-06ecce66797505a45",
    "attachments": null,
    "encrypted": false,
    "multi_attach_enabled": false,
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest60181"
      }
    ],
    "volume_id": "vol-06ecce66797505a45"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "auto_enable_io": false,
    "product_codes": null,
    "volume_id": "vol-06ecce66797505a45"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:volume/vol-06ecce66797505a45"
    ],
    "tags": {
      "Name": "turbottest60181"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest60181"
      }
    ],
    "title": "turbottest60181",
    "volume_id": "vol-06ecce66797505a45"
  }
]
✔ PASSED

POSTTEST: tests/aws_ebs_volume

TEARDOWN: tests/aws_ebs_volume

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_ami []

PRETEST: tests/aws_ec2_ami

TEST: tests/aws_ec2_ami
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_ami.named_test_resource will be created
  + resource "aws_ami" "named_test_resource" {
      + architecture         = "x86_64"
      + arn                  = (known after apply)
      + description          = "This is a test image."
      + hypervisor           = (known after apply)
      + id                   = (known after apply)
      + image_location       = (known after apply)
      + image_owner_alias    = (known after apply)
      + image_type           = (known after apply)
      + manage_ebs_snapshots = (known after apply)
      + name                 = "turbottest39764"
      + owner_id             = (known after apply)
      + platform             = (known after apply)
      + platform_details     = (known after apply)
      + public               = (known after apply)
      + root_device_name     = "/dev/sda1"
      + root_snapshot_id     = (known after apply)
      + sriov_net_support    = "simple"
      + tags                 = {
          + "Name" = "turbottest39764"
        }
      + tags_all             = {
          + "Name" = "turbottest39764"
        }
      + usage_operation      = (known after apply)
      + virtualization_type  = "hvm"

      + ebs_block_device {
          + delete_on_termination = true
          + device_name           = "/dev/sda1"
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = 8
          + volume_type           = "standard"
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + virtual_name = (known after apply)
        }
    }

  # aws_ami_launch_permission.allow_access will be created
  + resource "aws_ami_launch_permission" "allow_access" {
      + account_id = "388460667113"
      + id         = (known after apply)
      + image_id   = (known after apply)
    }

  # aws_ami_launch_permission.deny_access will be created
  + resource "aws_ami_launch_permission" "deny_access" {
      + account_id = "013122550996"
      + id         = (known after apply)
      + image_id   = (known after apply)
    }

  # aws_ebs_snapshot.my_snapshot will be created
  + resource "aws_ebs_snapshot" "my_snapshot" {
      + arn                    = (known after apply)
      + data_encryption_key_id = (known after apply)
      + encrypted              = (known after apply)
      + id                     = (known after apply)
      + kms_key_id             = (known after apply)
      + owner_alias            = (known after apply)
      + owner_id               = (known after apply)
      + storage_tier           = (known after apply)
      + tags                   = {
          + "Name" = "turbot-snapshot-test"
        }
      + tags_all               = {
          + "Name" = "turbot-snapshot-test"
        }
      + volume_id              = (known after apply)
      + volume_size            = (known after apply)
    }

  # aws_ebs_volume.my_volume will be created
  + resource "aws_ebs_volume" "my_volume" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 8
      + snapshot_id       = (known after apply)
      + tags              = {
          + "Name" = "turbot-volume-test"
        }
      + tags_all          = {
          + "Name" = "turbot-volume-test"
        }
      + throughput        = (known after apply)
      + type              = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest39764"
  + snapshot_id   = (known after apply)
aws_ebs_volume.my_volume: Creating...
aws_ebs_volume.my_volume: Still creating... [10s elapsed]
aws_ebs_volume.my_volume: Creation complete after 11s [id=vol-0875220aa6e2cf172]
aws_ebs_snapshot.my_snapshot: Creating...
aws_ebs_snapshot.my_snapshot: Still creating... [10s elapsed]
aws_ebs_snapshot.my_snapshot: Creation complete after 16s [id=snap-012c578f83e061b7b]
aws_ami.named_test_resource: Creating...
aws_ami.named_test_resource: Creation complete after 6s [id=ami-02177b2bc3f82061b]
data.template_file.resource_aka: Reading...
aws_ami_launch_permission.deny_access: Creating...
data.template_file.resource_aka: Read complete after 0s [id=d0a84fc79c2e385a845ae97e990a9fc241df8a45f7fd9e5778bde1c16abc76bc]
aws_ami_launch_permission.allow_access: Creating...
aws_ami_launch_permission.deny_access: Creation complete after 1s [id=ami-02177b2bc3f82061b-013122550996]
aws_ami_launch_permission.allow_access: Creation complete after 1s [id=ami-02177b2bc3f82061b-388460667113]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 54, in data "null_data_source" "resource":
  54: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:image/ami-02177b2bc3f82061b"
resource_id = "ami-02177b2bc3f82061b"
resource_name = "turbottest39764"
snapshot_id = "snap-012c578f83e061b7b"

Running SQL query: query.sql
[
  {
    "image_id": "ami-02177b2bc3f82061b",
    "name": "turbottest39764"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "architecture": "x86_64",
    "block_device_mappings": [
      {
        "DeviceName": "/dev/sda1",
        "Ebs": {
          "DeleteOnTermination": true,
          "Encrypted": false,
          "Iops": null,
          "KmsKeyId": null,
          "OutpostArn": null,
          "SnapshotId": "snap-012c578f83e061b7b",
          "Throughput": null,
          "VolumeSize": 8,
          "VolumeType": "standard"
        },
        "NoDevice": null,
        "VirtualName": null
      }
    ],
    "description": "This is a test image.",
    "ena_support": false,
    "hypervisor": "xen",
    "image_id": "ami-02177b2bc3f82061b",
    "image_location": "632902152528/turbottest39764",
    "image_type": "machine",
    "name": "turbottest39764",
    "owner_id": "632902152528",
    "platform_details": "Linux/UNIX",
    "public": false,
    "root_device_name": "/dev/sda1",
    "root_device_type": "ebs",
    "sriov_net_support": "simple",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest39764"
      }
    ],
    "usage_operation": "RunInstances",
    "virtualization_type": "hvm"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:image/ami-02177b2bc3f82061b"
    ],
    "image_id": "ami-02177b2bc3f82061b",
    "launch_permissions": [
      {
        "Group": null,
        "OrganizationArn": null,
        "OrganizationalUnitArn": null,
        "UserId": "388460667113"
      },
      {
        "Group": null,
        "OrganizationArn": null,
        "OrganizationalUnitArn": null,
        "UserId": "013122550996"
      }
    ],
    "tags": {
      "Name": "turbottest39764"
    },
    "title": "turbottest39764"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "image_id": "ami-02177b2bc3f82061b",
    "name": "turbottest39764"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_ami

TEARDOWN: tests/aws_ec2_ami

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_ami_shared []

PRETEST: tests/aws_ec2_ami_shared

TEST: tests/aws_ec2_ami_shared
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_ami.named_test_resource will be created
  + resource "aws_ami" "named_test_resource" {
      + architecture         = "x86_64"
      + arn                  = (known after apply)
      + description          = "turbottest87054"
      + hypervisor           = (known after apply)
      + id                   = (known after apply)
      + image_location       = (known after apply)
      + image_owner_alias    = (known after apply)
      + image_type           = (known after apply)
      + manage_ebs_snapshots = (known after apply)
      + name                 = "turbottest87054"
      + owner_id             = (known after apply)
      + platform             = (known after apply)
      + platform_details     = (known after apply)
      + public               = (known after apply)
      + root_device_name     = "/dev/sda1"
      + root_snapshot_id     = (known after apply)
      + sriov_net_support    = "simple"
      + tags_all             = (known after apply)
      + usage_operation      = (known after apply)
      + virtualization_type  = "hvm"

      + ebs_block_device {
          + delete_on_termination = true
          + device_name           = "/dev/sda1"
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = 8
          + volume_type           = "standard"
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + virtual_name = (known after apply)
        }
    }

  # aws_ami_launch_permission.allow_access will be created
  + resource "aws_ami_launch_permission" "allow_access" {
      + account_id = "388460667113"
      + id         = (known after apply)
      + image_id   = (known after apply)
    }

  # aws_ami_launch_permission.deny_access will be created
  + resource "aws_ami_launch_permission" "deny_access" {
      + account_id = "013122550996"
      + id         = (known after apply)
      + image_id   = (known after apply)
    }

  # aws_ebs_snapshot.named_test_resource will be created
  + resource "aws_ebs_snapshot" "named_test_resource" {
      + arn                    = (known after apply)
      + data_encryption_key_id = (known after apply)
      + encrypted              = (known after apply)
      + id                     = (known after apply)
      + kms_key_id             = (known after apply)
      + owner_alias            = (known after apply)
      + owner_id               = (known after apply)
      + storage_tier           = (known after apply)
      + tags_all               = (known after apply)
      + volume_id              = (known after apply)
      + volume_size            = (known after apply)
    }

  # aws_ebs_volume.named_test_resource will be created
  + resource "aws_ebs_volume" "named_test_resource" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 8
      + snapshot_id       = (known after apply)
      + tags_all          = (known after apply)
      + throughput        = (known after apply)
      + type              = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest87054"
  + snapshot_id   = (known after apply)
aws_ebs_volume.named_test_resource: Creating...
aws_ebs_volume.named_test_resource: Still creating... [10s elapsed]
aws_ebs_volume.named_test_resource: Creation complete after 11s [id=vol-077da5342696e442b]
aws_ebs_snapshot.named_test_resource: Creating...
aws_ebs_snapshot.named_test_resource: Still creating... [10s elapsed]
aws_ebs_snapshot.named_test_resource: Still creating... [20s elapsed]
aws_ebs_snapshot.named_test_resource: Still creating... [30s elapsed]
aws_ebs_snapshot.named_test_resource: Still creating... [40s elapsed]
aws_ebs_snapshot.named_test_resource: Creation complete after 46s [id=snap-0b8de9b54561bba99]
aws_ami.named_test_resource: Creating...
aws_ami.named_test_resource: Creation complete after 6s [id=ami-0f9f5a94a7075d439]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=7b67c05090be7479fa1aea91f8744b8e0af01d642ce40928d228c9741e8387c7]
aws_ami_launch_permission.allow_access: Creating...
aws_ami_launch_permission.deny_access: Creating...
aws_ami_launch_permission.allow_access: Creation complete after 1s [id=ami-0f9f5a94a7075d439-388460667113]
aws_ami_launch_permission.deny_access: Creation complete after 1s [id=ami-0f9f5a94a7075d439-013122550996]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 53, in data "null_data_source" "resource":
  53: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:image/ami-0f9f5a94a7075d439"
resource_id = "ami-0f9f5a94a7075d439"
resource_name = "turbottest87054"
snapshot_id = "snap-0b8de9b54561bba99"

Running SQL query: test-get-query.sql
[
  {
    "architecture": "x86_64",
    "block_device_mappings": [
      {
        "DeviceName": "/dev/sda1",
        "Ebs": {
          "DeleteOnTermination": true,
          "Encrypted": false,
          "Iops": null,
          "KmsKeyId": null,
          "OutpostArn": null,
          "SnapshotId": "snap-0b8de9b54561bba99",
          "Throughput": null,
          "VolumeSize": 8,
          "VolumeType": "standard"
        },
        "NoDevice": null,
        "VirtualName": null
      }
    ],
    "description": "turbottest87054",
    "ena_support": false,
    "hypervisor": "xen",
    "image_id": "ami-0f9f5a94a7075d439",
    "image_location": "632902152528/turbottest87054",
    "image_type": "machine",
    "name": "turbottest87054",
    "owner_id": "632902152528",
    "platform_details": "Linux/UNIX",
    "public": false,
    "root_device_name": "/dev/sda1",
    "root_device_type": "ebs",
    "sriov_net_support": "simple",
    "usage_operation": "RunInstances",
    "virtualization_type": "hvm"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "image_id": "ami-0f9f5a94a7075d439",
    "name": "turbottest87054"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:image/ami-0f9f5a94a7075d439"
    ],
    "title": "turbottest87054"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_ami_shared

TEARDOWN: tests/aws_ec2_ami_shared

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_application_load_balancer []

PRETEST: tests/aws_ec2_application_load_balancer

TEST: tests/aws_ec2_application_load_balancer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_lb.named_test_resource will be created
  + resource "aws_lb" "named_test_resource" {
      + arn                        = (known after apply)
      + arn_suffix                 = (known after apply)
      + desync_mitigation_mode     = "defensive"
      + dns_name                   = (known after apply)
      + drop_invalid_header_fields = false
      + enable_deletion_protection = false
      + enable_http2               = true
      + enable_waf_fail_open       = false
      + id                         = (known after apply)
      + idle_timeout               = 60
      + internal                   = false
      + ip_address_type            = (known after apply)
      + load_balancer_type         = "application"
      + name                       = "turbottest6718"
      + security_groups            = (known after apply)
      + subnets                    = (known after apply)
      + tags                       = {
          + "name" = "turbottest6718"
        }
      + tags_all                   = {
          + "name" = "turbottest6718"
        }
      + vpc_id                     = (known after apply)
      + zone_id                    = (known after apply)

      + subnet_mapping {
          + allocation_id        = (known after apply)
          + ipv6_address         = (known after apply)
          + outpost_id           = (known after apply)
          + private_ipv4_address = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest6718"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-036dd69cf2981157b]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 2s [id=igw-03571cb31e0bdea24]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-08c9112e00e8451db]
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0197d3b31433d7645]
aws_lb.named_test_resource: Creating...
aws_lb.named_test_resource: Still creating... [10s elapsed]
aws_lb.named_test_resource: Still creating... [20s elapsed]
aws_lb.named_test_resource: Still creating... [30s elapsed]
aws_lb.named_test_resource: Still creating... [40s elapsed]
aws_lb.named_test_resource: Still creating... [50s elapsed]
aws_lb.named_test_resource: Still creating... [1m0s elapsed]
aws_lb.named_test_resource: Still creating... [1m10s elapsed]
aws_lb.named_test_resource: Still creating... [1m20s elapsed]
aws_lb.named_test_resource: Still creating... [1m30s elapsed]
aws_lb.named_test_resource: Still creating... [1m40s elapsed]
aws_lb.named_test_resource: Still creating... [1m50s elapsed]
aws_lb.named_test_resource: Still creating... [2m0s elapsed]
aws_lb.named_test_resource: Still creating... [2m10s elapsed]
aws_lb.named_test_resource: Still creating... [2m20s elapsed]
aws_lb.named_test_resource: Creation complete after 2m25s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256"
resource_id = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256"
resource_name = "turbottest6718"
vpc_id = "vpc-036dd69cf2981157b"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256",
    "ip_address_type": "ipv4",
    "name": "turbottest6718",
    "scheme": "internet-facing",
    "state_code": "active",
    "type": "application",
    "vpc_id": "vpc-036dd69cf2981157b"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256",
    "load_balancer_attributes": [
      {
        "Key": "access_logs.s3.enabled",
        "Value": "false"
      },
      {
        "Key": "access_logs.s3.bucket",
        "Value": ""
      },
      {
        "Key": "access_logs.s3.prefix",
        "Value": ""
      },
      {
        "Key": "idle_timeout.timeout_seconds",
        "Value": "60"
      },
      {
        "Key": "deletion_protection.enabled",
        "Value": "false"
      },
      {
        "Key": "routing.http2.enabled",
        "Value": "true"
      },
      {
        "Key": "routing.http.drop_invalid_header_fields.enabled",
        "Value": "false"
      },
      {
        "Key": "routing.http.xff_client_port.enabled",
        "Value": "false"
      },
      {
        "Key": "routing.http.desync_mitigation_mode",
        "Value": "defensive"
      },
      {
        "Key": "waf.fail_open.enabled",
        "Value": "false"
      },
      {
        "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
        "Value": "false"
      }
    ],
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest6718"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256",
    "name": "turbottest6718"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest6718/ed6bac3d5a39a256"
    ],
    "tags": {
      "name": "turbottest6718"
    },
    "title": "turbottest6718"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_application_load_balancer

TEARDOWN: tests/aws_ec2_application_load_balancer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_autoscaling_group []

PRETEST: tests/aws_ec2_autoscaling_group

TEST: tests/aws_ec2_autoscaling_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ami.named_test_resource will be created
  + resource "aws_ami" "named_test_resource" {
      + architecture         = "x86_64"
      + arn                  = (known after apply)
      + hypervisor           = (known after apply)
      + id                   = (known after apply)
      + image_location       = (known after apply)
      + image_owner_alias    = (known after apply)
      + image_type           = (known after apply)
      + manage_ebs_snapshots = (known after apply)
      + name                 = "turbottest38751"
      + owner_id             = (known after apply)
      + platform             = (known after apply)
      + platform_details     = (known after apply)
      + public               = (known after apply)
      + root_device_name     = "/dev/sda1"
      + root_snapshot_id     = (known after apply)
      + sriov_net_support    = "simple"
      + tags                 = {
          + "name" = "turbottest38751"
        }
      + tags_all             = {
          + "name" = "turbottest38751"
        }
      + usage_operation      = (known after apply)
      + virtualization_type  = "hvm"

      + ebs_block_device {
          + delete_on_termination = true
          + device_name           = "/dev/sda1"
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = 8
          + volume_type           = "standard"
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + virtual_name = (known after apply)
        }
    }

  # aws_autoscaling_group.named_test_resource will be created
  + resource "aws_autoscaling_group" "named_test_resource" {
      + arn                       = (known after apply)
      + availability_zones        = [
          + "us-east-1a",
        ]
      + default_cooldown          = (known after apply)
      + desired_capacity          = (known after apply)
      + force_delete              = true
      + force_delete_warm_pool    = false
      + health_check_grace_period = 300
      + health_check_type         = (known after apply)
      + id                        = (known after apply)
      + launch_configuration      = "turbottest38751"
      + max_size                  = 0
      + metrics_granularity       = "1Minute"
      + min_size                  = 0
      + name                      = "turbottest38751"
      + name_prefix               = (known after apply)
      + protect_from_scale_in     = false
      + service_linked_role_arn   = (known after apply)
      + vpc_zone_identifier       = (known after apply)
      + wait_for_capacity_timeout = "10m"

      + tag {
          + key                 = "Name"
          + propagate_at_launch = true
          + value               = "turbottest38751"
        }
    }

  # aws_autoscaling_policy.bat will be created
  + resource "aws_autoscaling_policy" "bat" {
      + adjustment_type         = "ChangeInCapacity"
      + arn                     = (known after apply)
      + autoscaling_group_name  = "turbottest38751"
      + cooldown                = 300
      + enabled                 = true
      + id                      = (known after apply)
      + metric_aggregation_type = (known after apply)
      + name                    = "turbottest38751"
      + policy_type             = "SimpleScaling"
      + scaling_adjustment      = 4
    }

  # aws_ebs_snapshot.my_snapshot will be created
  + resource "aws_ebs_snapshot" "my_snapshot" {
      + arn                    = (known after apply)
      + data_encryption_key_id = (known after apply)
      + encrypted              = (known after apply)
      + id                     = (known after apply)
      + kms_key_id             = (known after apply)
      + owner_alias            = (known after apply)
      + owner_id               = (known after apply)
      + storage_tier           = (known after apply)
      + tags                   = {
          + "Name" = "turbot-snapshot-test"
        }
      + tags_all               = {
          + "Name" = "turbot-snapshot-test"
        }
      + volume_id              = (known after apply)
      + volume_size            = (known after apply)
    }

  # aws_ebs_volume.my_volume will be created
  + resource "aws_ebs_volume" "my_volume" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 8
      + snapshot_id       = (known after apply)
      + tags              = {
          + "Name" = "turbot-volume-test"
        }
      + tags_all          = {
          + "Name" = "turbot-volume-test"
        }
      + throughput        = (known after apply)
      + type              = (known after apply)
    }

  # aws_launch_configuration.named_test_resource will be created
  + resource "aws_launch_configuration" "named_test_resource" {
      + arn                         = (known after apply)
      + associate_public_ip_address = false
      + ebs_optimized               = (known after apply)
      + enable_monitoring           = true
      + id                          = (known after apply)
      + image_id                    = (known after apply)
      + instance_type               = "t2.micro"
      + key_name                    = (known after apply)
      + name                        = "turbottest38751"
      + name_prefix                 = (known after apply)

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + no_device             = (known after apply)
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + policy_arn    = (known after apply)
  + policy_name   = "turbottest38751"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest38751"
aws_ebs_volume.my_volume: Creating...
aws_ebs_volume.my_volume: Still creating... [10s elapsed]
aws_ebs_volume.my_volume: Creation complete after 11s [id=vol-0cad1775b495ecaf6]
aws_ebs_snapshot.my_snapshot: Creating...
aws_ebs_snapshot.my_snapshot: Still creating... [10s elapsed]
aws_ebs_snapshot.my_snapshot: Creation complete after 16s [id=snap-0bba082ebe5b2cf79]
aws_ami.named_test_resource: Creating...
aws_ami.named_test_resource: Creation complete after 6s [id=ami-0c5dc1d92d57ef4af]
aws_launch_configuration.named_test_resource: Creating...
aws_launch_configuration.named_test_resource: Creation complete after 1s [id=turbottest38751]
aws_autoscaling_group.named_test_resource: Creating...
aws_autoscaling_group.named_test_resource: Creation complete after 1s [id=turbottest38751]
aws_autoscaling_policy.bat: Creating...
aws_autoscaling_policy.bat: Creation complete after 1s [id=turbottest38751]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
policy_arn = "arn:aws:autoscaling:us-east-1:632902152528:scalingPolicy:b3d0c81e-a6d8-4537-a558-5bdbd5bfdd94:autoScalingGroupName/turbottest38751:policyName/turbottest38751"
policy_name = "turbottest38751"
region_name = "us-east-1"
resource_aka = "arn:aws:autoscaling:us-east-1:632902152528:autoScalingGroup:f25a3fdb-4766-44a6-8d54-0ac77ecb27ff:autoScalingGroupName/turbottest38751"
resource_id = "turbottest38751"
resource_name = "turbottest38751"

Running SQL query: query.sql
[
  {
    "autoscaling_group_arn": "arn:aws:autoscaling:us-east-1:632902152528:autoScalingGroup:f25a3fdb-4766-44a6-8d54-0ac77ecb27ff:autoScalingGroupName/turbottest38751",
    "name": "turbottest38751"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "autoscaling_group_arn": "arn:aws:autoscaling:us-east-1:632902152528:autoScalingGroup:f25a3fdb-4766-44a6-8d54-0ac77ecb27ff:autoScalingGroupName/turbottest38751",
    "availability_zones": [
      "us-east-1a"
    ],
    "launch_configuration_name": "turbottest38751",
    "name": "turbottest38751",
    "tags_src": [
      {
        "Key": "Name",
        "PropagateAtLaunch": true,
        "ResourceId": "turbottest38751",
        "ResourceType": "auto-scaling-group",
        "Value": "turbottest38751"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest38751",
    "policies": [
      {
        "AdjustmentType": "ChangeInCapacity",
        "Alarms": null,
        "AutoScalingGroupName": "turbottest38751",
        "Cooldown": 300,
        "Enabled": true,
        "EstimatedInstanceWarmup": null,
        "MetricAggregationType": null,
        "MinAdjustmentMagnitude": null,
        "MinAdjustmentStep": null,
        "PolicyARN": "arn:aws:autoscaling:us-east-1:632902152528:scalingPolicy:b3d0c81e-a6d8-4537-a558-5bdbd5bfdd94:autoScalingGroupName/turbottest38751:policyName/turbottest38751",
        "PolicyName": "turbottest38751",
        "PolicyType": "SimpleScaling",
        "PredictiveScalingConfiguration": null,
        "ScalingAdjustment": 4,
        "StepAdjustments": null,
        "TargetTrackingConfiguration": null
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:autoscaling:us-east-1:632902152528:autoScalingGroup:f25a3fdb-4766-44a6-8d54-0ac77ecb27ff:autoScalingGroupName/turbottest38751"
    ],
    "autoscaling_group_arn": "arn:aws:autoscaling:us-east-1:632902152528:autoScalingGroup:f25a3fdb-4766-44a6-8d54-0ac77ecb27ff:autoScalingGroupName/turbottest38751",
    "availability_zones": [
      "us-east-1a"
    ],
    "launch_configuration_name": "turbottest38751",
    "name": "turbottest38751",
    "tags": {
      "Name": "turbottest38751"
    },
    "tags_src": [
      {
        "Key": "Name",
        "PropagateAtLaunch": true,
        "ResourceId": "turbottest38751",
        "ResourceType": "auto-scaling-group",
        "Value": "turbottest38751"
      }
    ],
    "title": "turbottest38751"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:autoscaling:us-east-1:632902152528:autoScalingGroup:f25a3fdb-4766-44a6-8d54-0ac77ecb27ff:autoScalingGroupName/turbottest38751"
    ],
    "tags": {
      "Name": "turbottest38751"
    },
    "title": "turbottest38751"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_autoscaling_group

TEARDOWN: tests/aws_ec2_autoscaling_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_capacity_reservation []

PRETEST: tests/aws_ec2_capacity_reservation

TEST: tests/aws_ec2_capacity_reservation
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ec2_capacity_reservation.named_test_resource will be created
  + resource "aws_ec2_capacity_reservation" "named_test_resource" {
      + arn                     = (known after apply)
      + availability_zone       = "us-east-1a"
      + ebs_optimized           = false
      + end_date_type           = "unlimited"
      + ephemeral_storage       = false
      + id                      = (known after apply)
      + instance_count          = 1
      + instance_match_criteria = "open"
      + instance_platform       = "Linux/UNIX"
      + instance_type           = "t2.micro"
      + owner_id                = (known after apply)
      + tags_all                = (known after apply)
      + tenancy                 = "default"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id        = "632902152528"
  + availability_zone = "us-east-1a"
  + aws_partition     = "aws"
  + instance_count    = 1
  + instance_platform = "Linux/UNIX"
  + instance_type     = "t2.micro"
  + region_name       = "us-east-1"
  + resource_aka      = (known after apply)
  + resource_id       = (known after apply)
aws_ec2_capacity_reservation.named_test_resource: Creating...
aws_ec2_capacity_reservation.named_test_resource: Creation complete after 2s [id=cr-0e5bebe73c4b7b626]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
availability_zone = "us-east-1a"
aws_partition = "aws"
instance_count = 1
instance_platform = "Linux/UNIX"
instance_type = "t2.micro"
region_name = "us-east-1"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:capacity-reservation/cr-0e5bebe73c4b7b626"
resource_id = "cr-0e5bebe73c4b7b626"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "availability_zone": "us-east-1a",
    "capacity_reservation_id": "cr-0e5bebe73c4b7b626",
    "instance_platform": "Linux/UNIX",
    "instance_type": "t2.micro",
    "partition": "aws",
    "region": "us-east-1",
    "state": "active"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "availability_zone": "us-east-1a",
    "capacity_reservation_id": "cr-0e5bebe73c4b7b626",
    "instance_platform": "Linux/UNIX",
    "instance_type": "t2.micro",
    "partition": "aws",
    "region": "us-east-1",
    "state": "active"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:capacity-reservation/cr-0e5bebe73c4b7b626"
    ],
    "title": "cr-0e5bebe73c4b7b626"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_capacity_reservation

TEARDOWN: tests/aws_ec2_capacity_reservation

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_classic_load_balancer []

PRETEST: tests/aws_ec2_classic_load_balancer

TEST: tests/aws_ec2_classic_load_balancer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_elb.named_test_resource will be created
  + resource "aws_elb" "named_test_resource" {
      + arn                         = (known after apply)
      + availability_zones          = (known after apply)
      + connection_draining         = false
      + connection_draining_timeout = 300
      + cross_zone_load_balancing   = true
      + desync_mitigation_mode      = "defensive"
      + dns_name                    = (known after apply)
      + id                          = (known after apply)
      + idle_timeout                = 60
      + instances                   = (known after apply)
      + internal                    = (known after apply)
      + name                        = "turbottest91978"
      + security_groups             = (known after apply)
      + source_security_group       = (known after apply)
      + source_security_group_id    = (known after apply)
      + subnets                     = (known after apply)
      + tags                        = {
          + "Name" = "turbottest91978"
        }
      + tags_all                    = {
          + "Name" = "turbottest91978"
        }
      + zone_id                     = (known after apply)

      + health_check {
          + healthy_threshold   = (known after apply)
          + interval            = (known after apply)
          + target              = (known after apply)
          + timeout             = (known after apply)
          + unhealthy_threshold = (known after apply)
        }

      + listener {
          + instance_port     = 80
          + instance_protocol = "http"
          + lb_port           = 80
          + lb_protocol       = "http"
        }
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/24"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest91978"
  + subnet_id     = (known after apply)
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0aaa8e16c55df14e1]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-06c95a52343159a46]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-0b364ad5ee0199d6c]
aws_elb.named_test_resource: Creating...
aws_elb.named_test_resource: Creation complete after 4s [id=turbottest91978]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/turbottest91978"
resource_id = "turbottest91978"
resource_name = "turbottest91978"
subnet_id = "subnet-0b364ad5ee0199d6c"
vpc_id = "vpc-0aaa8e16c55df14e1"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/turbottest91978",
    "name": "turbottest91978",
    "scheme": "internet-facing",
    "subnets": [
      "subnet-0b364ad5ee0199d6c"
    ],
    "vpc_id": "vpc-0aaa8e16c55df14e1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "access_log_emit_interval": null,
    "access_log_enabled": false,
    "access_log_s3_bucket_name": null,
    "access_log_s3_bucket_prefix": null,
    "additional_attributes": [
      {
        "Key": "elb.http.desyncmitigationmode",
        "Value": "defensive"
      }
    ],
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/turbottest91978",
    "connection_draining_enabled": false,
    "connection_draining_timeout": 300,
    "connection_settings_idle_timeout": 60,
    "cross_zone_load_balancing_enabled": true,
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest91978"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "turbottest91978",
    "scheme": "internet-facing",
    "subnets": [
      "subnet-0b364ad5ee0199d6c"
    ],
    "vpc_id": "vpc-0aaa8e16c55df14e1"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/turbottest91978"
    ],
    "name": "turbottest91978",
    "tags": {
      "Name": "turbottest91978"
    },
    "title": "turbottest91978"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_classic_load_balancer

TEARDOWN: tests/aws_ec2_classic_load_balancer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_gateway_load_balancer []

PRETEST: tests/aws_ec2_gateway_load_balancer

TEST: tests/aws_ec2_gateway_load_balancer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_lb.named_test_resource will be created
  + resource "aws_lb" "named_test_resource" {
      + arn                              = (known after apply)
      + arn_suffix                       = (known after apply)
      + dns_name                         = (known after apply)
      + drop_invalid_header_fields       = false
      + enable_cross_zone_load_balancing = false
      + enable_deletion_protection       = false
      + enable_http2                     = true
      + enable_waf_fail_open             = false
      + id                               = (known after apply)
      + idle_timeout                     = 60
      + internal                         = false
      + ip_address_type                  = (known after apply)
      + load_balancer_type               = "gateway"
      + name                             = "turbottest14572"
      + security_groups                  = (known after apply)
      + subnets                          = (known after apply)
      + tags                             = {
          + "name" = "turbottest14572"
        }
      + tags_all                         = {
          + "name" = "turbottest14572"
        }
      + vpc_id                           = (known after apply)
      + zone_id                          = (known after apply)

      + subnet_mapping {
          + allocation_id        = (known after apply)
          + ipv6_address         = (known after apply)
          + outpost_id           = (known after apply)
          + private_ipv4_address = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest14572"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0d917b7f631d2290c]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-0d0d64377ff37cd8c]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creation complete after 2s [id=subnet-04bea6b2c0b007690]
aws_subnet.my_subnet2: Creation complete after 2s [id=subnet-0fcd37dc471e90c21]
aws_lb.named_test_resource: Creating...
aws_lb.named_test_resource: Still creating... [10s elapsed]
aws_lb.named_test_resource: Still creating... [20s elapsed]
aws_lb.named_test_resource: Still creating... [30s elapsed]
aws_lb.named_test_resource: Still creating... [40s elapsed]
aws_lb.named_test_resource: Still creating... [50s elapsed]
aws_lb.named_test_resource: Still creating... [1m0s elapsed]
aws_lb.named_test_resource: Creation complete after 1m2s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca"
resource_id = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca"
resource_name = "turbottest14572"
vpc_id = "vpc-0d917b7f631d2290c"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca",
    "name": "turbottest14572",
    "region": "us-east-1",
    "state_code": "active",
    "type": "gateway",
    "vpc_id": "vpc-0d917b7f631d2290c"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca",
    "load_balancer_attributes": [
      {
        "Key": "deletion_protection.enabled",
        "Value": "false"
      },
      {
        "Key": "load_balancing.cross_zone.enabled",
        "Value": "false"
      }
    ],
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest14572"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca",
    "name": "turbottest14572"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/gwy/turbottest14572/b554e566cf798bca"
    ],
    "tags": {
      "name": "turbottest14572"
    },
    "title": "turbottest14572"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_gateway_load_balancer

TEARDOWN: tests/aws_ec2_gateway_load_balancer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_instance []

PRETEST: tests/aws_ec2_instance

TEST: tests/aws_ec2_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.named_test_resource will be created
  + resource "aws_instance" "named_test_resource" {
      + ami                                  = "ami-0e081ed4ce61c1fb2"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = false
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest53292"
        }
      + tags_all                             = {
          + "Name" = "turbottest53292"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "ddd424ea1a8baca5cbf4860d0758cfd8cd4fe667"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "name" = "turbottest53292"
        }
      + tags_all                                       = {
          + "name" = "turbottest53292"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest53292"
        }
      + tags_all                             = {
          + "name" = "turbottest53292"
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id        = "632902152528"
  + availability_zone = (known after apply)
  + aws_partition     = "aws"
  + image_id          = "ami-0e081ed4ce61c1fb2"
  + region_name       = "us-east-1"
  + resource_aka      = (known after apply)
  + resource_id       = (known after apply)
  + resource_name     = "turbottest53292"
  + subnet_id         = (known after apply)
  + vpc_id            = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-0e173d58eac938189]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-06603a91d68578521]
aws_instance.named_test_resource: Creating...
aws_instance.named_test_resource: Still creating... [10s elapsed]
aws_instance.named_test_resource: Still creating... [20s elapsed]
aws_instance.named_test_resource: Still creating... [30s elapsed]
aws_instance.named_test_resource: Still creating... [40s elapsed]
aws_instance.named_test_resource: Creation complete after 45s [id=i-0547e19e865d104b0]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
availability_zone = "us-east-1b"
aws_partition = "aws"
image_id = "ami-0e081ed4ce61c1fb2"
region_name = "us-east-1"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:instance/i-0547e19e865d104b0"
resource_id = "i-0547e19e865d104b0"
resource_name = "turbottest53292"
subnet_id = "subnet-06603a91d68578521"
vpc_id = "vpc-0e173d58eac938189"

Running SQL query: query.sql
[
  {
    "image_id": "ami-0e081ed4ce61c1fb2",
    "instance_id": "i-0547e19e865d104b0"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:instance/i-0547e19e865d104b0"
    ],
    "arn": "arn:aws:ec2:us-east-1:632902152528:instance/i-0547e19e865d104b0",
    "cpu_options_core_count": 1,
    "cpu_options_threads_per_core": 1,
    "ebs_optimized": false,
    "hypervisor": "xen",
    "image_id": "ami-0e081ed4ce61c1fb2",
    "instance_id": "i-0547e19e865d104b0",
    "instance_type": "t2.micro",
    "monitoring_state": "disabled",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest53292"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:instance/i-0547e19e865d104b0"
    ],
    "disable_api_termination": false,
    "instance_id": "i-0547e19e865d104b0",
    "instance_initiated_shutdown_behavior": "stop",
    "instance_status": {
      "AvailabilityZone": "us-east-1b",
      "Events": null,
      "InstanceId": "i-0547e19e865d104b0",
      "InstanceState": {
        "Code": 16,
        "Name": "running"
      },
      "InstanceStatus": {
        "Details": [
          {
            "ImpairedSince": null,
            "Name": "reachability",
            "Status": "initializing"
          }
        ],
        "Status": "initializing"
      },
      "OutpostArn": null,
      "SystemStatus": {
        "Details": [
          {
            "ImpairedSince": null,
            "Name": "reachability",
            "Status": "initializing"
          }
        ],
        "Status": "initializing"
      }
    },
    "kernel_id": null,
    "ram_disk_id": null,
    "sriov_net_support": "simple",
    "tags": {
      "Name": "turbottest53292"
    },
    "title": "turbottest53292",
    "user_data": "turbot"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "image_id": "ami-0e081ed4ce61c1fb2",
    "instance_id": "i-0547e19e865d104b0"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_instance

TEARDOWN: tests/aws_ec2_instance

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_key_pair []

PRETEST: tests/aws_ec2_key_pair

TEST: tests/aws_ec2_key_pair
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_key_pair.named_test_resource will be created
  + resource "aws_key_pair" "named_test_resource" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "turbottest52458"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + public_key      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC6B60dQX19dOO0wmNnPf27NJBXQhuVAsFcshY7YqTmNA1dfl0lXvJFSF0nVTvaxtE2854gmvygm/yafopG33zJeH+k2ZrblivkEuH0NNajKMp2mBumkk8RiTVvU1ET4m6Z1jZaK0dTSeV2k6gUk7Wmvo4+6RIu+wdAtwGGGcSq4HJ4M0G1CGHruBywMdOs5CklqRn7BRMh2aexowDachlabUKRFwTf7OCjDcoCWHo+o4kHV7NDEdhFzrE2fxXttt054kd5CMZOEOB9p01pAqSPrxFv3S/BpiXuhmjwsUsIdfHIgFrFhNY/M4+KhTa3pI69NqsigReotTEzk2QwHyHSjsRwfzeJNRgI8iqGIdYr3+t6zCKswyzgV0hqalZhXtpVUEBbumJAKWy+VzTnOXUQ5zEVvabTxi3dsW9zMGofjwhiC75x97RE7U/ZEanRM+0Avr8e3c3ob4NLf9JOwbvB/jYvS6j/nuwJ5H6igT3Oj0oDiknh2WtOgH/BKKaCq5Nyl15Df65i0PNgKRcLy+x0fubYUtsCOMPpQTfztSYGjbvAhAOrH2LJF0i2dTD3PcVw6R6uDpJSw9QkzdD+2ofxnqjGPUeKR3mraGOXt2hZe9F9bvvdZScDfdAoyBUYTO2/sxsQFobRtdiEk2up+mNIx9QXMXO2dOgtNUYZKc1DdQ== clara@turbot.com"
      + tags            = {
          + "name" = "turbottest52458"
        }
      + tags_all        = {
          + "name" = "turbottest52458"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id      = "632902152528"
  + aws_partition   = "aws"
  + key_fingerprint = (known after apply)
  + region_name     = "us-east-1"
  + resource_id     = (known after apply)
  + resource_name   = "turbottest52458"
aws_key_pair.named_test_resource: Creating...
aws_key_pair.named_test_resource: Creation complete after 0s [id=turbottest52458]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
key_fingerprint = "de:68:64:96:32:b9:44:c8:87:40:93:8e:27:f8:2f:05"
region_name = "us-east-1"
resource_id = "key-09b005209e8e2a76d"
resource_name = "turbottest52458"

Running SQL query: query.sql
[
  {
    "key_name": "turbottest52458",
    "key_pair_id": "key-09b005209e8e2a76d"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "key_fingerprint": "de:68:64:96:32:b9:44:c8:87:40:93:8e:27:f8:2f:05",
    "key_name": "turbottest52458",
    "key_pair_id": "key-09b005209e8e2a76d",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest52458"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:key-pair/turbottest52458"
    ],
    "key_name": "turbottest52458",
    "key_pair_id": "key-09b005209e8e2a76d",
    "tags": {
      "name": "turbottest52458"
    },
    "title": "turbottest52458"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "key_name": "turbottest52458",
    "key_pair_id": "key-09b005209e8e2a76d"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_key_pair

TEARDOWN: tests/aws_ec2_key_pair

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_launch_configuration []

PRETEST: tests/aws_ec2_launch_configuration

TEST: tests/aws_ec2_launch_configuration
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ami.named_test_resource will be created
  + resource "aws_ami" "named_test_resource" {
      + architecture         = "x86_64"
      + arn                  = (known after apply)
      + hypervisor           = (known after apply)
      + id                   = (known after apply)
      + image_location       = (known after apply)
      + image_owner_alias    = (known after apply)
      + image_type           = (known after apply)
      + manage_ebs_snapshots = (known after apply)
      + name                 = "turbottest45773"
      + owner_id             = (known after apply)
      + platform             = (known after apply)
      + platform_details     = (known after apply)
      + public               = (known after apply)
      + root_device_name     = "/dev/sda1"
      + root_snapshot_id     = (known after apply)
      + sriov_net_support    = "simple"
      + tags                 = {
          + "name" = "turbottest45773"
        }
      + tags_all             = {
          + "name" = "turbottest45773"
        }
      + usage_operation      = (known after apply)
      + virtualization_type  = "hvm"

      + ebs_block_device {
          + delete_on_termination = true
          + device_name           = "/dev/sda1"
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = 1
          + volume_type           = "standard"
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + virtual_name = (known after apply)
        }
    }

  # aws_ebs_snapshot.my_snapshot will be created
  + resource "aws_ebs_snapshot" "my_snapshot" {
      + arn                    = (known after apply)
      + data_encryption_key_id = (known after apply)
      + encrypted              = (known after apply)
      + id                     = (known after apply)
      + kms_key_id             = (known after apply)
      + owner_alias            = (known after apply)
      + owner_id               = (known after apply)
      + storage_tier           = (known after apply)
      + tags                   = {
          + "Name" = "turbot-snapshot-test"
        }
      + tags_all               = {
          + "Name" = "turbot-snapshot-test"
        }
      + volume_id              = (known after apply)
      + volume_size            = (known after apply)
    }

  # aws_ebs_volume.my_volume will be created
  + resource "aws_ebs_volume" "my_volume" {
      + arn               = (known after apply)
      + availability_zone = "us-east-1a"
      + encrypted         = (known after apply)
      + final_snapshot    = false
      + id                = (known after apply)
      + iops              = (known after apply)
      + kms_key_id        = (known after apply)
      + size              = 1
      + snapshot_id       = (known after apply)
      + tags              = {
          + "Name" = "turbot-volume-test"
        }
      + tags_all          = {
          + "Name" = "turbot-volume-test"
        }
      + throughput        = (known after apply)
      + type              = "standard"
    }

  # aws_launch_configuration.named_test_resource will be created
  + resource "aws_launch_configuration" "named_test_resource" {
      + arn                         = (known after apply)
      + associate_public_ip_address = false
      + ebs_optimized               = (known after apply)
      + enable_monitoring           = true
      + id                          = (known after apply)
      + image_id                    = (known after apply)
      + instance_type               = "t2.nano"
      + key_name                    = (known after apply)
      + name                        = "turbottest45773"
      + name_prefix                 = (known after apply)

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + no_device             = (known after apply)
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + throughput            = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + image_id      = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest45773"
aws_ebs_volume.my_volume: Creating...
aws_ebs_volume.my_volume: Still creating... [10s elapsed]
aws_ebs_volume.my_volume: Creation complete after 11s [id=vol-00ef3b2a6ffeb43d7]
aws_ebs_snapshot.my_snapshot: Creating...
aws_ebs_snapshot.my_snapshot: Still creating... [10s elapsed]
aws_ebs_snapshot.my_snapshot: Creation complete after 16s [id=snap-024a8d211445f4bd6]
aws_ami.named_test_resource: Creating...
aws_ami.named_test_resource: Creation complete after 6s [id=ami-00995d3a82bc35bd7]
aws_launch_configuration.named_test_resource: Creating...
aws_launch_configuration.named_test_resource: Creation complete after 2s [id=turbottest45773]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
image_id = "ami-00995d3a82bc35bd7"
resource_aka = "arn:aws:autoscaling:us-east-1:632902152528:launchConfiguration:e9f7eaad-d763-4efa-846d-e0e42a7f1421:launchConfigurationName/turbottest45773"
resource_id = "turbottest45773"
resource_name = "turbottest45773"

Running SQL query: test-get-query.sql
[
  {
    "ebs_optimized": false,
    "image_id": "ami-00995d3a82bc35bd7",
    "instance_monitoring_enabled": true,
    "instance_type": "t2.nano",
    "launch_configuration_arn": "arn:aws:autoscaling:us-east-1:632902152528:launchConfiguration:e9f7eaad-d763-4efa-846d-e0e42a7f1421:launchConfigurationName/turbottest45773",
    "name": "turbottest45773"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:autoscaling:us-east-1:632902152528:launchConfiguration:e9f7eaad-d763-4efa-846d-e0e42a7f1421:launchConfigurationName/turbottest45773"
    ],
    "name": "turbottest45773",
    "title": "turbottest45773"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "launch_configuration_arn": "arn:aws:autoscaling:us-east-1:632902152528:launchConfiguration:e9f7eaad-d763-4efa-846d-e0e42a7f1421:launchConfigurationName/turbottest45773",
    "name": "turbottest45773"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_launch_configuration

TEARDOWN: tests/aws_ec2_launch_configuration

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_load_balancer_listener []

PRETEST: tests/aws_ec2_load_balancer_listener

TEST: tests/aws_ec2_load_balancer_listener
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_lb.my_lb will be created
  + resource "aws_lb" "my_lb" {
      + arn                        = (known after apply)
      + arn_suffix                 = (known after apply)
      + desync_mitigation_mode     = "defensive"
      + dns_name                   = (known after apply)
      + drop_invalid_header_fields = false
      + enable_deletion_protection = false
      + enable_http2               = true
      + enable_waf_fail_open       = false
      + id                         = (known after apply)
      + idle_timeout               = 60
      + internal                   = false
      + ip_address_type            = (known after apply)
      + load_balancer_type         = "application"
      + name                       = "turbottest64036"
      + security_groups            = (known after apply)
      + subnets                    = (known after apply)
      + tags_all                   = (known after apply)
      + vpc_id                     = (known after apply)
      + zone_id                    = (known after apply)

      + subnet_mapping {
          + allocation_id        = (known after apply)
          + ipv6_address         = (known after apply)
          + outpost_id           = (known after apply)
          + private_ipv4_address = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # aws_lb_listener.named_test_resource will be created
  + resource "aws_lb_listener" "named_test_resource" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + load_balancer_arn = (known after apply)
      + port              = 443
      + protocol          = (known after apply)
      + ssl_policy        = (known after apply)
      + tags_all          = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }
    }

  # aws_lb_target_group.my_targetGroup will be created
  + resource "aws_lb_target_group" "my_targetGroup" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = false
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancing_algorithm_type      = (known after apply)
      + name                               = (known after apply)
      + port                               = 80
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "HTTP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags_all                           = (known after apply)
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check {
          + enabled             = (known after apply)
          + healthy_threshold   = (known after apply)
          + interval            = (known after apply)
          + matcher             = (known after apply)
          + path                = (known after apply)
          + port                = (known after apply)
          + protocol            = (known after apply)
          + timeout             = (known after apply)
          + unhealthy_threshold = (known after apply)
        }

      + stickiness {
          + cookie_duration = (known after apply)
          + cookie_name     = (known after apply)
          + enabled         = (known after apply)
          + type            = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id        = "632902152528"
  + aws_partition     = "aws"
  + load_balancer_arn = (known after apply)
  + region_name       = "us-east-1"
  + resource_aka      = (known after apply)
  + resource_id       = (known after apply)
  + resource_name     = "turbottest64036"
  + target_group_arn  = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0650091a33b6fc9e0]
aws_internet_gateway.igw: Creating...
aws_lb_target_group.my_targetGroup: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-04fb3f9500a16dbab]
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-02e8a1e7907c80c5f]
aws_lb_target_group.my_targetGroup: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/tf-20220620084001878500000001/cbcb038dabddaad9]
aws_subnet.my_subnet2: Creation complete after 2s [id=subnet-02c158b72a2082923]
aws_lb.my_lb: Creating...
aws_lb.my_lb: Still creating... [10s elapsed]
aws_lb.my_lb: Still creating... [20s elapsed]
aws_lb.my_lb: Still creating... [30s elapsed]
aws_lb.my_lb: Still creating... [40s elapsed]
aws_lb.my_lb: Still creating... [50s elapsed]
aws_lb.my_lb: Still creating... [1m0s elapsed]
aws_lb.my_lb: Still creating... [1m10s elapsed]
aws_lb.my_lb: Still creating... [1m20s elapsed]
aws_lb.my_lb: Still creating... [1m30s elapsed]
aws_lb.my_lb: Still creating... [1m40s elapsed]
aws_lb.my_lb: Still creating... [1m50s elapsed]
aws_lb.my_lb: Still creating... [2m0s elapsed]
aws_lb.my_lb: Creation complete after 2m3s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest64036/d7d695ad9c1ef104]
aws_lb_listener.named_test_resource: Creating...
aws_lb_listener.named_test_resource: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
load_balancer_arn = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest64036/d7d695ad9c1ef104"
region_name = "us-east-1"
resource_aka = "arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e"
resource_id = "arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e"
resource_name = "turbottest64036"
target_group_arn = "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/tf-20220620084001878500000001/cbcb038dabddaad9"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e",
    "default_actions": [
      {
        "AuthenticateCognitoConfig": null,
        "AuthenticateOidcConfig": null,
        "FixedResponseConfig": null,
        "ForwardConfig": {
          "TargetGroupStickinessConfig": {
            "DurationSeconds": null,
            "Enabled": false
          },
          "TargetGroups": [
            {
              "TargetGroupArn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/tf-20220620084001878500000001/cbcb038dabddaad9",
              "Weight": 1
            }
          ]
        },
        "Order": 1,
        "RedirectConfig": null,
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/tf-20220620084001878500000001/cbcb038dabddaad9",
        "Type": "forward"
      }
    ],
    "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest64036/d7d695ad9c1ef104",
    "port": 443,
    "protocol": "HTTP"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e"
    ],
    "title": "turbottest64036-e22e9fc5c98cdb7e"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e",
    "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/app/turbottest64036/d7d695ad9c1ef104",
    "port": 443,
    "protocol": "HTTP"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:listener/app/turbottest64036/d7d695ad9c1ef104/e22e9fc5c98cdb7e"
    ],
    "title": "turbottest64036-e22e9fc5c98cdb7e"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_load_balancer_listener

TEARDOWN: tests/aws_ec2_load_balancer_listener

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_managed_prefix_list []

PRETEST: tests/aws_ec2_managed_prefix_list

TEST: tests/aws_ec2_managed_prefix_list
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ec2_managed_prefix_list.named_test_resource will be created
  + resource "aws_ec2_managed_prefix_list" "named_test_resource" {
      + address_family = "IPv4"
      + arn            = (known after apply)
      + id             = (known after apply)
      + max_entries    = 5
      + name           = "turbottest15516"
      + owner_id       = (known after apply)
      + tags           = {
          + "name" = "turbottest15516"
        }
      + tags_all       = {
          + "name" = "turbottest15516"
        }
      + version        = (known after apply)

      + entry {
          + cidr        = (known after apply)
          + description = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + address_family = "IPv4"
  + arn            = (known after apply)
  + id             = (known after apply)
  + owner_id       = (known after apply)
  + resource_name  = "turbottest15516"
aws_ec2_managed_prefix_list.named_test_resource: Creating...
aws_ec2_managed_prefix_list.named_test_resource: Creation complete after 2s [id=pl-0180f170f1da58c4f]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

address_family = "IPv4"
arn = "arn:aws:ec2:us-east-1:632902152528:prefix-list/pl-0180f170f1da58c4f"
id = "pl-0180f170f1da58c4f"
owner_id = "632902152528"
resource_name = "turbottest15516"

Running SQL query: test-list-query.sql
[
  {
    "address_family": "IPv4",
    "arn": "arn:aws:ec2:us-east-1:632902152528:prefix-list/pl-0180f170f1da58c4f",
    "id": "pl-0180f170f1da58c4f",
    "name": "turbottest15516",
    "owner_id": "632902152528"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:prefix-list/pl-0180f170f1da58c4f"
    ],
    "tags": {
      "name": "turbottest15516"
    },
    "title": "turbottest15516"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_managed_prefix_list

TEARDOWN: tests/aws_ec2_managed_prefix_list

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_network_interface []

PRETEST: tests/aws_ec2_network_interface

TEST: tests/aws_ec2_network_interface
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_network_interface.named_test_resource will be created
  + resource "aws_network_interface" "named_test_resource" {
      + arn                       = (known after apply)
      + description               = "Test Network Interface."
      + id                        = (known after apply)
      + interface_type            = (known after apply)
      + ipv4_prefix_count         = (known after apply)
      + ipv4_prefixes             = (known after apply)
      + ipv6_address_count        = (known after apply)
      + ipv6_address_list         = (known after apply)
      + ipv6_address_list_enabled = false
      + ipv6_addresses            = (known after apply)
      + ipv6_prefix_count         = (known after apply)
      + ipv6_prefixes             = (known after apply)
      + mac_address               = (known after apply)
      + outpost_arn               = (known after apply)
      + owner_id                  = (known after apply)
      + private_dns_name          = (known after apply)
      + private_ip                = (known after apply)
      + private_ip_list           = (known after apply)
      + private_ip_list_enabled   = false
      + private_ips               = (known after apply)
      + private_ips_count         = (known after apply)
      + security_groups           = (known after apply)
      + source_dest_check         = true
      + subnet_id                 = (known after apply)
      + tags                      = {
          + "Name" = "turbottest33758"
        }
      + tags_all                  = {
          + "Name" = "turbottest33758"
        }

      + attachment {
          + attachment_id = (known after apply)
          + device_index  = (known after apply)
          + instance      = (known after apply)
        }
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "name" = "turbottest33758"
        }
      + tags_all                                       = {
          + "name" = "turbottest33758"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/24"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest33758"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 2s [id=vpc-0456d1e5f132a1ab1]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-0c5cf57d7574ed1d0]
aws_network_interface.named_test_resource: Creating...
aws_network_interface.named_test_resource: Creation complete after 2s [id=eni-074c31a931dcb9b5d]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=4bc79edde461630f3a0b62e960f8aec1ec444c4a5df816912345f14afc393ee3]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:network-interface/eni-074c31a931dcb9b5d"
resource_id = "eni-074c31a931dcb9b5d"
resource_name = "turbottest33758"
vpc_id = "vpc-0456d1e5f132a1ab1"

Running SQL query: test-get-query.sql
[
  {
    "description": "Test Network Interface.",
    "interface_type": "interface",
    "network_interface_id": "eni-074c31a931dcb9b5d",
    "owner_id": "632902152528",
    "requester_managed": false,
    "source_dest_check": true
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:network-interface/eni-074c31a931dcb9b5d"
    ],
    "network_interface_id": "eni-074c31a931dcb9b5d",
    "tags": {
      "Name": "turbottest33758"
    },
    "title": "eni-074c31a931dcb9b5d"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "interface_type": "interface",
    "network_interface_id": "eni-074c31a931dcb9b5d"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_network_interface

TEARDOWN: tests/aws_ec2_network_interface

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_network_load_balancer []

PRETEST: tests/aws_ec2_network_load_balancer

TEST: tests/aws_ec2_network_load_balancer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_lb.named_test_resource will be created
  + resource "aws_lb" "named_test_resource" {
      + arn                              = (known after apply)
      + arn_suffix                       = (known after apply)
      + dns_name                         = (known after apply)
      + enable_cross_zone_load_balancing = false
      + enable_deletion_protection       = false
      + id                               = (known after apply)
      + internal                         = false
      + ip_address_type                  = (known after apply)
      + load_balancer_type               = "network"
      + name                             = "turbottest47990"
      + security_groups                  = (known after apply)
      + subnets                          = (known after apply)
      + tags                             = {
          + "name" = "turbottest47990"
        }
      + tags_all                         = {
          + "name" = "turbottest47990"
        }
      + vpc_id                           = (known after apply)
      + zone_id                          = (known after apply)

      + subnet_mapping {
          + allocation_id        = (known after apply)
          + ipv6_address         = (known after apply)
          + outpost_id           = (known after apply)
          + private_ipv4_address = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest47990"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0efb463087eb33d50]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-0c030613394646cfa]
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0625560deb71acfad]
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-024a0eb3f0ee6cc50]
aws_lb.named_test_resource: Creating...
aws_lb.named_test_resource: Still creating... [10s elapsed]
aws_lb.named_test_resource: Still creating... [20s elapsed]
aws_lb.named_test_resource: Still creating... [30s elapsed]
aws_lb.named_test_resource: Still creating... [40s elapsed]
aws_lb.named_test_resource: Still creating... [50s elapsed]
aws_lb.named_test_resource: Still creating... [1m0s elapsed]
aws_lb.named_test_resource: Still creating... [1m10s elapsed]
aws_lb.named_test_resource: Still creating... [1m20s elapsed]
aws_lb.named_test_resource: Still creating... [1m30s elapsed]
aws_lb.named_test_resource: Still creating... [1m40s elapsed]
aws_lb.named_test_resource: Still creating... [1m50s elapsed]
aws_lb.named_test_resource: Still creating... [2m0s elapsed]
aws_lb.named_test_resource: Still creating... [2m10s elapsed]
aws_lb.named_test_resource: Still creating... [2m20s elapsed]
aws_lb.named_test_resource: Still creating... [2m30s elapsed]
aws_lb.named_test_resource: Still creating... [2m40s elapsed]
aws_lb.named_test_resource: Still creating... [2m50s elapsed]
aws_lb.named_test_resource: Creation complete after 2m56s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0"
resource_id = "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0"
resource_name = "turbottest47990"
vpc_id = "vpc-0efb463087eb33d50"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0",
    "ip_address_type": "ipv4",
    "name": "turbottest47990",
    "scheme": "internet-facing",
    "state_code": "active",
    "type": "network",
    "vpc_id": "vpc-0efb463087eb33d50"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0",
    "load_balancer_attributes": [
      {
        "Key": "access_logs.s3.enabled",
        "Value": "false"
      },
      {
        "Key": "access_logs.s3.prefix",
        "Value": ""
      },
      {
        "Key": "deletion_protection.enabled",
        "Value": "false"
      },
      {
        "Key": "access_logs.s3.bucket",
        "Value": ""
      },
      {
        "Key": "load_balancing.cross_zone.enabled",
        "Value": "false"
      }
    ],
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest47990"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0",
    "name": "turbottest47990"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest47990/e6565f5b9e5a3ec0"
    ],
    "tags": {
      "name": "turbottest47990"
    },
    "title": "turbottest47990"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_network_load_balancer

TEARDOWN: tests/aws_ec2_network_load_balancer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_regional_settings []

PRETEST: tests/aws_ec2_regional_settings

TEST: tests/aws_ec2_regional_settings
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ebs_default_kms_key.named_test_resource will be created
  + resource "aws_ebs_default_kms_key" "named_test_resource" {
      + id      = (known after apply)
      + key_arn = (known after apply)
    }

  # aws_ebs_encryption_by_default.named_test_resource will be created
  + resource "aws_ebs_encryption_by_default" "named_test_resource" {
      + enabled = true
      + id      = (known after apply)
    }

  # aws_kms_key.named_test_resource will be created
  + resource "aws_kms_key" "named_test_resource" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + deletion_window_in_days            = 7
      + description                        = "var.resource_name"
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = (known after apply)
      + policy                             = (known after apply)
      + tags                               = {
          + "name" = "turbottest51598"
        }
      + tags_all                           = {
          + "name" = "turbottest51598"
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_account   = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
aws_ebs_encryption_by_default.named_test_resource: Creating...
aws_kms_key.named_test_resource: Creating...
aws_ebs_encryption_by_default.named_test_resource: Creation complete after 0s [id=terraform-20220620084853735900000001]
aws_kms_key.named_test_resource: Creation complete after 6s [id=738e0246-0111-4ff2-8743-3785ed7526ba]
aws_ebs_default_kms_key.named_test_resource: Creating...
aws_ebs_default_kms_key.named_test_resource: Creation complete after 1s [id=arn:aws:kms:us-east-1:632902152528:key/738e0246-0111-4ff2-8743-3785ed7526ba]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:kms:us-east-1:632902152528:key/738e0246-0111-4ff2-8743-3785ed7526ba"

Running SQL query: test-get-query.sql
[
  {
    "default_ebs_encryption_enabled": true,
    "default_ebs_encryption_key": "arn:aws:kms:us-east-1:632902152528:key/738e0246-0111-4ff2-8743-3785ed7526ba",
    "region": "us-east-1",
    "title": "us-east-1 EC2 Settings"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_regional_settings

TEARDOWN: tests/aws_ec2_regional_settings

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_reserved_instance []

PRETEST: tests/aws_ec2_reserved_instance

TEST: tests/aws_ec2_reserved_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_ec2_reserved_instance/terraform/test/output.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + currency_code  = (known after apply)
  + fixed_price    = (known after apply)
  + instance_type  = (known after apply)
  + offering_class = (known after apply)
  + resource_aka   = (known after apply)
  + resource_name  = (known after apply)
  + scope          = (known after apply)
  + state          = (known after apply)
  + usage_price    = (known after apply)
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws ec2 describe-reserved-instances --output json > /tmp/tests/aws_ec2_reserved_instance/terraform/test/output.json"]
null_resource.named_test_resource: Creation complete after 2s [id=130387155188879351]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=9eb3651450f94b9e8f7b0d48c074b4323c9ec2bd]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variable.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

currency_code = "USD"
fixed_price = "0"
instance_type = "t3.nano"
offering_class = "standard"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:reserved-instances/0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b"
resource_name = "0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b"
scope = "Region"
state = "active"
usage_price = "0"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:reserved-instances/0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b",
    "currency_code": "USD",
    "fixed_price": "0",
    "instance_state": "active",
    "instance_type": "t3.nano",
    "offering_class": "standard",
    "reserved_instance_id": "0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b",
    "scope": "Region",
    "usage_price": "0"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:reserved-instances/0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b",
    "instance_type": "t3.nano",
    "reserved_instance_id": "0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:reserved-instances/0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b"
    ],
    "title": "0bdff5fd-4b22-470c-8e1d-3eaff8a4ec3b"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_reserved_instance

TEARDOWN: tests/aws_ec2_reserved_instance

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_ssl_policy []

PRETEST: tests/aws_ec2_ssl_policy

TEST: tests/aws_ec2_ssl_policy
Running terraform

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_name = "ELBSecurityPolicy-2016-08"

You can apply this plan to save these new output values to the Terraform
state, without changing any real infrastructure.

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 37, in data "null_data_source" "resource":
  37: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_name = "ELBSecurityPolicy-2016-08"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "ciphers": [
      {
        "Name": "ECDHE-ECDSA-AES128-GCM-SHA256",
        "Priority": 1
      },
      {
        "Name": "ECDHE-RSA-AES128-GCM-SHA256",
        "Priority": 2
      },
      {
        "Name": "ECDHE-ECDSA-AES128-SHA256",
        "Priority": 3
      },
      {
        "Name": "ECDHE-RSA-AES128-SHA256",
        "Priority": 4
      },
      {
        "Name": "ECDHE-ECDSA-AES128-SHA",
        "Priority": 5
      },
      {
        "Name": "ECDHE-RSA-AES128-SHA",
        "Priority": 6
      },
      {
        "Name": "ECDHE-ECDSA-AES256-GCM-SHA384",
        "Priority": 7
      },
      {
        "Name": "ECDHE-RSA-AES256-GCM-SHA384",
        "Priority": 8
      },
      {
        "Name": "ECDHE-ECDSA-AES256-SHA384",
        "Priority": 9
      },
      {
        "Name": "ECDHE-RSA-AES256-SHA384",
        "Priority": 10
      },
      {
        "Name": "ECDHE-RSA-AES256-SHA",
        "Priority": 11
      },
      {
        "Name": "ECDHE-ECDSA-AES256-SHA",
        "Priority": 12
      },
      {
        "Name": "AES128-GCM-SHA256",
        "Priority": 13
      },
      {
        "Name": "AES128-SHA256",
        "Priority": 14
      },
      {
        "Name": "AES128-SHA",
        "Priority": 15
      },
      {
        "Name": "AES256-GCM-SHA384",
        "Priority": 16
      },
      {
        "Name": "AES256-SHA256",
        "Priority": 17
      },
      {
        "Name": "AES256-SHA",
        "Priority": 18
      }
    ],
    "name": "ELBSecurityPolicy-2016-08",
    "partition": "aws",
    "ssl_protocols": [
      "TLSv1",
      "TLSv1.1",
      "TLSv1.2"
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "ELBSecurityPolicy-2016-08",
    "title": "ELBSecurityPolicy-2016-08"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_ssl_policy

TEARDOWN: tests/aws_ec2_ssl_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_target_group []

PRETEST: tests/aws_ec2_target_group

TEST: tests/aws_ec2_target_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_lb_target_group.named_test_resource will be created
  + resource "aws_lb_target_group" "named_test_resource" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = false
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancing_algorithm_type      = (known after apply)
      + name                               = "turbottest3172"
      + port                               = 80
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "HTTP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags                               = {
          + "Name" = "turbottest3172"
        }
      + tags_all                           = {
          + "Name" = "turbottest3172"
        }
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check {
          + enabled             = (known after apply)
          + healthy_threshold   = (known after apply)
          + interval            = (known after apply)
          + matcher             = (known after apply)
          + path                = (known after apply)
          + port                = (known after apply)
          + protocol            = (known after apply)
          + timeout             = (known after apply)
          + unhealthy_threshold = (known after apply)
        }

      + stickiness {
          + cookie_duration = (known after apply)
          + cookie_name     = (known after apply)
          + enabled         = (known after apply)
          + type            = (known after apply)
        }
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest3172"
        }
      + tags_all                             = {
          + "Name" = "turbottest3172"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest3172"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-034e78ef708e877d5]
aws_lb_target_group.named_test_resource: Creating...
aws_lb_target_group.named_test_resource: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742"
resource_id = "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742"
resource_name = "turbottest3172"
vpc_id = "vpc-034e78ef708e877d5"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = 2 list calls returned errors:
 ValidationError: 'arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742' is not a valid target group ARN
	status code: 400, request id: f111e4af-d936-4bf3-bf57-8e4fbccb9800
ValidationError: 'arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742' is not a valid target group ARN
	status code: 400, request id: 97160074-3ada-4f2d-83e6-c81f927ccbad (SQLSTATE HV000)
{}
[
  {
    "health_check_enabled": true,
    "health_check_interval_seconds": 30,
    "health_check_path": "/",
    "health_check_port": "traffic-port",
    "health_check_protocol": "HTTP",
    "health_check_timeout_seconds": 5,
    "healthy_threshold_count": 5,
    "matcher_http_code": "200",
    "port": 80,
    "protocol": "HTTP",
    "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742",
    "target_group_name": "turbottest3172",
    "target_type": "instance",
    "unhealthy_threshold_count": 2,
    "vpc_id": "vpc-034e78ef708e877d5"
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = 2 list calls returned errors:
 ValidationError: 'arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742' is not a valid target group ARN
	status code: 400, request id: 2e7ec9f0-8ab2-4216-93b3-3806771f07d4
ValidationError: 'arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742' is not a valid target group ARN
	status code: 400, request id: 7e55c4e8-5204-4f23-a4e9-8d65b303a243 (SQLSTATE HV000)
{}
[
  {
    "akas": [
      "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742"
    ],
    "tags": {
      "Name": "turbottest3172"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest3172"
      }
    ],
    "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742",
    "target_health_descriptions": null,
    "title": "turbottest3172"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:632902152528:targetgroup/turbottest3172/03d53d256ebc9742",
    "target_group_name": "turbottest3172"
  }
]
✔ PASSED

TEARDOWN: tests/aws_ec2_target_group

SUMMARY:

✘ tests/aws_ec2_target_group failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_transit_gateway []

PRETEST: tests/aws_ec2_transit_gateway

TEST: tests/aws_ec2_transit_gateway
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ec2_transit_gateway.named_test_resource will be created
  + resource "aws_ec2_transit_gateway" "named_test_resource" {
      + amazon_side_asn                    = 64512
      + arn                                = (known after apply)
      + association_default_route_table_id = (known after apply)
      + auto_accept_shared_attachments     = "disable"
      + default_route_table_association    = "enable"
      + default_route_table_propagation    = "enable"
      + description                        = "Test transit gateway"
      + dns_support                        = "enable"
      + id                                 = (known after apply)
      + multicast_support                  = "disable"
      + owner_id                           = (known after apply)
      + propagation_default_route_table_id = (known after apply)
      + tags                               = {
          + "Name" = "turbottest48990"
        }
      + tags_all                           = {
          + "Name" = "turbottest48990"
        }
      + vpn_ecmp_support                   = "enable"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id         = "632902152528"
  + resource_aka       = (known after apply)
  + resource_name      = "turbottest48990"
  + transit_gateway_id = (known after apply)
aws_ec2_transit_gateway.named_test_resource: Creating...
aws_ec2_transit_gateway.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [30s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [40s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [50s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [1m0s elapsed]
aws_ec2_transit_gateway.named_test_resource: Creation complete after 1m6s [id=tgw-02661f1ff77dadf74]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:transit-gateway/tgw-02661f1ff77dadf74"
resource_name = "turbottest48990"
transit_gateway_id = "tgw-02661f1ff77dadf74"

Running SQL query: test-get-query.sql
[
  {
    "amazon_side_asn": 64512,
    "auto_accept_shared_attachments": "disable",
    "default_route_table_association": "enable",
    "default_route_table_propagation": "enable",
    "description": "Test transit gateway",
    "dns_support": "enable",
    "owner_id": "632902152528",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest48990"
      }
    ],
    "transit_gateway_arn": "arn:aws:ec2:us-east-1:632902152528:transit-gateway/tgw-02661f1ff77dadf74",
    "transit_gateway_id": "tgw-02661f1ff77dadf74",
    "vpn_ecmp_support": "enable"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:transit-gateway/tgw-02661f1ff77dadf74"
    ],
    "tags": {
      "Name": "turbottest48990"
    },
    "title": "turbottest48990",
    "transit_gateway_id": "tgw-02661f1ff77dadf74"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "transit_gateway_arn": "arn:aws:ec2:us-east-1:632902152528:transit-gateway/tgw-02661f1ff77dadf74",
    "transit_gateway_id": "tgw-02661f1ff77dadf74"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_transit_gateway

TEARDOWN: tests/aws_ec2_transit_gateway

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_transit_gateway_route []

PRETEST: tests/aws_ec2_transit_gateway_route

TEST: tests/aws_ec2_transit_gateway_route
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ec2_transit_gateway.named_test_resource will be created
  + resource "aws_ec2_transit_gateway" "named_test_resource" {
      + amazon_side_asn                    = 64512
      + arn                                = (known after apply)
      + association_default_route_table_id = (known after apply)
      + auto_accept_shared_attachments     = "disable"
      + default_route_table_association    = "enable"
      + default_route_table_propagation    = "enable"
      + description                        = "Test transit gateway"
      + dns_support                        = "enable"
      + id                                 = (known after apply)
      + multicast_support                  = "disable"
      + owner_id                           = (known after apply)
      + propagation_default_route_table_id = (known after apply)
      + tags_all                           = (known after apply)
      + vpn_ecmp_support                   = "enable"
    }

  # aws_ec2_transit_gateway_route.named_test_resource will be created
  + resource "aws_ec2_transit_gateway_route" "named_test_resource" {
      + blackhole                      = true
      + destination_cidr_block         = "0.0.0.0/0"
      + id                             = (known after apply)
      + transit_gateway_route_table_id = (known after apply)
    }

  # aws_ec2_transit_gateway_route_table.named_test_resource will be created
  + resource "aws_ec2_transit_gateway_route_table" "named_test_resource" {
      + arn                             = (known after apply)
      + default_association_route_table = (known after apply)
      + default_propagation_route_table = (known after apply)
      + id                              = (known after apply)
      + tags                            = {
          + "Name" = "turbottest86023"
        }
      + tags_all                        = {
          + "Name" = "turbottest86023"
        }
      + transit_gateway_id              = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + destination_cidr_block = (known after apply)
  + region_name            = "us-east-1"
  + resource_aka           = (known after apply)
  + resource_name          = "turbottest86023"
  + transit_gateway_rtb_id = (known after apply)
aws_ec2_transit_gateway.named_test_resource: Creating...
aws_ec2_transit_gateway.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [30s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [40s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [50s elapsed]
aws_ec2_transit_gateway.named_test_resource: Creation complete after 55s [id=tgw-009bfca43f8eb28d1]
aws_ec2_transit_gateway_route.named_test_resource: Creating...
aws_ec2_transit_gateway_route_table.named_test_resource: Creating...
aws_ec2_transit_gateway_route.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway_route_table.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway_route.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway_route_table.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway_route_table.named_test_resource: Creation complete after 25s [id=tgw-rtb-09d6eda923b7a0ae3]
aws_ec2_transit_gateway_route.named_test_resource: Still creating... [30s elapsed]
aws_ec2_transit_gateway_route.named_test_resource: Still creating... [40s elapsed]
aws_ec2_transit_gateway_route.named_test_resource: Creation complete after 47s [id=tgw-rtb-08fdcd5f7fc4d22a5_0.0.0.0/0]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
destination_cidr_block = "0.0.0.0/0"
region_name = "us-east-1"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:transit-gateway-route-table/tgw-rtb-08fdcd5f7fc4d22a5:0.0.0.0/0"
resource_name = "turbottest86023"
transit_gateway_rtb_id = "tgw-rtb-08fdcd5f7fc4d22a5"

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:transit-gateway-route-table/tgw-rtb-08fdcd5f7fc4d22a5:0.0.0.0/0"
    ],
    "title": "0.0.0.0/0",
    "transit_gateway_route_table_id": "tgw-rtb-08fdcd5f7fc4d22a5"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "destination_cidr_block": "0.0.0.0/0",
    "state": "blackhole",
    "transit_gateway_route_table_id": "tgw-rtb-08fdcd5f7fc4d22a5",
    "type": "static"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_transit_gateway_route

TEARDOWN: tests/aws_ec2_transit_gateway_route

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_transit_gateway_route_table []

PRETEST: tests/aws_ec2_transit_gateway_route_table

TEST: tests/aws_ec2_transit_gateway_route_table
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ec2_transit_gateway.named_test_resource will be created
  + resource "aws_ec2_transit_gateway" "named_test_resource" {
      + amazon_side_asn                    = 64512
      + arn                                = (known after apply)
      + association_default_route_table_id = (known after apply)
      + auto_accept_shared_attachments     = "disable"
      + default_route_table_association    = "enable"
      + default_route_table_propagation    = "enable"
      + description                        = "Test transit gateway"
      + dns_support                        = "enable"
      + id                                 = (known after apply)
      + multicast_support                  = "disable"
      + owner_id                           = (known after apply)
      + propagation_default_route_table_id = (known after apply)
      + tags_all                           = (known after apply)
      + vpn_ecmp_support                   = "enable"
    }

  # aws_ec2_transit_gateway_route_table.named_test_resource will be created
  + resource "aws_ec2_transit_gateway_route_table" "named_test_resource" {
      + arn                             = (known after apply)
      + default_association_route_table = (known after apply)
      + default_propagation_route_table = (known after apply)
      + id                              = (known after apply)
      + tags                            = {
          + "Name" = "turbottest97352"
        }
      + tags_all                        = {
          + "Name" = "turbottest97352"
        }
      + transit_gateway_id              = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka       = (known after apply)
  + resource_id        = (known after apply)
  + resource_name      = "turbottest97352"
  + transit_gateway_id = (known after apply)
aws_ec2_transit_gateway.named_test_resource: Creating...
aws_ec2_transit_gateway.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [30s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [40s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [50s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [1m0s elapsed]
aws_ec2_transit_gateway.named_test_resource: Creation complete after 1m7s [id=tgw-0f509a5f02b6d2e52]
aws_ec2_transit_gateway_route_table.named_test_resource: Creating...
aws_ec2_transit_gateway_route_table.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway_route_table.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway_route_table.named_test_resource: Creation complete after 25s [id=tgw-rtb-08072ecdd67657526]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:ec2:us-east-1:632902152528:transit-gateway-route-table/tgw-rtb-08072ecdd67657526"
resource_id = "tgw-rtb-08072ecdd67657526"
resource_name = "turbottest97352"
transit_gateway_id = "tgw-0f509a5f02b6d2e52"

Running SQL query: query.sql
[
  {
    "transit_gateway_id": "tgw-0f509a5f02b6d2e52",
    "transit_gateway_route_table_id": "tgw-rtb-08072ecdd67657526"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "default_association_route_table": false,
    "default_propagation_route_table": false,
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest97352"
      }
    ],
    "transit_gateway_id": "tgw-0f509a5f02b6d2e52",
    "transit_gateway_route_table_id": "tgw-rtb-08072ecdd67657526"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:transit-gateway-route-table/tgw-rtb-08072ecdd67657526"
    ],
    "tags": {
      "Name": "turbottest97352"
    },
    "title": "turbottest97352",
    "transit_gateway_route_table_id": "tgw-rtb-08072ecdd67657526"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "transit_gateway_id": "tgw-0f509a5f02b6d2e52",
    "transit_gateway_route_table_id": "tgw-rtb-08072ecdd67657526"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_transit_gateway_route_table

TEARDOWN: tests/aws_ec2_transit_gateway_route_table

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ec2_transit_gateway_vpc_attachment []

PRETEST: tests/aws_ec2_transit_gateway_vpc_attachment

TEST: tests/aws_ec2_transit_gateway_vpc_attachment
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_ec2_transit_gateway.named_test_resource will be created
  + resource "aws_ec2_transit_gateway" "named_test_resource" {
      + amazon_side_asn                    = 64512
      + arn                                = (known after apply)
      + association_default_route_table_id = (known after apply)
      + auto_accept_shared_attachments     = "disable"
      + default_route_table_association    = "enable"
      + default_route_table_propagation    = "enable"
      + description                        = "Test transit gateway"
      + dns_support                        = "enable"
      + id                                 = (known after apply)
      + multicast_support                  = "disable"
      + owner_id                           = (known after apply)
      + propagation_default_route_table_id = (known after apply)
      + tags                               = {
          + "Name" = "turbottest78561"
        }
      + tags_all                           = {
          + "Name" = "turbottest78561"
        }
      + vpn_ecmp_support                   = "enable"
    }

  # aws_ec2_transit_gateway_vpc_attachment.named_test_resource will be created
  + resource "aws_ec2_transit_gateway_vpc_attachment" "named_test_resource" {
      + appliance_mode_support                          = "disable"
      + dns_support                                     = "enable"
      + id                                              = (known after apply)
      + ipv6_support                                    = "disable"
      + subnet_ids                                      = (known after apply)
      + tags                                            = {
          + "Name" = "turbottest78561"
        }
      + tags_all                                        = {
          + "Name" = "turbottest78561"
        }
      + transit_gateway_default_route_table_association = true
      + transit_gateway_default_route_table_propagation = true
      + transit_gateway_id                              = (known after apply)
      + vpc_id                                          = (known after apply)
      + vpc_owner_id                                    = (known after apply)
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "name" = "turbottest78561"
        }
      + tags_all                                       = {
          + "name" = "turbottest78561"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest78561"
        }
      + tags_all                             = {
          + "name" = "turbottest78561"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id         = "632902152528"
  + resource_aka       = (known after apply)
  + resource_id        = (known after apply)
  + resource_name      = "turbottest78561"
  + transit_gateway_id = (known after apply)
  + vpc_id             = (known after apply)
aws_ec2_transit_gateway.named_test_resource: Creating...
aws_vpc.named_test_resource: Creating...
aws_vpc.named_test_resource: Creation complete after 4s [id=vpc-02cbf2ed8868a5fc6]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-0b306efa4d5c2b7d6]
aws_ec2_transit_gateway.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [30s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [40s elapsed]
aws_ec2_transit_gateway.named_test_resource: Still creating... [50s elapsed]
aws_ec2_transit_gateway.named_test_resource: Creation complete after 57s [id=tgw-07198ea8fd5caee3c]
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Creating...
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Still creating... [10s elapsed]
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Still creating... [20s elapsed]
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Still creating... [30s elapsed]
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Still creating... [40s elapsed]
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Still creating... [50s elapsed]
aws_ec2_transit_gateway_vpc_attachment.named_test_resource: Creation complete after 57s [id=tgw-attach-0231c444b2517137c]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=c41fdba85a36df6af138a9ff70c1b989c9c77d6def74d039dcce4490b61b649c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:transit-gateway-attachment/tgw-attach-0231c444b2517137c"
resource_id = "tgw-attach-0231c444b2517137c"
resource_name = "turbottest78561"
transit_gateway_id = "tgw-07198ea8fd5caee3c"
vpc_id = "vpc-02cbf2ed8868a5fc6"

Running SQL query: test-get-query.sql
[
  {
    "association_state": "associated",
    "resource_id": "vpc-02cbf2ed8868a5fc6",
    "resource_owner_id": "632902152528",
    "resource_type": "vpc",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest78561"
      }
    ],
    "transit_gateway_attachment_id": "tgw-attach-0231c444b2517137c",
    "transit_gateway_id": "tgw-07198ea8fd5caee3c",
    "transit_gateway_owner_id": "632902152528"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:transit-gateway-attachment/tgw-attach-0231c444b2517137c"
    ],
    "tags": {
      "Name": "turbottest78561"
    },
    "title": "turbottest78561",
    "transit_gateway_attachment_id": "tgw-attach-0231c444b2517137c"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "transit_gateway_attachment_id": "tgw-attach-0231c444b2517137c",
    "transit_gateway_id": "tgw-07198ea8fd5caee3c"
  }
]
✔ PASSED

POSTTEST: tests/aws_ec2_transit_gateway_vpc_attachment

TEARDOWN: tests/aws_ec2_transit_gateway_vpc_attachment

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ecrpublic_repository []

PRETEST: tests/aws_ecrpublic_repository

TEST: tests/aws_ecrpublic_repository
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecrpublic_repository.named_test_resource will be created
  + resource "aws_ecrpublic_repository" "named_test_resource" {
      + arn             = (known after apply)
      + force_destroy   = false
      + id              = (known after apply)
      + registry_id     = (known after apply)
      + repository_name = "turbottest15877"
      + repository_uri  = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + registry_id   = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest15877"
aws_ecrpublic_repository.named_test_resource: Creating...
aws_ecrpublic_repository.named_test_resource: Creation complete after 1s [id=turbottest15877]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
registry_id = "632902152528"
resource_aka = "arn:aws:ecr-public::632902152528:repository/turbottest15877"
resource_id = "turbottest15877"
resource_name = "turbottest15877"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ecr-public::632902152528:repository/turbottest15877"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "repository_name": "turbottest15877"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ecr-public::632902152528:repository/turbottest15877"
    ],
    "repository_name": "turbottest15877",
    "title": "turbottest15877"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:ecr-public::632902152528:repository/turbottest15877",
    "partition": "aws",
    "region": "us-east-1",
    "repository_name": "turbottest15877"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ecr-public::632902152528:repository/turbottest15877"
    ],
    "region": "us-east-1",
    "title": "turbottest15877"
  }
]
✔ PASSED

POSTTEST: tests/aws_ecrpublic_repository

TEARDOWN: tests/aws_ecrpublic_repository

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ecr_repository []

PRETEST: tests/aws_ecr_repository

TEST: tests/aws_ecr_repository
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecr_repository.named_test_resource will be created
  + resource "aws_ecr_repository" "named_test_resource" {
      + arn                  = (known after apply)
      + id                   = (known after apply)
      + image_tag_mutability = "MUTABLE"
      + name                 = "turbottest95744"
      + registry_id          = (known after apply)
      + repository_url       = (known after apply)
      + tags                 = {
          + "name" = "turbottest95744"
        }
      + tags_all             = {
          + "name" = "turbottest95744"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + registry_id   = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest95744"
aws_ecr_repository.named_test_resource: Creating...
aws_ecr_repository.named_test_resource: Creation complete after 2s [id=turbottest95744]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
registry_id = "632902152528"
resource_aka = "arn:aws:ecr:us-east-1:632902152528:repository/turbottest95744"
resource_id = "turbottest95744"
resource_name = "turbottest95744"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ecr:us-east-1:632902152528:repository/turbottest95744"
    ],
    "image_tag_mutability": "MUTABLE",
    "partition": "aws",
    "region": "us-east-1",
    "repository_name": "turbottest95744"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ecr:us-east-1:632902152528:repository/turbottest95744"
    ],
    "repository_name": "turbottest95744",
    "tags": {
      "name": "turbottest95744"
    },
    "title": "turbottest95744"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:ecr:us-east-1:632902152528:repository/turbottest95744",
    "image_scanning_configuration": {
      "ScanOnPush": false
    },
    "image_tag_mutability": "MUTABLE",
    "partition": "aws",
    "region": "us-east-1",
    "repository_name": "turbottest95744"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ecr:us-east-1:632902152528:repository/turbottest95744"
    ],
    "region": "us-east-1",
    "title": "turbottest95744"
  }
]
✔ PASSED

POSTTEST: tests/aws_ecr_repository

TEARDOWN: tests/aws_ecr_repository

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ecs_cluster []

PRETEST: tests/aws_ecs_cluster

TEST: tests/aws_ecs_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecs_cluster.named_test_resource will be created
  + resource "aws_ecs_cluster" "named_test_resource" {
      + arn                = (known after apply)
      + capacity_providers = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest29620"
      + tags               = {
          + "name" = "turbottest29620"
        }
      + tags_all           = {
          + "name" = "turbottest29620"
        }

      + default_capacity_provider_strategy {
          + base              = (known after apply)
          + capacity_provider = (known after apply)
          + weight            = (known after apply)
        }

      + setting {
          + name  = (known after apply)
          + value = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest29620"
aws_ecs_cluster.named_test_resource: Creating...
aws_ecs_cluster.named_test_resource: Still creating... [10s elapsed]
aws_ecs_cluster.named_test_resource: Creation complete after 12s [id=arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620"
resource_id = "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620"
resource_name = "turbottest29620"

Running SQL query: test-get-query.sql
[
  {
    "active_services_count": 0,
    "cluster_arn": "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620",
    "cluster_name": "turbottest29620",
    "status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620"
    ],
    "cluster_arn": "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620",
    "cluster_name": "turbottest29620",
    "tags": {
      "name": "turbottest29620"
    },
    "title": "turbottest29620"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "active_services_count": 0,
    "attachments": null,
    "attachments_status": null,
    "capacity_providers": [],
    "cluster_arn": "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620",
    "cluster_name": "turbottest29620",
    "default_capacity_provider_strategy": [],
    "pending_tasks_count": 0,
    "registered_container_instances_count": 0,
    "running_tasks_count": 0,
    "settings": [],
    "statistics": [],
    "status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620"
    ],
    "cluster_arn": "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest29620",
    "cluster_name": "turbottest29620",
    "region": "us-east-1",
    "title": "turbottest29620"
  }
]
✔ PASSED

POSTTEST: tests/aws_ecs_cluster

TEARDOWN: tests/aws_ecs_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ecs_service []

PRETEST: tests/aws_ecs_service

TEST: tests/aws_ecs_service
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecs_cluster.named_test_resource will be created
  + resource "aws_ecs_cluster" "named_test_resource" {
      + arn                = (known after apply)
      + capacity_providers = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest20088"
      + tags_all           = (known after apply)

      + default_capacity_provider_strategy {
          + base              = (known after apply)
          + capacity_provider = (known after apply)
          + weight            = (known after apply)
        }

      + setting {
          + name  = (known after apply)
          + value = (known after apply)
        }
    }

  # aws_ecs_service.named_test_resource will be created
  + resource "aws_ecs_service" "named_test_resource" {
      + cluster                            = (known after apply)
      + deployment_maximum_percent         = 200
      + deployment_minimum_healthy_percent = 100
      + desired_count                      = 3
      + enable_ecs_managed_tags            = false
      + enable_execute_command             = false
      + iam_role                           = (known after apply)
      + id                                 = (known after apply)
      + launch_type                        = (known after apply)
      + name                               = "turbottest20088"
      + platform_version                   = (known after apply)
      + scheduling_strategy                = "REPLICA"
      + tags                               = {
          + "name" = "turbottest20088"
        }
      + tags_all                           = {
          + "name" = "turbottest20088"
        }
      + task_definition                    = (known after apply)
      + wait_for_steady_state              = false

      + ordered_placement_strategy {
          + field = "cpu"
          + type  = "binpack"
        }

      + placement_constraints {
          + expression = "attribute:ecs.availability-zone in [us-west-2a, us-west-2b]"
          + type       = "memberOf"
        }
    }

  # aws_ecs_task_definition.named_test_resource will be created
  + resource "aws_ecs_task_definition" "named_test_resource" {
      + arn                   = (known after apply)
      + container_definitions = jsonencode(
            [
              + {
                  + cpu       = 10
                  + essential = true
                  + image     = "jenkins"
                  + memory    = 128
                  + name      = "jenkins"
                },
            ]
        )
      + family                = "turbottest20088"
      + id                    = (known after apply)
      + network_mode          = (known after apply)
      + revision              = (known after apply)
      + skip_destroy          = false
      + tags_all              = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cluster_arn         = (known after apply)
  + resource_aka        = (known after apply)
  + resource_name       = "turbottest20088"
  + task_definition_arn = (known after apply)
aws_ecs_cluster.named_test_resource: Creating...
aws_ecs_task_definition.named_test_resource: Creating...
aws_ecs_task_definition.named_test_resource: Creation complete after 1s [id=turbottest20088]
aws_ecs_cluster.named_test_resource: Still creating... [10s elapsed]
aws_ecs_cluster.named_test_resource: Creation complete after 12s [id=arn:aws:ecs:us-east-1:632902152528:cluster/turbottest20088]
aws_ecs_service.named_test_resource: Creating...
aws_ecs_service.named_test_resource: Creation complete after 1s [id=arn:aws:ecs:us-east-1:632902152528:service/turbottest20088/turbottest20088]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

cluster_arn = "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest20088"
resource_aka = "arn:aws:ecs:us-east-1:632902152528:service/turbottest20088/turbottest20088"
resource_name = "turbottest20088"
task_definition_arn = "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest20088:1"

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:ecs:us-east-1:632902152528:service/turbottest20088/turbottest20088",
    "cluster_arn": "arn:aws:ecs:us-east-1:632902152528:cluster/turbottest20088",
    "desired_count": 3,
    "enable_ecs_managed_tags": false,
    "enable_execute_command": false,
    "placement_constraints": [
      {
        "Expression": "attribute:ecs.availability-zone in [us-west-2a, us-west-2b]",
        "Type": "memberOf"
      }
    ],
    "placement_strategy": [
      {
        "Field": "CPU",
        "Type": "binpack"
      }
    ],
    "service_name": "turbottest20088",
    "task_definition": "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest20088:1"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ecs:us-east-1:632902152528:service/turbottest20088/turbottest20088"
    ],
    "title": "turbottest20088"
  }
]
✔ PASSED

POSTTEST: tests/aws_ecs_service

TEARDOWN: tests/aws_ecs_service

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ecs_task_definition []

PRETEST: tests/aws_ecs_task_definition

TEST: tests/aws_ecs_task_definition
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecs_task_definition.named_test_resource will be created
  + resource "aws_ecs_task_definition" "named_test_resource" {
      + arn                   = (known after apply)
      + container_definitions = jsonencode(
            [
              + {
                  + cpu       = 10
                  + essential = true
                  + image     = "jenkins"
                  + memory    = 128
                  + name      = "jenkins"
                },
            ]
        )
      + family                = "turbottest66320"
      + id                    = (known after apply)
      + network_mode          = (known after apply)
      + revision              = (known after apply)
      + skip_destroy          = false
      + tags                  = {
          + "name" = "turbottest66320"
        }
      + tags_all              = {
          + "name" = "turbottest66320"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest66320"
aws_ecs_task_definition.named_test_resource: Creating...
aws_ecs_task_definition.named_test_resource: Creation complete after 2s [id=turbottest66320]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest66320:1"
resource_id = "turbottest66320"
resource_name = "turbottest66320"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "cpu": null,
    "family": "turbottest66320",
    "memory": null,
    "partition": "aws",
    "region": "us-east-1",
    "status": "ACTIVE",
    "task_definition_arn": "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest66320:1"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "cpu": null,
    "family": "turbottest66320",
    "memory": null,
    "status": "ACTIVE",
    "task_definition_arn": "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest66320:1"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest66320:1"
    ],
    "tags": {
      "name": "turbottest66320"
    },
    "task_definition_arn": "arn:aws:ecs:us-east-1:632902152528:task-definition/turbottest66320:1",
    "title": "turbottest66320:1"
  }
]
✔ PASSED

POSTTEST: tests/aws_ecs_task_definition

TEARDOWN: tests/aws_ecs_task_definition

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_efs_access_point []

PRETEST: tests/aws_efs_access_point

TEST: tests/aws_efs_access_point
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_efs_access_point.named_test_resource will be created
  + resource "aws_efs_access_point" "named_test_resource" {
      + arn             = (known after apply)
      + file_system_arn = (known after apply)
      + file_system_id  = (known after apply)
      + id              = (known after apply)
      + owner_id        = (known after apply)
      + tags            = {
          + "Name" = "turbottest11983"
          + "foo"  = "bar"
        }
      + tags_all        = {
          + "Name" = "turbottest11983"
          + "foo"  = "bar"
        }

      + root_directory {
          + path = (known after apply)

          + creation_info {
              + owner_gid   = (known after apply)
              + owner_uid   = (known after apply)
              + permissions = (known after apply)
            }
        }
    }

  # aws_efs_file_system.file_system will be created
  + resource "aws_efs_file_system" "file_system" {
      + arn                     = (known after apply)
      + availability_zone_id    = (known after apply)
      + availability_zone_name  = (known after apply)
      + creation_token          = "turbottest11983"
      + dns_name                = (known after apply)
      + encrypted               = (known after apply)
      + id                      = (known after apply)
      + kms_key_id              = (known after apply)
      + number_of_mount_targets = (known after apply)
      + owner_id                = (known after apply)
      + performance_mode        = (known after apply)
      + size_in_bytes           = (known after apply)
      + tags                    = {
          + "foo" = "bar"
        }
      + tags_all                = {
          + "foo" = "bar"
        }
      + throughput_mode         = "bursting"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id     = "632902152528"
  + file_system_id = (known after apply)
  + partition      = "aws"
  + resource_aka   = (known after apply)
  + resource_id    = (known after apply)
  + resource_name  = "turbottest11983"
aws_efs_file_system.file_system: Creating...
aws_efs_file_system.file_system: Creation complete after 7s [id=fs-03fdabc9530dcf4ad]
aws_efs_access_point.named_test_resource: Creating...
aws_efs_access_point.named_test_resource: Creation complete after 2s [id=fsap-034643357d804e9d2]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
file_system_id = "fs-03fdabc9530dcf4ad"
partition = "aws"
resource_aka = "arn:aws:elasticfilesystem:us-east-1:632902152528:access-point/fsap-034643357d804e9d2"
resource_id = "fsap-034643357d804e9d2"
resource_name = "turbottest11983"

Running SQL query: test-get-query.sql
[
  {
    "access_point_arn": "arn:aws:elasticfilesystem:us-east-1:632902152528:access-point/fsap-034643357d804e9d2",
    "access_point_id": "fsap-034643357d804e9d2",
    "file_system_id": "fs-03fdabc9530dcf4ad",
    "life_cycle_state": "available",
    "name": "turbottest11983",
    "owner_id": "632902152528",
    "posix_user": null,
    "root_directory": {
      "CreationInfo": null,
      "Path": "/"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest11983"
      },
      {
        "Key": "foo",
        "Value": "bar"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "access_point_arn": "arn:aws:elasticfilesystem:us-east-1:632902152528:access-point/fsap-034643357d804e9d2",
    "access_point_id": "fsap-034643357d804e9d2",
    "name": "turbottest11983"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:elasticfilesystem:us-east-1:632902152528:access-point/fsap-034643357d804e9d2"
    ],
    "tags": {
      "Name": "turbottest11983",
      "foo": "bar"
    },
    "title": "turbottest11983"
  }
]
✔ PASSED

POSTTEST: tests/aws_efs_access_point

TEARDOWN: tests/aws_efs_access_point

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_efs_file_system []

PRETEST: tests/aws_efs_file_system

TEST: tests/aws_efs_file_system
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_efs_file_system.named_test_resource will be created
  + resource "aws_efs_file_system" "named_test_resource" {
      + arn                     = (known after apply)
      + availability_zone_id    = (known after apply)
      + availability_zone_name  = (known after apply)
      + creation_token          = "turbottest55366"
      + dns_name                = (known after apply)
      + encrypted               = true
      + id                      = (known after apply)
      + kms_key_id              = (known after apply)
      + number_of_mount_targets = (known after apply)
      + owner_id                = (known after apply)
      + performance_mode        = "maxIO"
      + size_in_bytes           = (known after apply)
      + tags                    = {
          + "name" = "turbottest55366"
        }
      + tags_all                = {
          + "name" = "turbottest55366"
        }
      + throughput_mode         = "bursting"
    }

  # aws_efs_file_system_policy.efs_file_system_policy will be created
  + resource "aws_efs_file_system_policy" "efs_file_system_policy" {
      + bypass_policy_lockout_safety_check = false
      + file_system_id                     = (known after apply)
      + id                                 = (known after apply)
      + policy                             = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest55366"
aws_efs_file_system.named_test_resource: Creating...
aws_efs_file_system.named_test_resource: Creation complete after 4s [id=fs-0f428dd3b941daf4f]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=a901c6955950918e3a9652bfb2f4820f77b13440efaecc60bc78f102a4e1beaa]
aws_efs_file_system_policy.efs_file_system_policy: Creating...
aws_efs_file_system_policy.efs_file_system_policy: Creation complete after 0s [id=fs-0f428dd3b941daf4f]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:elasticfilesystem:us-east-1:632902152528:file-system/fs-0f428dd3b941daf4f"
resource_id = "fs-0f428dd3b941daf4f"
resource_name = "turbottest55366"

Running SQL query: test-get-query.sql
[
  {
    "encrypted": true,
    "file_system_id": "fs-0f428dd3b941daf4f",
    "performance_mode": "maxIO",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest55366"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticfilesystem:us-east-1:632902152528:file-system/fs-0f428dd3b941daf4f"
    ],
    "file_system_id": "fs-0f428dd3b941daf4f",
    "policy": {
      "Id": "test_policy",
      "Statement": [
        {
          "Action": [
            "elasticfilesystem:ClientMount",
            "elasticfilesystem:ClientWrite"
          ],
          "Condition": {
            "Bool": {
              "aws:SecureTransport": "true"
            }
          },
          "Effect": "Allow",
          "Principal": {
            "AWS": "*"
          },
          "Resource": "arn:aws:elasticfilesystem:us-east-1:632902152528:file-system/fs-0f428dd3b941daf4f",
          "Sid": "__default_policy_ID"
        }
      ],
      "Version": "2012-10-17"
    },
    "tags": {
      "name": "turbottest55366"
    },
    "title": "fs-0f428dd3b941daf4f"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:elasticfilesystem:us-east-1:632902152528:file-system/fs-0f428dd3b941daf4f"
    ],
    "automatic_backups": "disabled",
    "encrypted": true,
    "file_system_id": "fs-0f428dd3b941daf4f",
    "performance_mode": "maxIO",
    "tags": {
      "name": "turbottest55366"
    },
    "title": "fs-0f428dd3b941daf4f"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_efs_file_system

TEARDOWN: tests/aws_efs_file_system

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_efs_mount_target []

PRETEST: tests/aws_efs_mount_target

TEST: tests/aws_efs_mount_target
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_name"    = "turbottest59194"
        }
    }

  # aws_efs_file_system.my_fileSystem will be created
  + resource "aws_efs_file_system" "my_fileSystem" {
      + arn                     = (known after apply)
      + availability_zone_id    = (known after apply)
      + availability_zone_name  = (known after apply)
      + creation_token          = "var.resource_name"
      + dns_name                = (known after apply)
      + encrypted               = (known after apply)
      + id                      = (known after apply)
      + kms_key_id              = (known after apply)
      + number_of_mount_targets = (known after apply)
      + owner_id                = (known after apply)
      + performance_mode        = (known after apply)
      + size_in_bytes           = (known after apply)
      + tags_all                = (known after apply)
      + throughput_mode         = "bursting"
    }

  # aws_efs_mount_target.named_test_resource will be created
  + resource "aws_efs_mount_target" "named_test_resource" {
      + availability_zone_id   = (known after apply)
      + availability_zone_name = (known after apply)
      + dns_name               = (known after apply)
      + file_system_arn        = (known after apply)
      + file_system_id         = (known after apply)
      + id                     = (known after apply)
      + ip_address             = (known after apply)
      + mount_target_dns_name  = (known after apply)
      + network_interface_id   = (known after apply)
      + owner_id               = (known after apply)
      + security_groups        = (known after apply)
      + subnet_id              = (known after apply)
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id      = "632902152528"
  + aws_partition   = "aws"
  + aws_region      = "us-east-1"
  + file_system_id  = (known after apply)
  + mount_target_id = (known after apply)
  + resource_aka    = (known after apply)
aws_vpc.my_vpc: Creating...
aws_efs_file_system.my_fileSystem: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0a683b604d33c2ccf]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-09af4a6b9a5e07e3c]
aws_efs_file_system.my_fileSystem: Creation complete after 7s [id=fs-07843dcd56e65c2a9]
aws_efs_mount_target.named_test_resource: Creating...
aws_efs_mount_target.named_test_resource: Still creating... [10s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [20s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [30s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [40s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [50s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [1m0s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [1m10s elapsed]
aws_efs_mount_target.named_test_resource: Still creating... [1m20s elapsed]
aws_efs_mount_target.named_test_resource: Creation complete after 1m29s [id=fsmt-09d95e7c39c6f8c04]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=683d1c9a44adaaac0214106efb289426d790e81d1e90d56006dd401edf791ff5]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
file_system_id = "fs-07843dcd56e65c2a9"
mount_target_id = "fsmt-09d95e7c39c6f8c04"
resource_aka = "arn:aws:elasticfilesystem:us-east-1:632902152528:file-system/fs-07843dcd56e65c2a9/mount-target/fsmt-09d95e7c39c6f8c04"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "file_system_id": "fs-07843dcd56e65c2a9",
    "mount_target_id": "fsmt-09d95e7c39c6f8c04",
    "title": "fsmt-09d95e7c39c6f8c04"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "account_id": "632902152528",
    "file_system_id": "fs-07843dcd56e65c2a9",
    "mount_target_id": "fsmt-09d95e7c39c6f8c04"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "file_system_id": "fs-07843dcd56e65c2a9",
    "mount_target_id": "fsmt-09d95e7c39c6f8c04",
    "partition": "aws",
    "title": "fsmt-09d95e7c39c6f8c04"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:elasticfilesystem:us-east-1:632902152528:file-system/fs-07843dcd56e65c2a9/mount-target/fsmt-09d95e7c39c6f8c04"
    ],
    "title": "fsmt-09d95e7c39c6f8c04"
  }
]
✔ PASSED

POSTTEST: tests/aws_efs_mount_target

TEARDOWN: tests/aws_efs_mount_target

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_eks_addon []

PRETEST: tests/aws_eks_addon

TEST: tests/aws_eks_addon
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eks_addon.named_test_resource will be created
  + resource "aws_eks_addon" "named_test_resource" {
      + addon_name    = "vpc-cni"
      + addon_version = (known after apply)
      + arn           = (known after apply)
      + cluster_name  = "turbottest69822"
      + created_at    = (known after apply)
      + id            = (known after apply)
      + modified_at   = (known after apply)
      + tags_all      = (known after apply)
    }

  # aws_eks_cluster.named_test_resource will be created
  + resource "aws_eks_cluster" "named_test_resource" {
      + arn                   = (known after apply)
      + certificate_authority = (known after apply)
      + created_at            = (known after apply)
      + endpoint              = (known after apply)
      + id                    = (known after apply)
      + identity              = (known after apply)
      + name                  = "turbottest69822"
      + platform_version      = (known after apply)
      + role_arn              = (known after apply)
      + status                = (known after apply)
      + tags                  = {
          + "Name" = "turbottest69822"
        }
      + tags_all              = {
          + "Name" = "turbottest69822"
        }
      + version               = (known after apply)

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
        }

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = false
          + endpoint_public_access    = true
          + public_access_cidrs       = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "eks.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest69822"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.named_test_resource will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = "turbottest69822"
    }

  # aws_iam_role_policy_attachment.named_test_resource2 will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource2" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      + role       = "turbottest69822"
    }

  # aws_subnet.named_test_resource1 will be created
  + resource "aws_subnet" "named_test_resource1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.named_test_resource2 will be created
  + resource "aws_subnet" "named_test_resource2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1d"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "172.31.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest69822"
aws_iam_role.named_test_resource: Creating...
aws_vpc.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 1s [id=turbottest69822]
aws_iam_role_policy_attachment.named_test_resource2: Creating...
aws_iam_role_policy_attachment.named_test_resource: Creating...
aws_iam_role_policy_attachment.named_test_resource2: Creation complete after 1s [id=turbottest69822-20220620091802696200000001]
aws_iam_role_policy_attachment.named_test_resource: Creation complete after 1s [id=turbottest69822-20220620091802940000000002]
aws_vpc.named_test_resource: Creation complete after 3s [id=vpc-0b7f925c7438a1b24]
aws_subnet.named_test_resource1: Creating...
aws_subnet.named_test_resource2: Creating...
aws_subnet.named_test_resource2: Creation complete after 1s [id=subnet-0a24d35f6330c8431]
aws_subnet.named_test_resource1: Creation complete after 1s [id=subnet-034ac8e623f4798e5]
aws_eks_cluster.named_test_resource: Creating...
aws_eks_cluster.named_test_resource: Still creating... [10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [10m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [10m10s elapsed]
aws_eks_cluster.named_test_resource: Creation complete after 10m14s [id=turbottest69822]
aws_eks_addon.named_test_resource: Creating...
aws_eks_addon.named_test_resource: Still creating... [10s elapsed]
aws_eks_addon.named_test_resource: Still creating... [20s elapsed]
aws_eks_addon.named_test_resource: Still creating... [30s elapsed]
aws_eks_addon.named_test_resource: Still creating... [40s elapsed]
aws_eks_addon.named_test_resource: Creation complete after 47s [id=turbottest69822:vpc-cni]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:eks:us-east-1:632902152528:addon/turbottest69822/vpc-cni/aac0c038-81f0-ba54-0254-7987ee265c14"
resource_name = "turbottest69822"

Running SQL query: test-get-query.sql
[
  {
    "addon_name": "vpc-cni",
    "addon_version": "v1.10.1-eksbuild.1",
    "addon_version": "v1.7.5-eksbuild.2",
    "arn": "arn:aws:eks:us-east-1:632902152528:addon/turbottest69822/vpc-cni/aac0c038-81f0-ba54-0254-7987ee265c14",
    "status": "ACTIVE"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "addon_name": "vpc-cni",
    "arn": "arn:aws:eks:us-east-1:632902152528:addon/turbottest69822/vpc-cni/aac0c038-81f0-ba54-0254-7987ee265c14",
    "cluster_name": "turbottest69822",
    "service_account_role_arn": null
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:eks:us-east-1:632902152528:addon/turbottest69822/vpc-cni/aac0c038-81f0-ba54-0254-7987ee265c14"
    ],
    "tags": {},
    "title": "vpc-cni"
  }
]
✔ PASSED

TEARDOWN: tests/aws_eks_addon

SUMMARY:

✘ tests/aws_eks_addon failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_eks_addon_version []

PRETEST: tests/aws_eks_addon_version

TEST: tests/aws_eks_addon_version
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_eks_addon_version/terraform/test/output.json"
      + id             = (known after apply)
    }

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = "arn:${partition}:eks:${region}:${account_id}:addonversion/${addon_name}/${version_name}"
      + vars     = {
          + "account_id"       = "632902152528"
          + "addon_name"       = (known after apply)
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "version_name"     = (known after apply)
        }
    }

  # aws_eks_addon.named_test_resource will be created
  + resource "aws_eks_addon" "named_test_resource" {
      + addon_name    = "vpc-cni"
      + addon_version = (known after apply)
      + arn           = (known after apply)
      + cluster_name  = "turbottest74772"
      + created_at    = (known after apply)
      + id            = (known after apply)
      + modified_at   = (known after apply)
      + tags_all      = (known after apply)
    }

  # aws_eks_cluster.named_test_resource will be created
  + resource "aws_eks_cluster" "named_test_resource" {
      + arn                   = (known after apply)
      + certificate_authority = (known after apply)
      + created_at            = (known after apply)
      + endpoint              = (known after apply)
      + id                    = (known after apply)
      + identity              = (known after apply)
      + name                  = "turbottest74772"
      + platform_version      = (known after apply)
      + role_arn              = (known after apply)
      + status                = (known after apply)
      + tags                  = {
          + "Name" = "turbottest74772"
        }
      + tags_all              = {
          + "Name" = "turbottest74772"
        }
      + version               = (known after apply)

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
        }

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = false
          + endpoint_public_access    = true
          + public_access_cidrs       = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "eks.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest74772"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.named_test_resource will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = "turbottest74772"
    }

  # aws_iam_role_policy_attachment.named_test_resource2 will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource2" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      + role       = "turbottest74772"
    }

  # aws_subnet.named_test_resource1 will be created
  + resource "aws_subnet" "named_test_resource1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.named_test_resource2 will be created
  + resource "aws_subnet" "named_test_resource2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1d"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "172.31.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 9 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + addon_version = (known after apply)
  + region_id     = "us-east-1"
  + resource_aka  = (known after apply)
aws_iam_role.named_test_resource: Creating...
aws_vpc.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest74772]
aws_iam_role_policy_attachment.named_test_resource: Creating...
aws_iam_role_policy_attachment.named_test_resource2: Creating...
aws_iam_role_policy_attachment.named_test_resource2: Creation complete after 1s [id=turbottest74772-20220620093142246000000002]
aws_iam_role_policy_attachment.named_test_resource: Creation complete after 1s [id=turbottest74772-20220620093142017800000001]
aws_vpc.named_test_resource: Creation complete after 3s [id=vpc-02d229fadf5bc74f8]
aws_subnet.named_test_resource2: Creating...
aws_subnet.named_test_resource1: Creating...
aws_subnet.named_test_resource2: Creation complete after 1s [id=subnet-01b108b7ba98c9140]
aws_subnet.named_test_resource1: Creation complete after 1s [id=subnet-0fe0569370ffa7c74]
aws_eks_cluster.named_test_resource: Creating...
aws_eks_cluster.named_test_resource: Still creating... [10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [10m0s elapsed]
aws_eks_cluster.named_test_resource: Creation complete after 10m4s [id=turbottest74772]
aws_eks_addon.named_test_resource: Creating...
aws_eks_addon.named_test_resource: Creation complete after 3s [id=turbottest74772:vpc-cni]
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws eks describe-addon-versions --addon-name vpc-cni > /tmp/tests/aws_eks_addon_version/terraform/test/output.json"]
null_resource.named_test_resource: Creation complete after 2s [id=4307937759955824509]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=f01d9c20bf9c4e641145cbd10885aee53e06b29a]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=48ae61c1c0c101d4f5cdc1e902401a81b4ead00d3f96aa2de48f6616c5992789]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 9 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
addon_version = "v1.11.0-eksbuild.1"
region_id = "us-east-1"
resource_aka = "arn:aws:eks:us-east-1:632902152528:addonversion/vpc-cni/v1.11.0-eksbuild.1"

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "addon_version": "v1.11.0-eksbuild.1"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:eks:us-east-1:632902152528:addonversion/vpc-cni/v1.11.0-eksbuild.1"
    ],
    "title": "v1.11.0-eksbuild.1"
  }
]
✔ PASSED

POSTTEST: tests/aws_eks_addon_version

TEARDOWN: tests/aws_eks_addon_version

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_eks_cluster []

PRETEST: tests/aws_eks_cluster

TEST: tests/aws_eks_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eks_cluster.named_test_resource will be created
  + resource "aws_eks_cluster" "named_test_resource" {
      + arn                   = (known after apply)
      + certificate_authority = (known after apply)
      + created_at            = (known after apply)
      + endpoint              = (known after apply)
      + id                    = (known after apply)
      + identity              = (known after apply)
      + name                  = "turbottest42545"
      + platform_version      = (known after apply)
      + role_arn              = (known after apply)
      + status                = (known after apply)
      + tags                  = {
          + "Name" = "turbottest42545"
        }
      + tags_all              = {
          + "Name" = "turbottest42545"
        }
      + version               = (known after apply)

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
        }

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = false
          + endpoint_public_access    = true
          + public_access_cidrs       = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "eks.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest42545"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.named_test_resource will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = "turbottest42545"
    }

  # aws_iam_role_policy_attachment.named_test_resource2 will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource2" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      + role       = "turbottest42545"
    }

  # aws_subnet.named_test_resource1 will be created
  + resource "aws_subnet" "named_test_resource1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.named_test_resource2 will be created
  + resource "aws_subnet" "named_test_resource2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1d"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "172.31.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id                            = "632902152528"
  + endpoint                              = (known after apply)
  + identity                              = (known after apply)
  + kubeconfig-certificate-authority-data = (known after apply)
  + platform_version                      = (known after apply)
  + resource_aka                          = (known after apply)
  + resource_id                           = (known after apply)
  + resource_name                         = "turbottest42545"
  + role_arn                              = (known after apply)
  + status                                = (known after apply)
  + version                               = (known after apply)
  + vpc_config                            = [
      + {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = false
          + endpoint_public_access    = true
          + public_access_cidrs       = (known after apply)
          + security_group_ids        = null
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        },
    ]
aws_iam_role.named_test_resource: Creating...
aws_vpc.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 1s [id=turbottest42545]
aws_iam_role_policy_attachment.named_test_resource2: Creating...
aws_iam_role_policy_attachment.named_test_resource: Creating...
aws_iam_role_policy_attachment.named_test_resource2: Creation complete after 1s [id=turbottest42545-20220620094409645900000001]
aws_iam_role_policy_attachment.named_test_resource: Creation complete after 1s [id=turbottest42545-20220620094409872600000002]
aws_vpc.named_test_resource: Creation complete after 2s [id=vpc-0481a181f13c1bd55]
aws_subnet.named_test_resource1: Creating...
aws_subnet.named_test_resource2: Creating...
aws_subnet.named_test_resource1: Creation complete after 2s [id=subnet-050957e8bc44ef015]
aws_subnet.named_test_resource2: Creation complete after 2s [id=subnet-0e90e9b7d73f69753]
aws_eks_cluster.named_test_resource: Creating...
aws_eks_cluster.named_test_resource: Still creating... [10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [9m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [10m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [10m10s elapsed]
aws_eks_cluster.named_test_resource: Creation complete after 10m13s [id=turbottest42545]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
endpoint = "https://F34A9C1F23EB9C87B34B4F2D673B2763.gr7.us-east-1.eks.amazonaws.com"
identity = tolist([
  {
    "oidc" = tolist([
      {
        "issuer" = "https://oidc.eks.us-east-1.amazonaws.com/id/F34A9C1F23EB9C87B34B4F2D673B2763"
      },
    ])
  },
])
kubeconfig-certificate-authority-data = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREE1TlRBeU4xb1hEVE15TURZeE56QTVOVEF5TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWhkCmxWM3Q5eGZ6S211MXdZajZwbUN6bTZuV3B1MnlqcFlremlJN1RHcnZBTFpXZHdkTDJUS3JSS1RnTEtyTUs1YS8KUmlrZkRRL0dPdWhFSVgyV1IrM1ZGamtWbFVSMTJYV2QzRkVnWUlUYzNnR3VzYUhzM2luM2tMdmpPckoyZUVwZApxNnpab1NTWjZUODdJazNuU3VTVnMycXNTMmFzdjhmSElpbEpFQ1RrMUFoNGZpYjFHQ0x2NEFEVEVCZG9GVVN5Cks2UzVCcE1tdUdqZXlPZHBUWDNoM3FvcFIzNFIxOExrZk4yQjEvL2ExV3V5bG94RmRLWjV0bjF5V2JESkZaTTUKd2t3bzg2SlpheVF5NkJFLzZCWTVaYThEM0VpNjlXNWt6WVI5bTJkZXlLR0g2bEtLaDdLUEtiZHloTlpqZExGUQpUSTM3UVd1cEJaYXp5a3ZINDVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNaG1DWkFxNVJSS3NpanFIcUhMWUZtc29VSy9NQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSFp2WXRjVnJWWXYrNitSYXN0MAo0WVlFaCs0RlVZVXl4NUtJZjBWSk5hbFMyV29RV1pneERneUxsakNXZVZWZGxXbVRsUDMrR09SbzNjRFcxQng2Cnp3YkVJUGpaSUwvYi80NEpzREtwZkRRZUJwTnBHdzhQRmkzcUNXNWU2N0FBS0pwSW91WFpyQkxyK0V2dzlITnMKZ1dYejZ1NDYrUjJsMkRyY1dqTzE2Zm9mdys0am5QUzRlTkM1VHpiV1ZpdmdOdXhUNVMraTJGci9CZjB2Q1J2cApWVlN0SlBxZGtiS0VObGNGdlZLL0JEbC9vTjIza0wvQ2ZVSnM4Y2RCSjM1aEd1Y3VVbmJrQWt6Zm9PdTQzbzdkCnlZSDF0dW5mbXU0TXc4c3N4T3NlZ1k5eXJsSVA3V1R6VytabThJL2QzVE9sdkxMS3lENm5Xbk4yVXZIdWljb2UKZEJvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
platform_version = "eks.2"
resource_aka = "arn:aws:eks:us-east-1:632902152528:cluster/turbottest42545"
resource_id = "turbottest42545"
resource_name = "turbottest42545"
role_arn = "arn:aws:iam::632902152528:role/turbottest42545"
status = "ACTIVE"
version = "1.22"
vpc_config = tolist([
  {
    "cluster_security_group_id" = "sg-023a1e77e506e46a0"
    "endpoint_private_access" = false
    "endpoint_public_access" = true
    "public_access_cidrs" = toset([
      "0.0.0.0/0",
    ])
    "security_group_ids" = toset(null) /* of string */
    "subnet_ids" = toset([
      "subnet-050957e8bc44ef015",
      "subnet-0e90e9b7d73f69753",
    ])
    "vpc_id" = "vpc-0481a181f13c1bd55"
  },
])

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:eks:us-east-1:632902152528:cluster/turbottest42545",
    "endpoint": "https://F34A9C1F23EB9C87B34B4F2D673B2763.gr7.us-east-1.eks.amazonaws.com",
    "name": "turbottest42545",
    "platform_version": "eks.2",
    "role_arn": "arn:aws:iam::632902152528:role/turbottest42545",
    "status": "ACTIVE",
    "version": "1.22"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:eks:us-east-1:632902152528:cluster/turbottest42545",
    "endpoint": "https://F34A9C1F23EB9C87B34B4F2D673B2763.gr7.us-east-1.eks.amazonaws.com",
    "name": "turbottest42545",
    "status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:eks:us-east-1:632902152528:cluster/turbottest42545"
    ],
    "name": "turbottest42545",
    "tags": {
      "Name": "turbottest42545"
    },
    "title": "turbottest42545"
  }
]
✔ PASSED

POSTTEST: tests/aws_eks_cluster

TEARDOWN: tests/aws_eks_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_eks_identity_provider_config []

PRETEST: tests/aws_eks_identity_provider_config

TEST: tests/aws_eks_identity_provider_config
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eks_cluster.named_test_resource will be created
  + resource "aws_eks_cluster" "named_test_resource" {
      + arn                   = (known after apply)
      + certificate_authority = (known after apply)
      + created_at            = (known after apply)
      + endpoint              = (known after apply)
      + id                    = (known after apply)
      + identity              = (known after apply)
      + name                  = "turbottest36873"
      + platform_version      = (known after apply)
      + role_arn              = (known after apply)
      + status                = (known after apply)
      + tags                  = {
          + "Name" = "turbottest36873"
        }
      + tags_all              = {
          + "Name" = "turbottest36873"
        }
      + version               = (known after apply)

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
        }

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = false
          + endpoint_public_access    = true
          + public_access_cidrs       = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # aws_eks_identity_provider_config.named_test_resource will be created
  + resource "aws_eks_identity_provider_config" "named_test_resource" {
      + arn          = (known after apply)
      + cluster_name = "turbottest36873"
      + id           = (known after apply)
      + status       = (known after apply)
      + tags         = {
          + "Name" = "turbottest36873"
        }
      + tags_all     = {
          + "Name" = "turbottest36873"
        }

      + oidc {
          + client_id                     = (known after apply)
          + identity_provider_config_name = "turbottest36873"
          + issuer_url                    = (known after apply)
        }

      + timeouts {
          + create = "40m"
          + delete = "40m"
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "eks.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest36873"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.named_test_resource will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = "turbottest36873"
    }

  # aws_iam_role_policy_attachment.named_test_resource2 will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource2" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      + role       = "turbottest36873"
    }

  # aws_subnet.named_test_resource1 will be created
  + resource "aws_subnet" "named_test_resource1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.named_test_resource2 will be created
  + resource "aws_subnet" "named_test_resource2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1d"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.31.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "172.31.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id                    = "632902152528"
  + cluster_name                  = "turbottest36873"
  + identity                      = (known after apply)
  + identity_provider_config_type = "oidc"
  + resource_aka                  = (known after apply)
  + resource_id                   = (known after apply)
  + resource_name                 = "turbottest36873"
  + role_arn                      = (known after apply)
  + status                        = (known after apply)
aws_iam_role.named_test_resource: Creating...
aws_vpc.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 1s [id=turbottest36873]
aws_iam_role_policy_attachment.named_test_resource2: Creating...
aws_iam_role_policy_attachment.named_test_resource: Creating...
aws_iam_role_policy_attachment.named_test_resource2: Creation complete after 1s [id=turbottest36873-20220620095646612500000001]
aws_iam_role_policy_attachment.named_test_resource: Creation complete after 1s [id=turbottest36873-20220620095646831900000002]
aws_vpc.named_test_resource: Creation complete after 3s [id=vpc-0e08f5bbddd2b48cc]
aws_subnet.named_test_resource2: Creating...
aws_subnet.named_test_resource1: Creating...
aws_subnet.named_test_resource2: Creation complete after 1s [id=subnet-0df141d55410e76f2]
aws_subnet.named_test_resource1: Creation complete after 1s [id=subnet-01e517778df0a8f49]
aws_eks_cluster.named_test_resource: Creating...
aws_eks_cluster.named_test_resource: Still creating... [10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [3m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [4m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [5m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [6m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m30s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m40s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [7m50s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m0s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m10s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m20s elapsed]
aws_eks_cluster.named_test_resource: Still creating... [8m30s elapsed]
aws_eks_cluster.named_test_resource: Creation complete after 8m31s [id=turbottest36873]
aws_eks_identity_provider_config.named_test_resource: Creating...
aws_eks_identity_provider_config.named_test_resource: Still creating... [10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [1m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [1m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [1m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [1m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [1m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [1m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [2m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [2m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [2m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [2m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [2m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [2m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [3m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [3m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [3m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [3m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [3m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [3m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [4m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [4m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [4m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [4m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [4m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [4m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [5m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [5m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [5m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [5m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [5m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [5m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [6m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [6m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [6m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [6m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [6m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [6m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [7m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [7m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [7m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [7m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [7m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [7m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [8m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [8m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [8m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [8m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [8m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [8m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [9m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [9m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [9m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [9m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [9m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [9m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [10m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [10m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [10m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [10m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [10m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [10m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [11m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [11m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [11m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [11m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [11m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [11m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [12m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [12m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [12m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [12m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [12m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [12m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [13m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [13m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [13m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [13m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [13m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [13m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [14m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [14m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [14m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [14m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [14m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [14m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [15m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [15m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [15m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [15m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [15m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [15m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [16m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [16m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [16m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [16m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [16m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [16m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [17m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [17m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [17m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [17m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [17m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [17m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [18m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [18m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [18m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [18m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [18m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [18m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [19m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [19m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [19m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [19m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [19m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [19m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [20m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [21m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [21m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [21m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [21m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [21m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [21m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [22m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [22m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [22m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [22m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [22m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [22m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [23m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [23m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [23m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [23m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [23m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [23m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [24m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [24m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [24m20s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [24m30s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [24m40s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [24m50s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [25m0s elapsed]
aws_eks_identity_provider_config.named_test_resource: Still creating... [25m10s elapsed]
aws_eks_identity_provider_config.named_test_resource: Creation complete after 25m19s [id=turbottest36873:turbottest36873]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
cluster_name = "turbottest36873"
identity = tolist([
  {
    "oidc" = tolist([
      {
        "issuer" = "https://oidc.eks.us-east-1.amazonaws.com/id/8C70E69D401BF5E9EAF50C24D5C7D635"
      },
    ])
  },
])
identity_provider_config_type = "oidc"
resource_aka = "arn:aws:eks:us-east-1:632902152528:identityproviderconfig/turbottest36873/oidc/turbottest36873/78c0c049-7921-bfa2-d5f2-a355f2772578"
resource_id = "turbottest36873:turbottest36873"
resource_name = "turbottest36873"
role_arn = "arn:aws:iam::632902152528:role/turbottest36873"
status = "ACTIVE"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = InvalidParameterException: maxResults needs to be 1
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "ce7b8983-682a-4cec-8ccf-61ac3bd847e0"
  },
  Message_: "maxResults needs to be 1"
} (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:eks:us-east-1:632902152528:identityproviderconfig/turbottest36873/oidc/turbottest36873/78c0c049-7921-bfa2-d5f2-a355f2772578",
    "cluster_name": "turbottest36873",
    "name": "turbottest36873",
    "type": "oidc"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = InvalidParameterException: maxResults needs to be 1
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "ba7ce74e-84d4-44dd-849d-54c3baa285e8"
  },
  Message_: "maxResults needs to be 1"
} (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:eks:us-east-1:632902152528:identityproviderconfig/turbottest36873/oidc/turbottest36873/78c0c049-7921-bfa2-d5f2-a355f2772578",
    "name": "turbottest36873"
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = InvalidParameterException: maxResults needs to be 1
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "ed0743ed-b3d5-4dfa-8289-6f49b1aca84a"
  },
  Message_: "maxResults needs to be 1"
} (SQLSTATE HV000)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = InvalidParameterException: maxResults needs to be 1
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "4ecb599a-6a03-41ed-88e8-166523a68113"
  },
  Message_: "maxResults needs to be 1"
} (SQLSTATE HV000)
{}
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:eks:us-east-1:632902152528:identityproviderconfig/turbottest36873/oidc/turbottest36873/78c0c049-7921-bfa2-d5f2-a355f2772578"
    ],
    "name": "turbottest36873",
    "tags": {
      "Name": "turbottest36873"
    },
    "title": "turbottest36873"
  }
]

✘ FAILED

TEARDOWN: tests/aws_eks_identity_provider_config

SUMMARY:

✘ tests/aws_eks_identity_provider_config failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elasticache_cluster []

PRETEST: tests/aws_elasticache_cluster

TEST: tests/aws_elasticache_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = "arn:${partition}:elasticache:${region}:${account_id}:cluster:turbottest5786"
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_elasticache_cluster.named_test_resource will be created
  + resource "aws_elasticache_cluster" "named_test_resource" {
      + apply_immediately          = (known after apply)
      + arn                        = (known after apply)
      + auto_minor_version_upgrade = "true"
      + availability_zone          = (known after apply)
      + az_mode                    = (known after apply)
      + cache_nodes                = (known after apply)
      + cluster_address            = (known after apply)
      + cluster_id                 = "turbottest5786"
      + configuration_endpoint     = (known after apply)
      + engine                     = "memcached"
      + engine_version             = (known after apply)
      + engine_version_actual      = (known after apply)
      + id                         = (known after apply)
      + maintenance_window         = (known after apply)
      + node_type                  = "cache.t2.micro"
      + num_cache_nodes            = 2
      + parameter_group_name       = "default.memcached1.6"
      + port                       = 11211
      + replication_group_id       = (known after apply)
      + security_group_ids         = (known after apply)
      + security_group_names       = (known after apply)
      + snapshot_window            = (known after apply)
      + subnet_group_name          = "turbottest5786"
      + tags                       = {
          + "name" = "turbottest5786"
        }
      + tags_all                   = {
          + "name" = "turbottest5786"
        }
    }

  # aws_elasticache_subnet_group.my_subnet_group will be created
  + resource "aws_elasticache_subnet_group" "my_subnet_group" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest5786"
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id       = "632902152528"
  + cache_cluster_id = "turbottest5786"
  + resource_aka     = (known after apply)
  + resource_id      = "turbottest5786"
  + resource_name    = "turbottest5786"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-07a8ef25e0c64be89]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-05ea138cfb90de431]
aws_elasticache_subnet_group.my_subnet_group: Creating...
aws_elasticache_subnet_group.my_subnet_group: Creation complete after 1s [id=turbottest5786]
aws_elasticache_cluster.named_test_resource: Creating...
aws_elasticache_cluster.named_test_resource: Still creating... [10s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [20s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [30s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [40s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [50s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [3m20s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [3m30s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [3m40s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [3m50s elapsed]
aws_elasticache_cluster.named_test_resource: Still creating... [4m0s elapsed]
aws_elasticache_cluster.named_test_resource: Creation complete after 4m9s [id=turbottest5786]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=ed50c3409583722491266b841aaffa024e9a049a1a4efa8b7588839d3c19edeb]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
cache_cluster_id = "turbottest5786"
resource_aka = "arn:aws:elasticache:us-east-1:632902152528:cluster:turbottest5786"
resource_id = "turbottest5786"
resource_name = "turbottest5786"

Running SQL query: test-get-query.sql
[
  {
    "cache_cluster_id": "turbottest5786",
    "cache_node_type": "cache.t2.micro",
    "engine": "memcached",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest5786"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:cluster:turbottest5786"
    ],
    "cache_cluster_id": "turbottest5786",
    "tags": {
      "name": "turbottest5786"
    },
    "title": "turbottest5786"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:cluster:turbottest5786"
    ],
    "cache_cluster_id": "turbottest5786",
    "cache_node_type": "cache.t2.micro",
    "engine": "memcached",
    "title": "turbottest5786"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_elasticache_cluster

TEARDOWN: tests/aws_elasticache_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elasticache_parameter_group []

PRETEST: tests/aws_elasticache_parameter_group

TEST: tests/aws_elasticache_parameter_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = "arn:${partition}:elasticache:${region}:${account_id}:parametergroup:turbottest51541"
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_name"    = "turbottest51541"
        }
    }

  # aws_elasticache_parameter_group.named_test_resource will be created
  + resource "aws_elasticache_parameter_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "A test parameter group"
      + family      = "redis2.8"
      + id          = (known after apply)
      + name        = "turbottest51541"
      + tags_all    = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_name = "turbottest51541"
aws_elasticache_parameter_group.named_test_resource: Creating...
aws_elasticache_parameter_group.named_test_resource: Creation complete after 2s [id=turbottest51541]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=11e77d9d39fda1b84d9ae581bc4e3d7bb1058ec8643ce8d49f5b0868c697468b]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:elasticache:us-east-1:632902152528:parametergroup:turbottest51541"
resource_name = "turbottest51541"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:parametergroup:turbottest51541"
    ],
    "cache_parameter_group_family": "redis2.8",
    "cache_parameter_group_name": "turbottest51541",
    "description": "A test parameter group",
    "title": "turbottest51541"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:parametergroup:turbottest51541"
    ],
    "cache_parameter_group_name": "turbottest51541",
    "title": "turbottest51541"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:parametergroup:turbottest51541"
    ],
    "cache_parameter_group_family": "redis2.8",
    "cache_parameter_group_name": "turbottest51541",
    "title": "turbottest51541"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_elasticache_parameter_group

TEARDOWN: tests/aws_elasticache_parameter_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elasticache_replication_group []

PRETEST: tests/aws_elasticache_replication_group

TEST: tests/aws_elasticache_replication_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_elasticache_replication_group.named_test_resource will be created
  + resource "aws_elasticache_replication_group" "named_test_resource" {
      + apply_immediately              = (known after apply)
      + arn                            = (known after apply)
      + at_rest_encryption_enabled     = (known after apply)
      + auto_minor_version_upgrade     = (known after apply)
      + automatic_failover_enabled     = true
      + cluster_enabled                = (known after apply)
      + configuration_endpoint_address = (known after apply)
      + data_tiering_enabled           = (known after apply)
      + description                    = (known after apply)
      + engine                         = "redis"
      + engine_version                 = "5.0.6"
      + engine_version_actual          = (known after apply)
      + global_replication_group_id    = (known after apply)
      + id                             = (known after apply)
      + maintenance_window             = (known after apply)
      + member_clusters                = (known after apply)
      + multi_az_enabled               = false
      + node_type                      = "cache.t2.micro"
      + num_cache_clusters             = (known after apply)
      + num_node_groups                = (known after apply)
      + number_cache_clusters          = 2
      + parameter_group_name           = "default.redis5.0"
      + port                           = 6379
      + primary_endpoint_address       = (known after apply)
      + reader_endpoint_address        = (known after apply)
      + replicas_per_node_group        = (known after apply)
      + replication_group_description  = "test description"
      + replication_group_id           = "turbottest13440"
      + security_group_ids             = (known after apply)
      + security_group_names           = (known after apply)
      + snapshot_window                = (known after apply)
      + subnet_group_name              = (known after apply)
      + tags_all                       = (known after apply)
      + transit_encryption_enabled     = (known after apply)

      + cluster_mode {
          + num_node_groups         = (known after apply)
          + replicas_per_node_group = (known after apply)
        }
    }

  # aws_elasticache_subnet_group.my_subnet_group will be created
  + resource "aws_elasticache_subnet_group" "my_subnet_group" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest13440"
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka = (known after apply)
  + resource_id  = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 2s [id=vpc-07be240d54f578fc7]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-0dec4ecef825b7322]
aws_elasticache_subnet_group.my_subnet_group: Creating...
aws_elasticache_subnet_group.my_subnet_group: Creation complete after 2s [id=turbottest13440]
aws_elasticache_replication_group.named_test_resource: Creating...
aws_elasticache_replication_group.named_test_resource: Still creating... [10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [1m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [1m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [1m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [1m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [1m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [1m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [2m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [2m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [2m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [2m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [2m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [2m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [3m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [3m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [3m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [3m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [3m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [3m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [4m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [4m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [4m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [4m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [4m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [4m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [5m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [5m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [5m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [5m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [5m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [5m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [6m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [6m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [6m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [6m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [6m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [6m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [7m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [7m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [7m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [7m30s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [7m40s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [7m50s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [8m0s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [8m10s elapsed]
aws_elasticache_replication_group.named_test_resource: Still creating... [8m20s elapsed]
aws_elasticache_replication_group.named_test_resource: Creation complete after 8m28s [id=turbottest13440]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_elasticache_replication_group.named_test_resource,
  on variables.tf line 66, in resource "aws_elasticache_replication_group" "named_test_resource":
  66:   replication_group_description = "test description"

Use description instead

(and 5 more similar warnings elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:elasticache:us-east-1:632902152528:replicationgroup:turbottest13440"
resource_id = "turbottest13440"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:replicationgroup:turbottest13440"
    ],
    "automatic_failover": "enabled",
    "cache_node_type": "cache.t2.micro",
    "description": "test description",
    "replication_group_id": "turbottest13440",
    "title": "turbottest13440"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:replicationgroup:turbottest13440"
    ],
    "automatic_failover": "enabled",
    "cache_node_type": "cache.t2.micro",
    "replication_group_id": "turbottest13440",
    "title": "turbottest13440"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:replicationgroup:turbottest13440"
    ],
    "automatic_failover": "enabled",
    "cache_node_type": "cache.t2.micro",
    "description": "test description",
    "replication_group_id": "turbottest13440",
    "title": "turbottest13440"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_elasticache_replication_group

TEARDOWN: tests/aws_elasticache_replication_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elasticache_subnet_group []

PRETEST: tests/aws_elasticache_subnet_group

TEST: tests/aws_elasticache_subnet_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = "arn:${partition}:elasticache:${region}:${account_id}:subnetgroup:turbottest25392"
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_name"    = "turbottest25392"
        }
    }

  # aws_elasticache_subnet_group.named_test_resource will be created
  + resource "aws_elasticache_subnet_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "A test subnet group"
      + id          = (known after apply)
      + name        = "turbottest25392"
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka = (known after apply)
  + resource_id  = "turbottest25392"
  + vpc_id       = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-043b83ebdcd4b88bf]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-0189fdaa87ef54515]
aws_elasticache_subnet_group.named_test_resource: Creating...
aws_elasticache_subnet_group.named_test_resource: Creation complete after 2s [id=turbottest25392]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=0066d638fcae5e8b5f55627170ee69b174202bf58d3141c60a829e097d537346]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:elasticache:us-east-1:632902152528:subnetgroup:turbottest25392"
resource_id = "turbottest25392"
vpc_id = "vpc-043b83ebdcd4b88bf"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:subnetgroup:turbottest25392"
    ],
    "cache_subnet_group_description": "A test subnet group",
    "cache_subnet_group_name": "turbottest25392",
    "title": "turbottest25392",
    "vpc_id": "vpc-043b83ebdcd4b88bf"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:subnetgroup:turbottest25392"
    ],
    "cache_subnet_group_name": "turbottest25392",
    "title": "turbottest25392"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:elasticache:us-east-1:632902152528:subnetgroup:turbottest25392"
    ],
    "cache_subnet_group_description": "A test subnet group",
    "cache_subnet_group_name": "turbottest25392",
    "title": "turbottest25392"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_elasticache_subnet_group

TEARDOWN: tests/aws_elasticache_subnet_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elastic_beanstalk_application []

PRETEST: tests/aws_elastic_beanstalk_application

TEST: tests/aws_elastic_beanstalk_application
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_elastic_beanstalk_application.named_test_resource will be created
  + resource "aws_elastic_beanstalk_application" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest4159"
      + tags     = {
          + "name" = "turbottest4159"
        }
      + tags_all = {
          + "name" = "turbottest4159"
        }

      + appversion_lifecycle {
          + service_role = (known after apply)
        }
    }

  # aws_iam_service_linked_role.elasticbeanstalk will be created
  + resource "aws_iam_service_linked_role" "elasticbeanstalk" {
      + arn              = (known after apply)
      + aws_service_name = "elasticbeanstalk.amazonaws.com"
      + create_date      = (known after apply)
      + id               = (known after apply)
      + name             = (known after apply)
      + path             = (known after apply)
      + tags_all         = (known after apply)
      + unique_id        = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest4159"
aws_iam_service_linked_role.elasticbeanstalk: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error creating IAM Service Linked Role (elasticbeanstalk.amazonaws.com): InvalidInput: Service role name AWSServiceRoleForElasticBeanstalk has been taken in this account, please try a different suffix.
	status code: 400, request id: 3c1603eb-0406-427f-a38a-13f15782b14f

  with aws_iam_service_linked_role.elasticbeanstalk,
  on variables.tf line 52, in resource "aws_iam_service_linked_role" "elasticbeanstalk":
  52: resource "aws_iam_service_linked_role" "elasticbeanstalk" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_elastic_beanstalk_application

SUMMARY:

✘ tests/aws_elastic_beanstalk_application failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elastic_beanstalk_environment []

PRETEST: tests/aws_elastic_beanstalk_environment

TEST: tests/aws_elastic_beanstalk_environment
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_elastic_beanstalk_application.application_test will be created
  + resource "aws_elastic_beanstalk_application" "application_test" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest9325"
      + tags_all = (known after apply)

      + appversion_lifecycle {
          + service_role = "arn:aws:iam::632902152528:role/aws-service-role/elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk"
        }
    }

  # aws_elastic_beanstalk_environment.named_test_resource will be created
  + resource "aws_elastic_beanstalk_environment" "named_test_resource" {
      + all_settings           = (known after apply)
      + application            = "turbottest9325"
      + arn                    = (known after apply)
      + autoscaling_groups     = (known after apply)
      + cname                  = (known after apply)
      + cname_prefix           = (known after apply)
      + endpoint_url           = (known after apply)
      + id                     = (known after apply)
      + instances              = (known after apply)
      + launch_configurations  = (known after apply)
      + load_balancers         = (known after apply)
      + name                   = "turbottest9325"
      + platform_arn           = (known after apply)
      + queues                 = (known after apply)
      + solution_stack_name    = "64bit Amazon Linux 2 v3.4.2 running Go 1"
      + tags_all               = (known after apply)
      + tier                   = "WebServer"
      + triggers               = (known after apply)
      + version_label          = (known after apply)
      + wait_for_ready_timeout = "45m"

      + setting {
          + name      = "ELBSubnets"
          + namespace = "aws:ec2:vpc"
          + value     = (known after apply)
        }
      + setting {
          + name      = "IamInstanceProfile"
          + namespace = "aws:autoscaling:launchconfiguration"
          + value     = "turbottest9325"
        }
      + setting {
          + name      = "Subnets"
          + namespace = "aws:ec2:vpc"
          + value     = (known after apply)
        }
      + setting {
          + name      = "VPCId"
          + namespace = "aws:ec2:vpc"
          + value     = (known after apply)
        }
    }

  # aws_iam_instance_profile.instance_profile will be created
  + resource "aws_iam_instance_profile" "instance_profile" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = "turbottest9325"
      + path        = "/"
      + role        = "turbottest9325"
      + tags_all    = (known after apply)
      + unique_id   = (known after apply)
    }

  # aws_iam_role.role will be created
  + resource "aws_iam_role" "role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest9325"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_internet_gateway.testinternetgateway will be created
  + resource "aws_internet_gateway" "testinternetgateway" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_route_table.route will be created
  + resource "aws_route_table" "route" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + core_network_arn           = ""
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + instance_id                = ""
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.routeassociation1 will be created
  + resource "aws_route_table_association" "routeassociation1" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.ssh-allowed will be created
  + resource "aws_security_group" "ssh-allowed" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
        ]
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 10 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest9325"
aws_elastic_beanstalk_application.application_test: Creating...
aws_iam_role.role: Creating...
aws_vpc.my_vpc: Creating...
aws_iam_role.role: Creation complete after 2s [id=turbottest9325]
aws_iam_instance_profile.instance_profile: Creating...
aws_elastic_beanstalk_application.application_test: Creation complete after 2s [id=turbottest9325]
aws_iam_instance_profile.instance_profile: Creation complete after 1s [id=turbottest9325]
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0010cac0e02be561c]
aws_internet_gateway.testinternetgateway: Creating...
aws_subnet.my_subnet1: Creating...
aws_security_group.ssh-allowed: Creating...
aws_internet_gateway.testinternetgateway: Creation complete after 2s [id=igw-0a3da45d51837f108]
aws_route_table.route: Creating...
aws_route_table.route: Creation complete after 1s [id=rtb-007953d77dbc295df]
aws_security_group.ssh-allowed: Creation complete after 5s [id=sg-05f6447baed1e53be]
aws_subnet.my_subnet1: Still creating... [10s elapsed]
aws_subnet.my_subnet1: Creation complete after 12s [id=subnet-02fa2e9087b0b3c31]
aws_route_table_association.routeassociation1: Creating...
aws_elastic_beanstalk_environment.named_test_resource: Creating...
aws_route_table_association.routeassociation1: Creation complete after 1s [id=rtbassoc-0985cdd0e73b4bd90]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [10s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [20s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [30s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [40s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [50s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [1m0s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [1m10s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [1m20s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [1m30s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [1m40s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [1m50s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [2m0s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [2m10s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [2m20s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [2m30s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [2m40s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [2m50s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [3m0s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [3m10s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Still creating... [3m20s elapsed]
aws_elastic_beanstalk_environment.named_test_resource: Creation complete after 3m27s [id=e-2dmyiesnar]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 10 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:elasticbeanstalk:us-east-1:632902152528:environment/turbottest9325/turbottest9325"
resource_id = "e-2dmyiesnar"
resource_name = "turbottest9325"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:elasticbeanstalk:us-east-1:632902152528:environment/turbottest9325/turbottest9325"
    ],
    "application_name": "turbottest9325",
    "environment_id": "e-2dmyiesnar",
    "environment_name": "turbottest9325",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "Name": "turbottest9325",
      "elasticbeanstalk:environment-id": "e-2dmyiesnar",
      "elasticbeanstalk:environment-name": "turbottest9325"
    },
    "title": "turbottest9325"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:elasticbeanstalk:us-east-1:632902152528:environment/turbottest9325/turbottest9325"
    ],
    "environment_name": "turbottest9325",
    "tags": {
      "Name": "turbottest9325",
      "elasticbeanstalk:environment-id": "e-2dmyiesnar",
      "elasticbeanstalk:environment-name": "turbottest9325"
    },
    "title": "turbottest9325"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "application_name": "turbottest9325",
    "environment_id": "e-2dmyiesnar",
    "environment_name": "turbottest9325",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:elasticbeanstalk:us-east-1:632902152528:environment/turbottest9325/turbottest9325"
    ],
    "region": "us-east-1",
    "title": "turbottest9325"
  }
]
✔ PASSED

POSTTEST: tests/aws_elastic_beanstalk_environment

TEARDOWN: tests/aws_elastic_beanstalk_environment

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_elasticsearch_domain []

PRETEST: tests/aws_elasticsearch_domain

TEST: tests/aws_elasticsearch_domain
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_elasticsearch_domain.named_test_resource will be created
  + resource "aws_elasticsearch_domain" "named_test_resource" {
      + access_policies       = (known after apply)
      + advanced_options      = (known after apply)
      + arn                   = (known after apply)
      + domain_id             = (known after apply)
      + domain_name           = "turbottest92605"
      + elasticsearch_version = "5.6"
      + endpoint              = (known after apply)
      + id                    = (known after apply)
      + kibana_endpoint       = (known after apply)
      + tags_all              = (known after apply)

      + advanced_security_options {
          + enabled                        = (known after apply)
          + internal_user_database_enabled = (known after apply)

          + master_user_options {
              + master_user_arn      = (known after apply)
              + master_user_name     = (known after apply)
              + master_user_password = (sensitive value)
            }
        }

      + auto_tune_options {
          + desired_state       = (known after apply)
          + rollback_on_disable = (known after apply)

          + maintenance_schedule {
              + cron_expression_for_recurrence = (known after apply)
              + start_at                       = (known after apply)

              + duration {
                  + unit  = (known after apply)
                  + value = (known after apply)
                }
            }
        }

      + cluster_config {
          + dedicated_master_enabled = false
          + instance_count           = 1
          + instance_type            = "t3.small.elasticsearch"

          + cold_storage_options {
              + enabled = (known after apply)
            }
        }

      + domain_endpoint_options {
          + custom_endpoint                 = (known after apply)
          + custom_endpoint_certificate_arn = (known after apply)
          + custom_endpoint_enabled         = (known after apply)
          + enforce_https                   = (known after apply)
          + tls_security_policy             = (known after apply)
        }

      + ebs_options {
          + ebs_enabled = true
          + volume_size = 10
          + volume_type = (known after apply)
        }

      + encrypt_at_rest {
          + enabled    = (known after apply)
          + kms_key_id = (known after apply)
        }

      + node_to_node_encryption {
          + enabled = (known after apply)
        }

      + snapshot_options {
          + automated_snapshot_start_hour = 23
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest92605"
aws_elasticsearch_domain.named_test_resource: Creating...
aws_elasticsearch_domain.named_test_resource: Still creating... [10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [1m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [1m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [1m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [1m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [1m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [1m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [2m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [2m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [2m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [2m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [2m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [2m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [3m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [3m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [3m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [3m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [3m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [3m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [4m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [4m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [4m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [4m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [4m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [4m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [5m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [5m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [5m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [5m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [5m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [5m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [6m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [6m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [6m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [6m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [6m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [6m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [7m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [7m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [7m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [7m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [7m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [7m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [8m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [8m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [8m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [8m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [8m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [8m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [9m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [9m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [9m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [9m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [9m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [9m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [10m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [10m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [10m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [10m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [10m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [10m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [11m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [11m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [11m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [11m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [11m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [11m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [12m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [12m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [12m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [12m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [12m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [12m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [13m0s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [13m10s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [13m20s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [13m30s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [13m40s elapsed]
aws_elasticsearch_domain.named_test_resource: Still creating... [13m50s elapsed]
aws_elasticsearch_domain.named_test_resource: Creation complete after 13m50s [id=arn:aws:es:us-east-1:632902152528:domain/turbottest92605]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:es:us-east-1:632902152528:domain/turbottest92605"
resource_name = "turbottest92605"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest92605"
    ],
    "domain_name": "turbottest92605",
    "ebs_options": {
      "EBSEnabled": true,
      "Iops": null,
      "VolumeSize": 10,
      "VolumeType": "gp2"
    },
    "elasticsearch_version": "5.6",
    "partition": "aws",
    "region": "us-east-1",
    "snapshot_options": {
      "AutomatedSnapshotStartHour": 23
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest92605"
    ],
    "domain_name": "turbottest92605",
    "ebs_options": {
      "EBSEnabled": true,
      "Iops": null,
      "VolumeSize": 10,
      "VolumeType": "gp2"
    },
    "elasticsearch_version": "5.6",
    "partition": "aws",
    "region": "us-east-1",
    "snapshot_options": {
      "AutomatedSnapshotStartHour": 23
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest92605"
    ],
    "domain_name": "turbottest92605",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest92605"
    ],
    "title": "turbottest92605"
  }
]
✔ PASSED

POSTTEST: tests/aws_elasticsearch_domain

TEARDOWN: tests/aws_elasticsearch_domain

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_eventbridge_bus []

PRETEST: tests/aws_eventbridge_bus

TEST: tests/aws_eventbridge_bus
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_event_bus.named_test_resource will be created
  + resource "aws_cloudwatch_event_bus" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest99117"
      + tags     = {
          + "name" = "turbottest99117"
        }
      + tags_all = {
          + "name" = "turbottest99117"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_arn  = (known after apply)
  + resource_name = "turbottest99117"
aws_cloudwatch_event_bus.named_test_resource: Creating...
aws_cloudwatch_event_bus.named_test_resource: Creation complete after 1s [id=turbottest99117]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_arn = "arn:aws:events:us-east-1:632902152528:event-bus/turbottest99117"
resource_name = "turbottest99117"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:events:us-east-1:632902152528:event-bus/turbottest99117",
    "name": "turbottest99117",
    "tags": {
      "name": "turbottest99117"
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:events:us-east-1:632902152528:event-bus/turbottest99117",
    "name": "turbottest99117",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest99117"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:events:us-east-1:632902152528:event-bus/turbottest99117",
    "name": "turbottest99117",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest99117"
    },
    "title": "turbottest99117"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:events:us-east-1:632902152528:event-bus/turbottest99117"
    ],
    "name": "turbottest99117",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest99117"
    },
    "title": "turbottest99117"
  }
]
✔ PASSED

POSTTEST: tests/aws_eventbridge_bus

TEARDOWN: tests/aws_eventbridge_bus

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_eventbridge_rule []

PRETEST: tests/aws_eventbridge_rule

TEST: tests/aws_eventbridge_rule
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_event_rule.named_test_resource will be created
  + resource "aws_cloudwatch_event_rule" "named_test_resource" {
      + arn            = (known after apply)
      + event_bus_name = "default"
      + event_pattern  = jsonencode(
            {
              + detail-type = [
                  + "AWS Console Sign In via CloudTrail",
                ]
            }
        )
      + id             = (known after apply)
      + is_enabled     = true
      + name           = "turbottest24296"
      + name_prefix    = (known after apply)
      + tags           = {
          + "name" = "turbottest24296"
        }
      + tags_all       = {
          + "name" = "turbottest24296"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest24296"
aws_cloudwatch_event_rule.named_test_resource: Creating...
aws_cloudwatch_event_rule.named_test_resource: Creation complete after 2s [id=turbottest24296]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:events:us-east-1:632902152528:rule/turbottest24296"
resource_name = "turbottest24296"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:events:us-east-1:632902152528:rule/turbottest24296",
    "event_pattern": {
      "detail-type": [
        "AWS Console Sign In via CloudTrail"
      ]
    },
    "name": "turbottest24296",
    "tags": {
      "name": "turbottest24296"
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "arn": "arn:aws:events:us-east-1:632902152528:rule/turbottest24296",
    "name": "turbottest24296",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest24296"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:events:us-east-1:632902152528:rule/turbottest24296",
    "event_bus_name": "default",
    "name": "turbottest24296",
    "partition": "aws",
    "region": "us-east-1",
    "state": "ENABLED",
    "tags": {
      "name": "turbottest24296"
    },
    "title": "turbottest24296"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:events:us-east-1:632902152528:rule/turbottest24296"
    ],
    "name": "turbottest24296",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest24296"
    },
    "title": "turbottest24296"
  }
]
✔ PASSED

POSTTEST: tests/aws_eventbridge_rule

TEARDOWN: tests/aws_eventbridge_rule

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_fsx_file_system []

PRETEST: tests/aws_fsx_file_system

TEST: tests/aws_fsx_file_system
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_name"    = "turbottest44348"
        }
    }

  # aws_fsx_lustre_file_system.named_test_resource will be created
  + resource "aws_fsx_lustre_file_system" "named_test_resource" {
      + arn                               = (known after apply)
      + auto_import_policy                = (known after apply)
      + automatic_backup_retention_days   = (known after apply)
      + copy_tags_to_backups              = false
      + daily_automatic_backup_start_time = (known after apply)
      + data_compression_type             = "NONE"
      + deployment_type                   = "SCRATCH_1"
      + dns_name                          = (known after apply)
      + export_path                       = (known after apply)
      + file_system_type_version          = (known after apply)
      + id                                = (known after apply)
      + imported_file_chunk_size          = (known after apply)
      + kms_key_id                        = (known after apply)
      + mount_name                        = (known after apply)
      + network_interface_ids             = (known after apply)
      + owner_id                          = (known after apply)
      + storage_capacity                  = 1200
      + storage_type                      = "SSD"
      + subnet_ids                        = (known after apply)
      + tags                              = {
          + "foo" = "turbottest44348"
        }
      + tags_all                          = {
          + "foo" = "turbottest44348"
        }
      + vpc_id                            = (known after apply)
      + weekly_maintenance_start_time     = (known after apply)

      + log_configuration {
          + destination = (known after apply)
          + level       = (known after apply)
        }
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest44348"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0fb3c14dc98b97e89]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-073e8582e188ccc47]
aws_fsx_lustre_file_system.named_test_resource: Creating...
aws_fsx_lustre_file_system.named_test_resource: Still creating... [10s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [20s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [30s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [40s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [50s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [1m0s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [1m10s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [1m20s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [1m30s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [1m40s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [1m50s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [2m0s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [2m10s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [2m20s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [2m30s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [2m40s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [2m50s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [3m0s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [3m10s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [3m20s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [3m30s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [3m40s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [3m50s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [4m0s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [4m10s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [4m20s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [4m30s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [4m40s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [4m50s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [5m0s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [5m10s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [5m20s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Still creating... [5m30s elapsed]
aws_fsx_lustre_file_system.named_test_resource: Creation complete after 5m39s [id=fs-0482ac2e762a76b0d]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=26763f394fdf759d44f5c3503dba190e4c4b1cde15ca32fa4b4e4a00d36b0905]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:fsx:us-east-1:632902152528:file-system/fs-0482ac2e762a76b0d"
resource_id = "fs-0482ac2e762a76b0d"
resource_name = "turbottest44348"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:fsx:us-east-1:632902152528:file-system/fs-0482ac2e762a76b0d",
    "file_system_id": "fs-0482ac2e762a76b0d"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:fsx:us-east-1:632902152528:file-system/fs-0482ac2e762a76b0d"
    ],
    "file_system_id": "fs-0482ac2e762a76b0d",
    "title": "fs-0482ac2e762a76b0d"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "file_system_id": "fs-0482ac2e762a76b0d",
    "title": "fs-0482ac2e762a76b0d"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_fsx_file_system

TEARDOWN: tests/aws_fsx_file_system

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_glacier_vault []

PRETEST: tests/aws_glacier_vault

TEST: tests/aws_glacier_vault
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_glacier_vault.named_test_resource will be created
  + resource "aws_glacier_vault" "named_test_resource" {
      + access_policy = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "glacier:InitiateJob",
                          + "glacier:GetJobOutput",
                        ]
                      + Effect    = "Allow"
                      + Principal = "*"
                      + Resource  = "arn:aws:glacier:us-east-1:632902152528:vaults/turbottest1644"
                      + Sid       = "__default_policy_ID"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + arn           = (known after apply)
      + id            = (known after apply)
      + location      = (known after apply)
      + name          = "turbottest1644"
      + tags          = {
          + "name" = "turbottest1644"
        }
      + tags_all      = {
          + "name" = "turbottest1644"
        }
    }

  # aws_glacier_vault_lock.vault_policy will be created
  + resource "aws_glacier_vault_lock" "vault_policy" {
      + complete_lock         = false
      + id                    = (known after apply)
      + ignore_deletion_error = false
      + policy                = (known after apply)
      + vault_name            = "turbottest1644"
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = "turbottest1644"
  + resource_name = "turbottest1644"
aws_glacier_vault.named_test_resource: Creating...
aws_glacier_vault.named_test_resource: Creation complete after 2s [id=turbottest1644]
aws_glacier_vault_lock.vault_policy: Creating...
aws_glacier_vault_lock.vault_policy: Creation complete after 0s [id=turbottest1644]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:glacier:us-east-1:632902152528:vaults/turbottest1644"
resource_id = "turbottest1644"
resource_name = "turbottest1644"

Running SQL query: test-get-query.sql
[
  {
    "tags_src": {
      "name": "turbottest1644"
    },
    "title": "turbottest1644",
    "vault_name": "turbottest1644"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:glacier:us-east-1:632902152528:vaults/turbottest1644"
    ],
    "policy": {
      "Statement": [
        {
          "Action": [
            "glacier:InitiateJob",
            "glacier:GetJobOutput"
          ],
          "Effect": "Allow",
          "Principal": "*",
          "Resource": "arn:aws:glacier:us-east-1:632902152528:vaults/turbottest1644",
          "Sid": "__default_policy_ID"
        }
      ],
      "Version": "2012-10-17"
    },
    "tags": {
      "name": "turbottest1644"
    },
    "title": "turbottest1644",
    "vault_lock_policy_std": {
      "Statement": [
        {
          "Action": [
            "glacier:deletearchive"
          ],
          "Condition": {
            "NumericLessThan": {
              "glacier:archiveageindays": [
                "365"
              ]
            }
          },
          "Effect": "Deny",
          "Principal": {
            "AWS": [
              "*"
            ]
          },
          "Resource": [
            "arn:aws:glacier:us-east-1:632902152528:vaults/turbottest1644"
          ],
          "Sid": "deny-based-on-archive-age"
        }
      ],
      "Version": "2012-10-17"
    },
    "vault_name": "turbottest1644"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:glacier:us-east-1:632902152528:vaults/turbottest1644"
    ],
    "tags": {
      "name": "turbottest1644"
    },
    "title": "turbottest1644",
    "vault_name": "turbottest1644"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_glacier_vault

TEARDOWN: tests/aws_glacier_vault

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_glue_catalog_database []

PRETEST: tests/aws_glue_catalog_database

TEST: tests/aws_glue_catalog_database
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_glue_catalog_database.named_test_resource will be created
  + resource "aws_glue_catalog_database" "named_test_resource" {
      + arn          = (known after apply)
      + catalog_id   = (known after apply)
      + description  = "integration testing"
      + id           = (known after apply)
      + location_uri = (known after apply)
      + name         = "turbottest81295"

      + create_table_default_permission {
          + permissions = (known after apply)

          + principal {
              + data_lake_principal_identifier = (known after apply)
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_account   = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest81295"
aws_glue_catalog_database.named_test_resource: Creating...
aws_glue_catalog_database.named_test_resource: Creation complete after 1s [id=632902152528:turbottest81295]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:glue:us-east-1:632902152528:database/turbottest81295"
resource_name = "turbottest81295"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:database/turbottest81295"
    ],
    "catalog_id": "632902152528",
    "create_table_default_permissions": [
      {
        "Permissions": [
          "ALL"
        ],
        "Principal": {
          "DataLakePrincipalIdentifier": "IAM_ALLOWED_PRINCIPALS"
        }
      }
    ],
    "description": "integration testing",
    "location_uri": null,
    "name": "turbottest81295",
    "title": "turbottest81295"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:database/turbottest81295"
    ],
    "title": "turbottest81295"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "description": "integration testing",
    "name": "turbottest81295",
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest81295"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:database/turbottest81295"
    ],
    "name": "turbottest81295",
    "region": "us-east-1",
    "title": "turbottest81295"
  }
]
✔ PASSED

POSTTEST: tests/aws_glue_catalog_database

TEARDOWN: tests/aws_glue_catalog_database

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_glue_catalog_table []

PRETEST: tests/aws_glue_catalog_table

TEST: tests/aws_glue_catalog_table
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_glue_catalog_database.named_test_resource will be created
  + resource "aws_glue_catalog_database" "named_test_resource" {
      + arn          = (known after apply)
      + catalog_id   = (known after apply)
      + description  = "integration testing"
      + id           = (known after apply)
      + location_uri = (known after apply)
      + name         = "turbottest97974"

      + create_table_default_permission {
          + permissions = (known after apply)

          + principal {
              + data_lake_principal_identifier = (known after apply)
            }
        }
    }

  # aws_glue_catalog_table.named_test_resource will be created
  + resource "aws_glue_catalog_table" "named_test_resource" {
      + arn           = (known after apply)
      + catalog_id    = (known after apply)
      + database_name = "turbottest97974"
      + description   = "integration testing"
      + id            = (known after apply)
      + name          = "turbottest97974"

      + partition_index {
          + index_name   = (known after apply)
          + index_status = (known after apply)
          + keys         = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_account   = "632902152528"
  + aws_region    = "us-east-1"
  + database_name = "turbottest97974"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest97974"
aws_glue_catalog_database.named_test_resource: Creating...
aws_glue_catalog_database.named_test_resource: Creation complete after 1s [id=632902152528:turbottest97974]
aws_glue_catalog_table.named_test_resource: Creating...
aws_glue_catalog_table.named_test_resource: Creation complete after 1s [id=632902152528:turbottest97974:turbottest97974]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_region = "us-east-1"
database_name = "turbottest97974"
resource_aka = "arn:aws:glue:us-east-1:632902152528:table/turbottest97974/turbottest97974"
resource_name = "turbottest97974"

Running SQL query: test-get-query.sql
[
  {
    "catalog_id": "632902152528",
    "description": "integration testing",
    "name": "turbottest97974"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "catalog_id": "632902152528",
    "description": "integration testing",
    "name": "turbottest97974"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "description": "integration testing",
    "name": "turbottest97974",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:table/turbottest97974/turbottest97974"
    ],
    "name": "turbottest97974",
    "region": "us-east-1",
    "title": "turbottest97974"
  }
]
✔ PASSED

POSTTEST: tests/aws_glue_catalog_table

TEARDOWN: tests/aws_glue_catalog_table

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_glue_crawler []

PRETEST: tests/aws_glue_crawler

TEST: tests/aws_glue_crawler
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_dynamodb_table.named_test_resource will be created
  + resource "aws_dynamodb_table" "named_test_resource" {
      + arn              = (known after apply)
      + billing_mode     = "PROVISIONED"
      + hash_key         = "userId"
      + id               = (known after apply)
      + name             = "turbottest20026"
      + read_capacity    = 20
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags             = {
          + "name" = "turbottest20026"
        }
      + tags_all         = {
          + "name" = "turbottest20026"
        }
      + write_capacity   = 20

      + attribute {
          + name = "userId"
          + type = "S"
        }

      + point_in_time_recovery {
          + enabled = (known after apply)
        }

      + server_side_encryption {
          + enabled     = (known after apply)
          + kms_key_arn = (known after apply)
        }

      + ttl {
          + attribute_name = (known after apply)
          + enabled        = (known after apply)
        }
    }

  # aws_glue_catalog_database.named_test_resource will be created
  + resource "aws_glue_catalog_database" "named_test_resource" {
      + arn          = (known after apply)
      + catalog_id   = (known after apply)
      + id           = (known after apply)
      + location_uri = (known after apply)
      + name         = "turbottest20026"

      + create_table_default_permission {
          + permissions = (known after apply)

          + principal {
              + data_lake_principal_identifier = (known after apply)
            }
        }
    }

  # aws_glue_crawler.named_test_resource will be created
  + resource "aws_glue_crawler" "named_test_resource" {
      + arn           = (known after apply)
      + database_name = "turbottest20026"
      + description   = "integration testing"
      + id            = (known after apply)
      + name          = "turbottest20026"
      + role          = (known after apply)
      + tags_all      = (known after apply)

      + dynamodb_target {
          + path     = "turbottest20026"
          + scan_all = true
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "glue.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest20026"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_account   = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest20026"
aws_iam_role.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 1s [id=turbottest20026]
aws_glue_catalog_database.named_test_resource: Creating...
aws_glue_catalog_database.named_test_resource: Creation complete after 2s [id=632902152528:turbottest20026]
aws_dynamodb_table.named_test_resource: Creating...
aws_dynamodb_table.named_test_resource: Creation complete after 9s [id=turbottest20026]
aws_glue_crawler.named_test_resource: Creating...
aws_glue_crawler.named_test_resource: Creation complete after 1s [id=turbottest20026]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:glue:us-east-1:632902152528:crawler/turbottest20026"
resource_name = "turbottest20026"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:crawler/turbottest20026"
    ],
    "description": "integration testing",
    "name": "turbottest20026",
    "title": "turbottest20026"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "description": "integration testing",
    "name": "turbottest20026",
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest20026"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:crawler/turbottest20026"
    ],
    "name": "turbottest20026",
    "region": "us-east-1",
    "title": "turbottest20026"
  }
]
✔ PASSED

POSTTEST: tests/aws_glue_crawler

TEARDOWN: tests/aws_glue_crawler

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_glue_dev_endpoint []

PRETEST: tests/aws_glue_dev_endpoint

TEST: tests/aws_glue_dev_endpoint
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_glue_dev_endpoint.named_test_resource will be created
  + resource "aws_glue_dev_endpoint" "named_test_resource" {
      + arn                                    = (known after apply)
      + availability_zone                      = (known after apply)
      + failure_reason                         = (known after apply)
      + id                                     = (known after apply)
      + name                                   = "turbottest61828"
      + private_address                        = (known after apply)
      + public_address                         = (known after apply)
      + role_arn                               = (known after apply)
      + status                                 = (known after apply)
      + tags_all                               = (known after apply)
      + vpc_id                                 = (known after apply)
      + yarn_endpoint_address                  = (known after apply)
      + zeppelin_remote_spark_interpreter_port = (known after apply)
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "glue.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest61828"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.named_test_resource-AWSGlueServiceRole will be created
  + resource "aws_iam_role_policy_attachment" "named_test_resource-AWSGlueServiceRole" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
      + role       = "turbottest61828"
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_account   = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest61828"
  + status        = (known after apply)
aws_iam_role.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest61828]
aws_glue_dev_endpoint.named_test_resource: Creating...
aws_iam_role_policy_attachment.named_test_resource-AWSGlueServiceRole: Creating...
aws_iam_role_policy_attachment.named_test_resource-AWSGlueServiceRole: Creation complete after 1s [id=turbottest61828-20220620121242575700000001]
aws_glue_dev_endpoint.named_test_resource: Still creating... [10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [1m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [1m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [1m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [1m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [1m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [1m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [2m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [2m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [2m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [2m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [2m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [2m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [3m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [3m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [3m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [3m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [3m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [3m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [4m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [4m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [4m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [4m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [4m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [4m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [5m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [5m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [5m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [5m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [5m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [5m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [6m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [6m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [6m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [6m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [6m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [6m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [7m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [7m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [7m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [7m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [7m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [7m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [8m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [8m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [8m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [8m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [8m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [8m50s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [9m0s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [9m10s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [9m20s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [9m30s elapsed]
aws_glue_dev_endpoint.named_test_resource: Still creating... [9m40s elapsed]
aws_glue_dev_endpoint.named_test_resource: Creation complete after 9m49s [id=turbottest61828]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:glue:us-east-1:632902152528:devEndpoint/turbottest61828"
resource_name = "turbottest61828"
status = "READY"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_glue_dev_endpoint" does not exist (SQLSTATE 42P01)
{}
[
  {
    "arn": "arn:aws:glue:us-east-1:632902152528:devEndpoint/turbottest61828",
    "endpoint_name": "turbottest61828",
    "status": "READY",
    "title": "turbottest61828"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_glue_dev_endpoint" does not exist (SQLSTATE 42P01)
{}
[
  {
    "arn": "arn:aws:glue:us-east-1:632902152528:devEndpoint/turbottest61828",
    "endpoint_name": "turbottest61828",
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest61828"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_glue_dev_endpoint" does not exist (SQLSTATE 42P01)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_glue_dev_endpoint" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:glue:us-east-1:632902152528:devEndpoint/turbottest61828"
    ],
    "endpoint_name": "turbottest61828",
    "region": "us-east-1",
    "title": "turbottest61828"
  }
]

✘ FAILED

TEARDOWN: tests/aws_glue_dev_endpoint

SUMMARY:

✘ tests/aws_glue_dev_endpoint failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_detector []

PRETEST: tests/aws_guardduty_detector

TEST: tests/aws_guardduty_detector
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_name"    = "turbottest33191"
        }
    }

  # aws_guardduty_detector.named_test_resource will be created
  + resource "aws_guardduty_detector" "named_test_resource" {
      + account_id                   = (known after apply)
      + arn                          = (known after apply)
      + enable                       = true
      + finding_publishing_frequency = (known after apply)
      + id                           = (known after apply)
      + tags                         = {
          + "name" = "turbottest33191"
        }
      + tags_all                     = {
          + "name" = "turbottest33191"
        }

      + datasources {
          + kubernetes {
              + audit_logs {
                  + enable = (known after apply)
                }
            }

          + s3_logs {
              + enable = (known after apply)
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest33191"
aws_guardduty_detector.named_test_resource: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Creating GuardDuty Detector failed: BadRequestException: The request is rejected because a detector already exists for the current account.
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "8a9ec96d-e308-4eb6-b437-1a644c71c78d"
  },
  Message_: "The request is rejected because a detector already exists for the current account.",
  Type: "InvalidInputException"
}

  with aws_guardduty_detector.named_test_resource,
  on variables.tf line 51, in resource "aws_guardduty_detector" "named_test_resource":
  51: resource "aws_guardduty_detector" "named_test_resource" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_guardduty_detector

SUMMARY:

✘ tests/aws_guardduty_detector failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_filter []

PRETEST: tests/aws_guardduty_filter

TEST: tests/aws_guardduty_filter
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_guardduty_detector.primary will be created
  + resource "aws_guardduty_detector" "primary" {
      + account_id                   = (known after apply)
      + arn                          = (known after apply)
      + enable                       = true
      + finding_publishing_frequency = (known after apply)
      + id                           = (known after apply)
      + tags_all                     = (known after apply)

      + datasources {
          + kubernetes {
              + audit_logs {
                  + enable = (known after apply)
                }
            }

          + s3_logs {
              + enable = (known after apply)
            }
        }
    }

  # aws_guardduty_filter.named_test_resource will be created
  + resource "aws_guardduty_filter" "named_test_resource" {
      + action      = "ARCHIVE"
      + arn         = (known after apply)
      + detector_id = (known after apply)
      + id          = (known after apply)
      + name        = "MyFilter"
      + rank        = 1
      + tags_all    = (known after apply)

      + finding_criteria {
          + criterion {
              + equals     = [
                  + "eu-west-1",
                ]
              + field      = "region"
              + not_equals = []
            }
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + detector_id   = (known after apply)
  + filter_name   = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest25261"
aws_guardduty_detector.primary: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Creating GuardDuty Detector failed: BadRequestException: The request is rejected because a detector already exists for the current account.
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "492b3b32-bca2-49e4-ab9d-c05b2d017217"
  },
  Message_: "The request is rejected because a detector already exists for the current account.",
  Type: "InvalidInputException"
}

  with aws_guardduty_detector.primary,
  on variables.tf line 50, in resource "aws_guardduty_detector" "primary":
  50: resource "aws_guardduty_detector" "primary" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_guardduty_filter

SUMMARY:

✘ tests/aws_guardduty_filter failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_finding []

PRETEST: tests/aws_guardduty_finding

TEST: tests/aws_guardduty_finding
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.getInput will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "getInput"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_guardduty_finding/terraform/test/getFinding.json"
      + id             = (known after apply)
    }

  # data.local_file.listInput will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "listInput"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_guardduty_finding/terraform/test/listFinding.json"
      + id             = (known after apply)
    }

  # aws_guardduty_detector.named_test_resource will be created
  + resource "aws_guardduty_detector" "named_test_resource" {
      + account_id                   = (known after apply)
      + arn                          = (known after apply)
      + enable                       = true
      + finding_publishing_frequency = (known after apply)
      + id                           = (known after apply)
      + tags_all                     = (known after apply)

      + datasources {
          + kubernetes {
              + audit_logs {
                  + enable = (known after apply)
                }
            }

          + s3_logs {
              + enable = (known after apply)
            }
        }
    }

  # null_resource.get_resource will be created
  + resource "null_resource" "get_resource" {
      + id = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = (known after apply)
aws_guardduty_detector.named_test_resource: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Creating GuardDuty Detector failed: BadRequestException: The request is rejected because a detector already exists for the current account.
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "cb8cc165-e6bc-4464-8338-b45607cfad53"
  },
  Message_: "The request is rejected because a detector already exists for the current account.",
  Type: "InvalidInputException"
}

  with aws_guardduty_detector.named_test_resource,
  on variables.tf line 50, in resource "aws_guardduty_detector" "named_test_resource":
  50: resource "aws_guardduty_detector" "named_test_resource" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_guardduty_finding

SUMMARY:

✘ tests/aws_guardduty_finding failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_ipset []

PRETEST: tests/aws_guardduty_ipset

TEST: tests/aws_guardduty_ipset
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_guardduty_detector.primary will be created
  + resource "aws_guardduty_detector" "primary" {
      + account_id                   = (known after apply)
      + arn                          = (known after apply)
      + enable                       = true
      + finding_publishing_frequency = (known after apply)
      + id                           = (known after apply)
      + tags_all                     = (known after apply)

      + datasources {
          + kubernetes {
              + audit_logs {
                  + enable = (known after apply)
                }
            }

          + s3_logs {
              + enable = (known after apply)
            }
        }
    }

  # aws_guardduty_ipset.named_test_resource will be created
  + resource "aws_guardduty_ipset" "named_test_resource" {
      + activate    = true
      + arn         = (known after apply)
      + detector_id = (known after apply)
      + format      = "TXT"
      + id          = (known after apply)
      + location    = (known after apply)
      + name        = "turbottest20984"
      + tags_all    = (known after apply)
    }

  # aws_s3_bucket.bucket will be created
  + resource "aws_s3_bucket" "bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = "private"
      + arn                         = (known after apply)
      + bucket                      = (known after apply)
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_s3_bucket_object.MyIPSet will be created
  + resource "aws_s3_bucket_object" "MyIPSet" {
      + acl                    = "private"
      + bucket                 = (known after apply)
      + bucket_key_enabled     = (known after apply)
      + content                = <<-EOT
            10.0.0.0/8
        EOT
      + content_type           = (known after apply)
      + etag                   = (known after apply)
      + force_destroy          = false
      + id                     = (known after apply)
      + key                    = "MyIPSet"
      + kms_key_id             = (known after apply)
      + server_side_encryption = (known after apply)
      + storage_class          = (known after apply)
      + tags_all               = (known after apply)
      + version_id             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + detector_id   = (known after apply)
  + ipset_id      = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest20984"
aws_guardduty_detector.primary: Creating...
aws_s3_bucket.bucket: Creating...
aws_s3_bucket.bucket: Creation complete after 4s [id=terraform-20220620122412619600000001]
aws_s3_bucket_object.MyIPSet: Creating...
aws_s3_bucket_object.MyIPSet: Creation complete after 0s [id=MyIPSet]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_s3_bucket.bucket,
  on variables.tf line 55, in resource "aws_s3_bucket" "bucket":
  55:   acl = "private"

Use the aws_s3_bucket_acl resource instead

(and 8 more similar warnings elsewhere)

Error: Creating GuardDuty Detector failed: BadRequestException: The request is rejected because a detector already exists for the current account.
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "d0254539-c010-4b62-a526-f503455ecb91"
  },
  Message_: "The request is rejected because a detector already exists for the current account.",
  Type: "InvalidInputException"
}

  with aws_guardduty_detector.primary,
  on variables.tf line 50, in resource "aws_guardduty_detector" "primary":
  50: resource "aws_guardduty_detector" "primary" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_guardduty_ipset

SUMMARY:

✘ tests/aws_guardduty_ipset failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_member []

PRETEST: tests/aws_guardduty_member

TEST: tests/aws_guardduty_member
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_guardduty_detector.primary will be created
  + resource "aws_guardduty_detector" "primary" {
      + account_id                   = (known after apply)
      + arn                          = (known after apply)
      + enable                       = true
      + finding_publishing_frequency = (known after apply)
      + id                           = (known after apply)
      + tags_all                     = (known after apply)

      + datasources {
          + kubernetes {
              + audit_logs {
                  + enable = (known after apply)
                }
            }

          + s3_logs {
              + enable = (known after apply)
            }
        }
    }

  # aws_guardduty_member.member will be created
  + resource "aws_guardduty_member" "member" {
      + account_id          = "123456789012"
      + detector_id         = (known after apply)
      + email               = "required@example.com"
      + id                  = (known after apply)
      + relationship_status = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_partition     = "aws"
  + aws_region        = "us-west-1"
  + detector_id       = (known after apply)
  + email             = "required@example.com"
  + member_account_id = "123456789012"
aws_guardduty_detector.primary: Creating...
aws_guardduty_detector.primary: Creation complete after 1s [id=0ec0c08948a28a71b96e36749a671f4b]
aws_guardduty_member.member: Creating...
aws_guardduty_member.member: Creation complete after 1s [id=0ec0c08948a28a71b96e36749a671f4b:123456789012]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

aws_partition = "aws"
aws_region = "us-west-1"
detector_id = "0ec0c08948a28a71b96e36749a671f4b"
email = "required@example.com"
member_account_id = "123456789012"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_guardduty_member" does not exist (SQLSTATE 42P01)
{}
[
  {
    "detector_id": "0ec0c08948a28a71b96e36749a671f4b",
    "email": "required@example.com",
    "member_account_id": "123456789012"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_guardduty_member" does not exist (SQLSTATE 42P01)
{}
[
  {
    "detector_id": "0ec0c08948a28a71b96e36749a671f4b",
    "email": "required@example.com",
    "member_account_id": "123456789012"
  }
]

✘ FAILED

TEARDOWN: tests/aws_guardduty_member

SUMMARY:

✘ tests/aws_guardduty_member failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_publishing_destination []

PRETEST: tests/aws_guardduty_publishing_destination

TEST: tests/aws_guardduty_publishing_destination
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_iam_policy_document.bucket_pol will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "bucket_pol"  {
      + id   = (known after apply)
      + json = (known after apply)

      + statement {
          + actions   = [
              + "s3:PutObject",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "Allow PutObject"

          + principals {
              + identifiers = [
                  + "guardduty.amazonaws.com",
                ]
              + type        = "Service"
            }
        }
      + statement {
          + actions   = [
              + "s3:GetBucketLocation",
            ]
          + resources = [
              + (known after apply),
            ]
          + sid       = "Allow GetBucketLocation"

          + principals {
              + identifiers = [
                  + "guardduty.amazonaws.com",
                ]
              + type        = "Service"
            }
        }
    }

  # aws_guardduty_publishing_destination.named_test_resource will be created
  + resource "aws_guardduty_publishing_destination" "named_test_resource" {
      + destination_arn  = (known after apply)
      + destination_type = "S3"
      + detector_id      = "70bf45f3732c5faa66f200794fdf38ef"
      + id               = (known after apply)
      + kms_key_arn      = (known after apply)
    }

  # aws_kms_key.gd_key will be created
  + resource "aws_kms_key" "gd_key" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + deletion_window_in_days            = 7
      + description                        = "Temporary key for AccTest of TF"
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = (known after apply)
      + policy                             = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "kms:GenerateDataKey"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "guardduty.amazonaws.com"
                        }
                      + Resource  = "arn:aws:kms:us-east-1:632902152528:key/*"
                      + Sid       = "Allow GuardDuty to encrypt findings"
                    },
                  + {
                      + Action    = "kms:*"
                      + Effect    = "Allow"
                      + Principal = {
                          + AWS = "arn:aws:iam::632902152528:root"
                        }
                      + Resource  = "arn:aws:kms:us-east-1:632902152528:key/*"
                      + Sid       = "Allow all users to modify/delete key (test only)"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + tags_all                           = (known after apply)
    }

  # aws_s3_bucket.gd_bucket will be created
  + resource "aws_s3_bucket" "gd_bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest74203"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_s3_bucket_acl.gd_bucket_acl will be created
  + resource "aws_s3_bucket_acl" "gd_bucket_acl" {
      + acl    = "private"
      + bucket = (known after apply)
      + id     = (known after apply)

      + access_control_policy {
          + grant {
              + permission = (known after apply)

              + grantee {
                  + display_name  = (known after apply)
                  + email_address = (known after apply)
                  + id            = (known after apply)
                  + type          = (known after apply)
                  + uri           = (known after apply)
                }
            }

          + owner {
              + display_name = (known after apply)
              + id           = (known after apply)
            }
        }
    }

  # aws_s3_bucket_policy.gd_bucket_policy will be created
  + resource "aws_s3_bucket_policy" "gd_bucket_policy" {
      + bucket = (known after apply)
      + id     = (known after apply)
      + policy = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + detector_id   = (known after apply)
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest74203"
aws_kms_key.gd_key: Creating...
aws_s3_bucket.gd_bucket: Creating...
aws_s3_bucket.gd_bucket: Creation complete after 4s [id=turbottest74203]
data.aws_iam_policy_document.bucket_pol: Reading...
data.aws_iam_policy_document.bucket_pol: Read complete after 0s [id=751823065]
aws_s3_bucket_acl.gd_bucket_acl: Creating...
aws_s3_bucket_policy.gd_bucket_policy: Creating...
aws_s3_bucket_policy.gd_bucket_policy: Creation complete after 0s [id=turbottest74203]
aws_s3_bucket_acl.gd_bucket_acl: Creation complete after 0s [id=turbottest74203,private]
aws_kms_key.gd_key: Creation complete after 6s [id=cee90107-93de-4b6b-a7ff-088a7af0d03f]
aws_guardduty_publishing_destination.named_test_resource: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Creating GuardDuty publishing destination failed: BadRequestException: The request failed because a publishingDestination already exists with the destinationType value provided in the request.
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "4935032c-ddbf-4037-817a-6e3463d21adf"
  },
  Message_: "The request failed because a publishingDestination already exists with the destinationType value provided in the request.",
  Type: "InvalidInputException"
}

  with aws_guardduty_publishing_destination.named_test_resource,
  on variables.tf line 143, in resource "aws_guardduty_publishing_destination" "named_test_resource":
 143: resource "aws_guardduty_publishing_destination" "named_test_resource" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_guardduty_publishing_destination

SUMMARY:

✘ tests/aws_guardduty_publishing_destination failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_guardduty_threat_intel_set []

PRETEST: tests/aws_guardduty_threat_intel_set

TEST: tests/aws_guardduty_threat_intel_set
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_guardduty_detector.primary will be created
  + resource "aws_guardduty_detector" "primary" {
      + account_id                   = (known after apply)
      + arn                          = (known after apply)
      + enable                       = true
      + finding_publishing_frequency = (known after apply)
      + id                           = (known after apply)
      + tags_all                     = (known after apply)

      + datasources {
          + kubernetes {
              + audit_logs {
                  + enable = (known after apply)
                }
            }

          + s3_logs {
              + enable = (known after apply)
            }
        }
    }

  # aws_guardduty_threatintelset.named_test_resource will be created
  + resource "aws_guardduty_threatintelset" "named_test_resource" {
      + activate    = true
      + arn         = (known after apply)
      + detector_id = (known after apply)
      + format      = "TXT"
      + id          = (known after apply)
      + location    = (known after apply)
      + name        = "turbottest56356"
      + tags_all    = (known after apply)
    }

  # aws_s3_bucket.bucket will be created
  + resource "aws_s3_bucket" "bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = "private"
      + arn                         = (known after apply)
      + bucket                      = (known after apply)
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_s3_bucket_object.MyThreatIntelSet will be created
  + resource "aws_s3_bucket_object" "MyThreatIntelSet" {
      + acl                    = "private"
      + bucket                 = (known after apply)
      + bucket_key_enabled     = (known after apply)
      + content                = <<-EOT
            10.0.0.0/8
        EOT
      + content_type           = (known after apply)
      + etag                   = (known after apply)
      + force_destroy          = false
      + id                     = (known after apply)
      + key                    = "MyThreatIntelSet"
      + kms_key_id             = (known after apply)
      + server_side_encryption = (known after apply)
      + storage_class          = (known after apply)
      + tags_all               = (known after apply)
      + version_id             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + detector_id   = (known after apply)
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest56356"
aws_guardduty_detector.primary: Creating...
aws_s3_bucket.bucket: Creating...
aws_s3_bucket.bucket: Creation complete after 4s [id=terraform-20220620122556818300000001]
aws_s3_bucket_object.MyThreatIntelSet: Creating...
aws_s3_bucket_object.MyThreatIntelSet: Creation complete after 1s [id=MyThreatIntelSet]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_s3_bucket.bucket,
  on variables.tf line 55, in resource "aws_s3_bucket" "bucket":
  55:   acl = "private"

Use the aws_s3_bucket_acl resource instead

(and 8 more similar warnings elsewhere)

Error: Creating GuardDuty Detector failed: BadRequestException: The request is rejected because a detector already exists for the current account.
{
  RespMetadata: {
    StatusCode: 400,
    RequestID: "539b15d4-b7e4-4d19-be23-2cbbba4d7c1d"
  },
  Message_: "The request is rejected because a detector already exists for the current account.",
  Type: "InvalidInputException"
}

  with aws_guardduty_detector.primary,
  on variables.tf line 50, in resource "aws_guardduty_detector" "primary":
  50: resource "aws_guardduty_detector" "primary" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_guardduty_threat_intel_set

SUMMARY:

✘ tests/aws_guardduty_threat_intel_set failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_access_advisor []

PRETEST: tests/aws_iam_access_advisor

TEST: tests/aws_iam_access_advisor
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_account   = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + user_arn      = "arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f"
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws sts get-caller-identity --profile default"]
null_resource.named_test_resource (local-exec): {
null_resource.named_test_resource (local-exec):     "UserId": "AROAZGW7IOFIGPYKYQY53:i-0665a65b1a1c2b64f",
null_resource.named_test_resource (local-exec):     "Account": "632902152528",
null_resource.named_test_resource (local-exec):     "Arn": "arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f"
null_resource.named_test_resource (local-exec): }
null_resource.named_test_resource: Creation complete after 1s [id=2668818830536593320]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
user_arn = "arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f"

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = InvalidInput: Invalid Entity Arn: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not supported.
	status code: 400, request id: 625c9cbd-14c3-460b-817c-1b11407d2d54 (SQLSTATE HV000)
{}
[
  {
    "last_authenticated_entity": "arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f",
    "partition": "aws",
    "principal_arn": "arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f",
    "region": "global",
    "service_name": "AWS Security Token Service",
    "service_namespace": "sts"
  }
]

✘ FAILED

TEARDOWN: tests/aws_iam_access_advisor

SUMMARY:

✘ tests/aws_iam_access_advisor failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_access_key []

PRETEST: tests/aws_iam_access_key

TEST: tests/aws_iam_access_key
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_name"    = "turbottest8953"
        }
    }

  # aws_iam_access_key.named_test_resource will be created
  + resource "aws_iam_access_key" "named_test_resource" {
      + create_date                    = (known after apply)
      + encrypted_secret               = (known after apply)
      + encrypted_ses_smtp_password_v4 = (known after apply)
      + id                             = (known after apply)
      + key_fingerprint                = (known after apply)
      + secret                         = (sensitive value)
      + ses_smtp_password_v4           = (sensitive value)
      + status                         = "Active"
      + user                           = "turbottest8953"
    }

  # aws_iam_user.named_test_resource will be created
  + resource "aws_iam_user" "named_test_resource" {
      + arn           = (known after apply)
      + force_destroy = false
      + id            = (known after apply)
      + name          = "turbottest8953"
      + path          = "/"
      + tags          = {
          + "name" = "turbottest8953"
        }
      + tags_all      = {
          + "name" = "turbottest8953"
        }
      + unique_id     = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + user_name     = "turbottest8953"
aws_iam_user.named_test_resource: Creating...
aws_iam_user.named_test_resource: Creation complete after 1s [id=turbottest8953]
aws_iam_access_key.named_test_resource: Creating...
aws_iam_access_key.named_test_resource: Creation complete after 1s [id=AKIAZGW7IOFIHWPPDY66]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=7dd19bb5a75752c89931bd5e4b25ec171ea8a8415c19b28c21ff2f98e0686a96]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
resource_aka = "arn:aws:iam::632902152528:user/turbottest8953/accesskey/AKIAZGW7IOFIHWPPDY66"
resource_id = "AKIAZGW7IOFIHWPPDY66"
user_name = "turbottest8953"

Running SQL query: test-get-query.sql
[
  {
    "access_key_id": "AKIAZGW7IOFIHWPPDY66",
    "status": "Active",
    "user_name": "turbottest8953"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "access_key_id": "AKIAZGW7IOFIHWPPDY66",
    "status": "Active",
    "user_name": "turbottest8953"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:iam::632902152528:user/turbottest8953/accesskey/AKIAZGW7IOFIHWPPDY66"
    ],
    "partition": "aws",
    "region": "global",
    "title": "AKIAZGW7IOFIHWPPDY66"
  }
]
✔ PASSED

POSTTEST: tests/aws_iam_access_key

TEARDOWN: tests/aws_iam_access_key

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_account_password_policy []

PRETEST: tests/aws_iam_account_password_policy

TEST: tests/aws_iam_account_password_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_iam_account_password_policy/terraform/test/output.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + allow_users_to_change_password = (known after apply)
  + aws_account                    = "632902152528"
  + aws_partition                  = "aws"
  + aws_region                     = "us-east-1"
  + expire_passwords               = (known after apply)
  + minimum_password_length        = (known after apply)
  + require_lowercase_characters   = (known after apply)
  + require_numbers                = (known after apply)
  + require_symbols                = (known after apply)
  + require_uppercase_characters   = (known after apply)
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws iam get-account-password-policy --output json --profile default --region us-east-1 > /tmp/tests/aws_iam_account_password_policy/terraform/test/output.json"]
null_resource.named_test_resource: Creation complete after 1s [id=6684880552930831458]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=757be6e81af982e1b75c14ad90333fa46fe8815d]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

allow_users_to_change_password = false
aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
expire_passwords = false
minimum_password_length = 6
require_lowercase_characters = false
require_numbers = false
require_symbols = false
require_uppercase_characters = false

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "allow_users_to_change_password": false,
    "expire_passwords": false,
    "minimum_password_length": 6,
    "partition": "aws",
    "region": "global",
    "require_lowercase_characters": false,
    "require_numbers": false,
    "require_symbols": false,
    "require_uppercase_characters": false
  }
]
✔ PASSED

POSTTEST: tests/aws_iam_account_password_policy

TEARDOWN: tests/aws_iam_account_password_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_account_summary []

PRETEST: tests/aws_iam_account_summary

TEST: tests/aws_iam_account_summary
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_iam_account_summary/terraform/test/account_summary.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + access_keys_per_user_quota           = (known after apply)
  + account_access_keys_present          = (known after apply)
  + account_mfa_enabled                  = (known after apply)
  + account_signing_certificates_present = (known after apply)
  + assume_role_policy_size_quota        = (known after apply)
  + attached_policies_per_group_quota    = (known after apply)
  + attached_policies_per_role_quota     = (known after apply)
  + attached_policies_per_user_quota     = (known after apply)
  + aws_account                          = "632902152528"
  + aws_partition                        = "aws"
  + aws_region                           = "us-east-1"
  + global_endpoint_token_version        = (known after apply)
  + group_policy_size_quota              = (known after apply)
  + groups                               = (known after apply)
  + groups_per_user_quota                = (known after apply)
  + groups_quota                         = (known after apply)
  + instance_profiles                    = (known after apply)
  + instance_profiles_quota              = (known after apply)
  + mfa_devices                          = (known after apply)
  + mfa_devices_in_use                   = (known after apply)
  + policies                             = (known after apply)
  + policies_quota                       = (known after apply)
  + policy_size_quota                    = (known after apply)
  + policy_versions_in_use               = (known after apply)
  + policy_versions_in_use_quota         = (known after apply)
  + providers                            = (known after apply)
  + role_policy_size_quota               = (known after apply)
  + roles                                = (known after apply)
  + roles_quota                          = (known after apply)
  + server_certificates                  = (known after apply)
  + server_certificates_quota            = (known after apply)
  + signing_certificates_per_user_quota  = (known after apply)
  + user_policy_size_quota               = (known after apply)
  + users                                = (known after apply)
  + users_quota                          = (known after apply)
  + versions_per_policy_quota            = (known after apply)
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws iam get-account-summary --output json --profile default --region us-east-1 > /tmp/tests/aws_iam_account_summary/terraform/test/account_summary.json"]
null_resource.named_test_resource: Creation complete after 2s [id=8237676649316580770]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=5006bbb6feb62ee3cab3ea84190ad655603511ff]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

access_keys_per_user_quota = 2
account_access_keys_present = 1
account_mfa_enabled = false
account_signing_certificates_present = 0
assume_role_policy_size_quota = 2048
attached_policies_per_group_quota = 10
attached_policies_per_role_quota = 10
attached_policies_per_user_quota = 10
aws_account = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
global_endpoint_token_version = 1
group_policy_size_quota = 5120
groups = 11
groups_per_user_quota = 10
groups_quota = 300
instance_profiles = 17
instance_profiles_quota = 1000
mfa_devices = 2
mfa_devices_in_use = 0
policies = 75
policies_quota = 1500
policy_size_quota = 6144
policy_versions_in_use = 140
policy_versions_in_use_quota = 10000
providers = 2
role_policy_size_quota = 10240
roles = 145
roles_quota = 1000
server_certificates = 1
server_certificates_quota = 20
signing_certificates_per_user_quota = 2
user_policy_size_quota = 2048
users = 17
users_quota = 5000
versions_per_policy_quota = 5

Running SQL query: test-get-query.sql
[
  {
    "_ctx": {
      "connection_name": "aws"
    },
    "access_keys_per_user_quota": 2,
    "account_access_keys_present": 1,
    "access_keys_per_user_quota": "2",
    "account_access_keys_present": "1",
    "account_id": "632902152528",
    "account_mfa_enabled": false,
    "account_signing_certificates_present": 0,
    "assume_role_policy_size_quota": 2048,
    "attached_policies_per_group_quota": 10,
    "attached_policies_per_role_quota": 10,
    "attached_policies_per_user_quota": 10,
    "global_endpoint_token_version": 1,
    "group_policy_size_quota": 5120,
    "groups": 11,
    "groups_per_user_quota": 10,
    "groups_quota": 300,
    "instance_profiles": 17,
    "instance_profiles_quota": 1000,
    "mfa_devices": 2,
    "mfa_devices_in_use": 0,
    "account_mfa_enabled": "false",
    "account_signing_certificates_present": "0",
    "assume_role_policy_size_quota": "2048",
    "attached_policies_per_group_quota": "10",
    "attached_policies_per_role_quota": "10",
    "attached_policies_per_user_quota": "10",
    "global_endpoint_token_version": "1",
    "group_policy_size_quota": "5120",
    "groups": "11",
    "groups_per_user_quota": "10",
    "groups_quota": "300",
    "instance_profiles": "17",
    "instance_profiles_quota": "1000",
    "mfa_devices": "2",
    "mfa_devices_in_use": "0",
    "partition": "aws",
    "policies": 75,
    "policies_quota": 1500,
    "policy_size_quota": 6144,
    "policy_versions_in_use": 140,
    "policy_versions_in_use_quota": 10000,
    "providers": 2,
    "policies": "75",
    "policies_quota": "1500",
    "policy_size_quota": "6144",
    "policy_versions_in_use": "140",
    "policy_versions_in_use_quota": "10000",
    "providers": "2",
    "region": "global",
    "role_policy_size_quota": 10240,
    "roles": 145,
    "roles_quota": 1000,
    "server_certificates": 1,
    "server_certificates_quota": 20,
    "signing_certificates_per_user_quota": 2,
    "user_policy_size_quota": 2048,
    "users": 17,
    "users_quota": 5000,
    "versions_per_policy_quota": 5
    "role_policy_size_quota": "10240",
    "roles": "145",
    "roles_quota": "1000",
    "server_certificates": "1",
    "server_certificates_quota": "20",
    "signing_certificates_per_user_quota": "2",
    "user_policy_size_quota": "2048",
    "users": "17",
    "users_quota": "5000",
    "versions_per_policy_quota": "5"
  }
]

✘ FAILED

Running SQL query: test-rootmfa-query.sql
[
  {
    "account_mfa_enabled": false
    "account_mfa_enabled": "false"
  }
]

✘ FAILED

TEARDOWN: tests/aws_iam_account_summary

SUMMARY:

✘ tests/aws_iam_account_summary failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_group []

PRETEST: tests/aws_iam_group

TEST: tests/aws_iam_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_group.named_test_resource will be created
  + resource "aws_iam_group" "named_test_resource" {
      + arn       = (known after apply)
      + id        = (known after apply)
      + name      = "turbottest66789"
      + path      = "/"
      + unique_id = (known after apply)
    }

  # aws_iam_group_policy.group_inline_policy will be created
  + resource "aws_iam_group_policy" "group_inline_policy" {
      + group  = "turbottest66789"
      + id     = (known after apply)
      + name   = "turbottest66789"
      + policy = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:Describe*",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
    }

  # aws_iam_group_policy_attachment.test_attach will be created
  + resource "aws_iam_group_policy_attachment" "test_attach" {
      + group      = "turbottest66789"
      + id         = (known after apply)
      + policy_arn = (known after apply)
    }

  # aws_iam_policy.policy will be created
  + resource "aws_iam_policy" "policy" {
      + arn         = (known after apply)
      + description = "A test policy"
      + id          = (known after apply)
      + name        = "turbottest66789"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:Describe*",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id          = "632902152528"
  + attached_policy_arn = (known after apply)
  + aws_partition       = "aws"
  + group_id            = (known after apply)
  + resource_aka        = (known after apply)
  + resource_name       = "turbottest66789"
aws_iam_group.named_test_resource: Creating...
aws_iam_policy.policy: Creating...
aws_iam_group.named_test_resource: Creation complete after 1s [id=turbottest66789]
aws_iam_group_policy.group_inline_policy: Creating...
aws_iam_group_policy.group_inline_policy: Creation complete after 1s [id=turbottest66789:turbottest66789]
aws_iam_policy.policy: Creation complete after 2s [id=arn:aws:iam::632902152528:policy/turbottest66789]
aws_iam_group_policy_attachment.test_attach: Creating...
aws_iam_group_policy_attachment.test_attach: Creation complete after 0s [id=turbottest66789-20220620122828878700000001]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
attached_policy_arn = "arn:aws:iam::632902152528:policy/turbottest66789"
aws_partition = "aws"
group_id = "AGPAZGW7IOFIMWFLCDAPK"
resource_aka = "arn:aws:iam::632902152528:group/turbottest66789"
resource_name = "turbottest66789"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:iam::632902152528:group/turbottest66789",
    "group_id": "AGPAZGW7IOFIMWFLCDAPK",
    "name": "turbottest66789",
    "partition": "aws",
    "path": "/"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = runtime error: invalid memory address or nil pointer dereference (SQLSTATE HV000)
{}
[
  {
    "attached_policy_arns": [
      "arn:aws:iam::632902152528:policy/turbottest66789"
    ],
    "group_id": "AGPAZGW7IOFIMWFLCDAPK",
    "inline_policies": [
      {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "turbottest66789"
      }
    ],
    "name": "turbottest66789",
    "users": null
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "group_id": "AGPAZGW7IOFIMWFLCDAPK",
    "name": "turbottest66789"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:iam::632902152528:group/turbottest66789"
    ],
    "partition": "aws",
    "region": "global",
    "title": "turbottest66789"
  }
]
✔ PASSED

TEARDOWN: tests/aws_iam_group

SUMMARY:

✘ tests/aws_iam_group failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_policy []

PRETEST: tests/aws_iam_policy

TEST: tests/aws_iam_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_policy.named_test_resource will be created
  + resource "aws_iam_policy" "named_test_resource" {
      + arn       = (known after apply)
      + id        = (known after apply)
      + name      = "turbottest62736"
      + path      = "/"
      + policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:Describe*",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id = (known after apply)
      + tags_all  = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest62736"
aws_iam_policy.named_test_resource: Creating...
aws_iam_policy.named_test_resource: Creation complete after 1s [id=arn:aws:iam::632902152528:policy/turbottest62736]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
resource_aka = "arn:aws:iam::632902152528:policy/turbottest62736"
resource_id = "arn:aws:iam::632902152528:policy/turbottest62736"
resource_name = "turbottest62736"

Running SQL query: query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:policy/turbottest62736",
    "name": "turbottest62736",
    "policy": {
      "Statement": [
        {
          "Action": [
            "ec2:Describe*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Statement": [
        {
          "Action": [
            "ec2:describe*"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ]
        }
      ],
      "Version": "2012-10-17"
    }
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:policy/turbottest62736",
    "attachment_count": 0,
    "default_version_id": "v1",
    "is_attachable": true,
    "name": "turbottest62736",
    "path": "/",
    "permissions_boundary_usage_count": 0,
    "title": "turbottest62736"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:iam::632902152528:policy/turbottest62736"
    ],
    "name": "turbottest62736",
    "policy": {
      "Statement": [
        {
          "Action": [
            "ec2:Describe*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Statement": [
        {
          "Action": [
            "ec2:describe*"
          ],
          "Effect": "Allow",
          "Resource": [
            "*"
          ]
        }
      ],
      "Version": "2012-10-17"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:policy/turbottest62736",
    "name": "turbottest62736"
  }
]
✔ PASSED

POSTTEST: tests/aws_iam_policy

TEARDOWN: tests/aws_iam_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_policy_simulator []

PRETEST: tests/aws_iam_policy_simulator

TEST: tests/aws_iam_policy_simulator
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_policy.policy1 will be created
  + resource "aws_iam_policy" "policy1" {
      + arn         = (known after apply)
      + description = "A test policy"
      + id          = (known after apply)
      + name        = "turbottest30013_1"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:Describe*",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_iam_policy.policy2 will be created
  + resource "aws_iam_policy" "policy2" {
      + arn         = (known after apply)
      + description = "A test policy"
      + id          = (known after apply)
      + name        = "turbottest30013_2"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:Describe*",
                        ]
                      + Effect   = "Deny"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_iam_user.user1 will be created
  + resource "aws_iam_user" "user1" {
      + arn           = (known after apply)
      + force_destroy = false
      + id            = (known after apply)
      + name          = "turbottest30013_1"
      + path          = "/"
      + tags          = {
          + "name" = "turbottest30013_1"
        }
      + tags_all      = {
          + "name" = "turbottest30013_1"
        }
      + unique_id     = (known after apply)
    }

  # aws_iam_user.user2 will be created
  + resource "aws_iam_user" "user2" {
      + arn           = (known after apply)
      + force_destroy = false
      + id            = (known after apply)
      + name          = "turbottest30013_2"
      + path          = "/"
      + tags          = {
          + "name" = "turbottest30013_2"
        }
      + tags_all      = {
          + "name" = "turbottest30013_2"
        }
      + unique_id     = (known after apply)
    }

  # aws_iam_user_policy_attachment.test-attach1 will be created
  + resource "aws_iam_user_policy_attachment" "test-attach1" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + user       = "turbottest30013_1"
    }

  # aws_iam_user_policy_attachment.test-attach2 will be created
  + resource "aws_iam_user_policy_attachment" "test-attach2" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + user       = "turbottest30013_2"
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + user1_arn = (known after apply)
  + user2_arn = (known after apply)
aws_iam_policy.policy2: Creating...
aws_iam_policy.policy1: Creating...
aws_iam_user.user2: Creating...
aws_iam_user.user1: Creating...
aws_iam_user.user1: Creation complete after 1s [id=turbottest30013_1]
aws_iam_user.user2: Creation complete after 1s [id=turbottest30013_2]
aws_iam_policy.policy2: Creation complete after 1s [id=arn:aws:iam::632902152528:policy/turbottest30013_2]
aws_iam_user_policy_attachment.test-attach2: Creating...
aws_iam_policy.policy1: Creation complete after 1s [id=arn:aws:iam::632902152528:policy/turbottest30013_1]
aws_iam_user_policy_attachment.test-attach1: Creating...
aws_iam_user_policy_attachment.test-attach2: Creation complete after 0s [id=turbottest30013_2-20220620122937005400000001]
aws_iam_user_policy_attachment.test-attach1: Creation complete after 0s [id=turbottest30013_1-20220620122937061600000002]

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

user1_arn = "arn:aws:iam::632902152528:user/turbottest30013_1"
user2_arn = "arn:aws:iam::632902152528:user/turbottest30013_2"

Running SQL query: test-allowed-query.sql
[
  {
    "decision": "allowed"
  }
]
✔ PASSED

Running SQL query: test-allowed1-query.sql
[
  {
    "decision": "allowed"
  }
]
✔ PASSED

Running SQL query: test-denied-query.sql
[
  {
    "decision": "explicitDeny"
  }
]
✔ PASSED

POSTTEST: tests/aws_iam_policy_simulator

TEARDOWN: tests/aws_iam_policy_simulator

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_role []

PRETEST: tests/aws_iam_role

TEST: tests/aws_iam_role
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_policy.named_test_resource will be created
  + resource "aws_iam_policy" "named_test_resource" {
      + arn         = (known after apply)
      + description = "A test policy"
      + id          = (known after apply)
      + name        = "turbottest78169"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "ec2:Describe*",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "test"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "Test Role"
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest78169"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags                  = {
          + "name" = "turbottest78169"
        }
      + tags_all              = {
          + "name" = "turbottest78169"
        }
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.test-attach will be created
  + resource "aws_iam_role_policy_attachment" "test-attach" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = "turbottest78169"
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id          = "632902152528"
  + attached_policy_arn = (known after apply)
  + aws_partition       = "aws"
  + resource_aka        = (known after apply)
  + resource_name       = "turbottest78169"
aws_iam_policy.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creating...
aws_iam_policy.named_test_resource: Creation complete after 1s [id=arn:aws:iam::632902152528:policy/turbottest78169]
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest78169]
aws_iam_role_policy_attachment.test-attach: Creating...
aws_iam_role_policy_attachment.test-attach: Creation complete after 0s [id=turbottest78169-20220620123010271500000001]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
attached_policy_arn = "arn:aws:iam::632902152528:policy/turbottest78169"
aws_partition = "aws"
resource_aka = "arn:aws:iam::632902152528:role/turbottest78169"
resource_name = "turbottest78169"

Running SQL query: query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:role/turbottest78169",
    "name": "turbottest78169"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = runtime error: invalid memory address or nil pointer dereference (SQLSTATE HV000)
{}
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:iam::632902152528:role/turbottest78169"
    ],
    "arn": "arn:aws:iam::632902152528:role/turbottest78169",
    "assume_role_policy": {
      "Statement": [
        {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
            "Service": "ec2.amazonaws.com"
          },
          "Sid": "test"
        }
      ],
      "Version": "2012-10-17"
    },
    "assume_role_policy_std": {
      "Statement": [
        {
          "Action": [
            "sts:assumerole"
          ],
          "Effect": "Allow",
          "Principal": {
            "Service": [
              "ec2.amazonaws.com"
            ]
          },
          "Sid": "test"
        }
      ],
      "Version": "2012-10-17"
    },
    "attached_policy_arns": [
      "arn:aws:iam::632902152528:policy/turbottest78169"
    ],
    "description": "Test Role",
    "inline_policies": null,
    "max_session_duration": 3600,
    "name": "turbottest78169",
    "partition": "aws",
    "path": "/",
    "permissions_boundary_arn": null,
    "permissions_boundary_type": null,
    "role_last_used_date": null,
    "role_last_used_region": null,
    "tags": {
      "name": "turbottest78169"
    },
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest78169"
      }
    ],
    "title": "turbottest78169"
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = runtime error: invalid memory address or nil pointer dereference (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:iam::632902152528:role/turbottest78169",
    "attached_policy_arns": [
      "arn:aws:iam::632902152528:policy/turbottest78169"
    ],
    "inline_policies": null,
    "name": "turbottest78169",
    "permissions_boundary_arn": null,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest78169"
      }
    ]
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:role/turbottest78169",
    "name": "turbottest78169"
  }
]
✔ PASSED

TEARDOWN: tests/aws_iam_role

SUMMARY:

✘ tests/aws_iam_role failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_server_certificate []

PRETEST: tests/aws_iam_server_certificate

TEST: tests/aws_iam_server_certificate
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_server_certificate.named_test_resource will be created
  + resource "aws_iam_server_certificate" "named_test_resource" {
      + arn              = (known after apply)
      + certificate_body = (known after apply)
      + expiration       = (known after apply)
      + id               = (known after apply)
      + name             = "turbottest74489"
      + path             = "/"
      + private_key      = (sensitive value)
      + tags_all         = (known after apply)
      + upload_date      = (known after apply)
    }

  # tls_private_key.example will be created
  + resource "tls_private_key" "example" {
      + algorithm                     = "RSA"
      + ecdsa_curve                   = "P224"
      + id                            = (known after apply)
      + private_key_openssh           = (sensitive value)
      + private_key_pem               = (sensitive value)
      + public_key_fingerprint_md5    = (known after apply)
      + public_key_fingerprint_sha256 = (known after apply)
      + public_key_openssh            = (known after apply)
      + public_key_pem                = (known after apply)
      + rsa_bits                      = 2048
    }

  # tls_self_signed_cert.example will be created
  + resource "tls_self_signed_cert" "example" {
      + allowed_uses          = [
          + "key_encipherment",
          + "digital_signature",
          + "server_auth",
        ]
      + cert_pem              = (known after apply)
      + early_renewal_hours   = 0
      + id                    = (known after apply)
      + key_algorithm         = "RSA"
      + private_key_pem       = (sensitive value)
      + ready_for_renewal     = true
      + validity_end_time     = (known after apply)
      + validity_period_hours = 12
      + validity_start_time   = (known after apply)

      + subject {
          + common_name  = "turbot.com"
          + organization = "Turbot HQ Pvt. Ltd."
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id       = "632902152528"
  + certificate_body = (known after apply)
  + resource_aka     = (known after apply)
  + resource_id      = (known after apply)
  + resource_name    = "turbottest74489"
tls_private_key.example: Creating...
tls_private_key.example: Creation complete after 0s [id=042ec367f73d53a423acb6836f0c7ce2278139d8]
tls_self_signed_cert.example: Creating...
tls_self_signed_cert.example: Creation complete after 0s [id=18040564674469757699394702837810333450]
aws_iam_server_certificate.named_test_resource: Creating...
aws_iam_server_certificate.named_test_resource: Creation complete after 1s [id=ASCAZGW7IOFIFVIWOUQO6]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with tls_self_signed_cert.example,
  on variables.tf line 55, in resource "tls_self_signed_cert" "example":
  55:   key_algorithm   = "RSA"

This is now ignored, as the key algorithm is inferred from the
`private_key_pem`.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
certificate_body = "-----BEGIN CERTIFICATE-----\\nMIIDJTCCAg2gAwIBAgIQDZJ8guB2aA9fXptA6bIHCjANBgkqhkiG9w0BAQsFADAz\\nMRwwGgYDVQQKExNUdXJib3QgSFEgUHZ0LiBMdGQuMRMwEQYDVQQDEwp0dXJib3Qu\\nY29tMB4XDTIyMDYyMDEyMzA0MVoXDTIyMDYyMTAwMzA0MVowMzEcMBoGA1UEChMT\\nVHVyYm90IEhRIFB2dC4gTHRkLjETMBEGA1UEAxMKdHVyYm90LmNvbTCCASIwDQYJ\\nKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN9nzvPWq8TjXULdPQ1vulJDlAAeSGsw\\nhqmmNasl9KgoXltuZ+jP3yZ5SU/XoU28b+9TzuKh4MDy1QQF4CV15vGJSWHEhwG/\\nuUWmKSgyUVvc7irLbCFX0SP+qvxS9MiNzQGNDTNkdJRQoUx6Op0frIfQXPedNsZx\\ndUhyU0tbVaB2n5pUyZGc23KMOziEr3Da99q7Vv+JXFH9xdFf6NXUprDW0SbKB7Lo\\nxUKtYR39yxuMpAU97CP4ZSsvoGvLXoF2jEJ70f4xS4Lb1nu7D3lPy46tbWELXMhd\\n3jwH+p00XstoUGtcFqY7PE5HWoQkY9QrkNMkOFzmSSxgdL9QkilJiPcCAwEAAaM1\\nMDMwDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB\\n/wQCMAAwDQYJKoZIhvcNAQELBQADggEBAIwHEb2n6vROMsx/sv/bJzrTfcYLCAMN\\n6Rfhj00azezC5xMZ4cY5DETfJmag+TcY8xsirs4yv2enIG+wxChAUMzTFxZiWlXs\\nbh3kDhk9LhHMmQiIcA6XyQeD7vq8OMtTrvWQm4KSdaNzyHAXD7r4NmG0NZfbHgUm\\nl+SBK3UhJX5rNKpMCwb0kxlXNfGoxU55bBLzGmOvNYm7BGSrNGXhERBZH8wm44XW\\nzHrqzR4BJ/8geLUx0I5OZHklJxIe2veNTxI20uc6Bcx0QOVrbr5M2gkm49XoHJXW\\nFwmEgoc9vjx/+VDssHXV/k8XiXcRSvrALcpq1YVMbanXLQCEpzvS2kc=\\n-----END CERTIFICATE-----\\n"
resource_aka = "arn:aws:iam::632902152528:server-certificate/turbottest74489"
resource_id = "ASCAZGW7IOFIFVIWOUQO6"
resource_name = "turbottest74489"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:iam::632902152528:server-certificate/turbottest74489",
    "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDJTCCAg2gAwIBAgIQDZJ8guB2aA9fXptA6bIHCjANBgkqhkiG9w0BAQsFADAz\nMRwwGgYDVQQKExNUdXJib3QgSFEgUHZ0LiBMdGQuMRMwEQYDVQQDEwp0dXJib3Qu\nY29tMB4XDTIyMDYyMDEyMzA0MVoXDTIyMDYyMTAwMzA0MVowMzEcMBoGA1UEChMT\nVHVyYm90IEhRIFB2dC4gTHRkLjETMBEGA1UEAxMKdHVyYm90LmNvbTCCASIwDQYJ\nKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN9nzvPWq8TjXULdPQ1vulJDlAAeSGsw\nhqmmNasl9KgoXltuZ+jP3yZ5SU/XoU28b+9TzuKh4MDy1QQF4CV15vGJSWHEhwG/\nuUWmKSgyUVvc7irLbCFX0SP+qvxS9MiNzQGNDTNkdJRQoUx6Op0frIfQXPedNsZx\ndUhyU0tbVaB2n5pUyZGc23KMOziEr3Da99q7Vv+JXFH9xdFf6NXUprDW0SbKB7Lo\nxUKtYR39yxuMpAU97CP4ZSsvoGvLXoF2jEJ70f4xS4Lb1nu7D3lPy46tbWELXMhd\n3jwH+p00XstoUGtcFqY7PE5HWoQkY9QrkNMkOFzmSSxgdL9QkilJiPcCAwEAAaM1\nMDMwDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB\n/wQCMAAwDQYJKoZIhvcNAQELBQADggEBAIwHEb2n6vROMsx/sv/bJzrTfcYLCAMN\n6Rfhj00azezC5xMZ4cY5DETfJmag+TcY8xsirs4yv2enIG+wxChAUMzTFxZiWlXs\nbh3kDhk9LhHMmQiIcA6XyQeD7vq8OMtTrvWQm4KSdaNzyHAXD7r4NmG0NZfbHgUm\nl+SBK3UhJX5rNKpMCwb0kxlXNfGoxU55bBLzGmOvNYm7BGSrNGXhERBZH8wm44XW\nzHrqzR4BJ/8geLUx0I5OZHklJxIe2veNTxI20uc6Bcx0QOVrbr5M2gkm49XoHJXW\nFwmEgoc9vjx/+VDssHXV/k8XiXcRSvrALcpq1YVMbanXLQCEpzvS2kc=\n-----END CERTIFICATE-----",
    "name": "turbottest74489",
    "path": "/",
    "region": "global"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:server-certificate/turbottest74489",
    "name": "turbottest74489"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:iam::632902152528:server-certificate/turbottest74489"
    ],
    "title": "turbottest74489"
  }
]
✔ PASSED

POSTTEST: tests/aws_iam_server_certificate

TEARDOWN: tests/aws_iam_server_certificate

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_iam_user []

PRETEST: tests/aws_iam_user

TEST: tests/aws_iam_user
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_user.named_test_resource will be created
  + resource "aws_iam_user" "named_test_resource" {
      + arn           = (known after apply)
      + force_destroy = false
      + id            = (known after apply)
      + name          = "turbottest85493"
      + path          = "/"
      + tags          = {
          + "name" = "turbottest85493"
        }
      + tags_all      = {
          + "name" = "turbottest85493"
        }
      + unique_id     = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest85493"
aws_iam_user.named_test_resource: Creating...
aws_iam_user.named_test_resource: Creation complete after 1s [id=turbottest85493]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
resource_aka = "arn:aws:iam::632902152528:user/turbottest85493"
resource_name = "turbottest85493"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:iam::632902152528:user/turbottest85493"
    ],
    "arn": "arn:aws:iam::632902152528:user/turbottest85493",
    "groups": null,
    "name": "turbottest85493",
    "partition": "aws",
    "path": "/",
    "title": "turbottest85493"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = runtime error: invalid memory address or nil pointer dereference (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:iam::632902152528:user/turbottest85493",
    "attached_policy_arns": null,
    "inline_policies": null,
    "mfa_enabled": false,
    "name": "turbottest85493",
    "permissions_boundary_arn": "",
    "permissions_boundary_type": "",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest85493"
      }
    ]
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:iam::632902152528:user/turbottest85493",
    "name": "turbottest85493"
  }
]
✔ PASSED

Running SQL query: test-turbot-fields-query.sql
[
  {
    "akas": [
      "arn:aws:iam::632902152528:user/turbottest85493"
    ],
    "region": "global",
    "tags": {
      "name": "turbottest85493"
    },
    "title": "turbottest85493"
  }
]
✔ PASSED

TEARDOWN: tests/aws_iam_user

SUMMARY:

✘ tests/aws_iam_user failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_identitystore_group []

PRETEST: tests/aws_identitystore_group

TEST: tests/aws_identitystore_group
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_identitystore_group


Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

SUMMARY:

✘ tests/aws_identitystore_group failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_identitystore_user []

PRETEST: tests/aws_identitystore_user

TEST: tests/aws_identitystore_user
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_identitystore_user


Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

SUMMARY:

✘ tests/aws_identitystore_user failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_inspector_assessment_target []

PRETEST: tests/aws_inspector_assessment_target

TEST: tests/aws_inspector_assessment_target
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_inspector_assessment_target.named_test_resource will be created
  + resource "aws_inspector_assessment_target" "named_test_resource" {
      + arn                = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest80427"
      + resource_group_arn = (known after apply)
    }

  # aws_inspector_resource_group.inspector_rg will be created
  + resource "aws_inspector_resource_group" "inspector_rg" {
      + arn  = (known after apply)
      + id   = (known after apply)
      + tags = {
          + "Env"  = "bar"
          + "Name" = "foo"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id         = "632902152528"
  + aws_partition      = "aws"
  + aws_region         = "us-east-1"
  + resource_aka       = (known after apply)
  + resource_group_aka = (known after apply)
  + resource_name      = "turbottest80427"
aws_inspector_resource_group.inspector_rg: Creating...
aws_inspector_resource_group.inspector_rg: Creation complete after 1s [id=arn:aws:inspector:us-east-1:632902152528:resourcegroup/0-JNMOqVab]
aws_inspector_assessment_target.named_test_resource: Creating...
aws_inspector_assessment_target.named_test_resource: Creation complete after 1s [id=arn:aws:inspector:us-east-1:632902152528:target/0-fGTkAfAZ]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:inspector:us-east-1:632902152528:target/0-fGTkAfAZ"
resource_group_aka = "arn:aws:inspector:us-east-1:632902152528:resourcegroup/0-JNMOqVab"
resource_name = "turbottest80427"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:inspector:us-east-1:632902152528:target/0-fGTkAfAZ",
    "name": "turbottest80427",
    "partition": "aws",
    "region": "us-east-1",
    "resource_group_arn": "arn:aws:inspector:us-east-1:632902152528:resourcegroup/0-JNMOqVab"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:inspector:us-east-1:632902152528:target/0-fGTkAfAZ",
    "name": "turbottest80427",
    "resource_group_arn": "arn:aws:inspector:us-east-1:632902152528:resourcegroup/0-JNMOqVab"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:inspector:us-east-1:632902152528:target/0-fGTkAfAZ"
    ],
    "title": "turbottest80427"
  }
]
✔ PASSED

POSTTEST: tests/aws_inspector_assessment_target

TEARDOWN: tests/aws_inspector_assessment_target

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_inspector_assessment_template []

PRETEST: tests/aws_inspector_assessment_template

TEST: tests/aws_inspector_assessment_template
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_inspector_assessment_target.assessment_target will be created
  + resource "aws_inspector_assessment_target" "assessment_target" {
      + arn                = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest78683"
      + resource_group_arn = (known after apply)
    }

  # aws_inspector_assessment_template.named_test_resource will be created
  + resource "aws_inspector_assessment_template" "named_test_resource" {
      + arn                = (known after apply)
      + duration           = 3600
      + id                 = (known after apply)
      + name               = "turbottest78683"
      + rules_package_arns = [
          + "arn:aws:inspector:us-east-1:316112463485:rulespackage/0-PmNV0Tcd",
          + "arn:aws:inspector:us-east-1:316112463485:rulespackage/0-R01qwB5Q",
          + "arn:aws:inspector:us-east-1:316112463485:rulespackage/0-gEjTy7T7",
          + "arn:aws:inspector:us-east-1:316112463485:rulespackage/0-rExsr2X8",
        ]
      + tags               = {
          + "foo" = "bar"
        }
      + tags_all           = {
          + "foo" = "bar"
        }
      + target_arn         = (known after apply)
    }

  # aws_inspector_resource_group.inspector_rg will be created
  + resource "aws_inspector_resource_group" "inspector_rg" {
      + arn  = (known after apply)
      + id   = (known after apply)
      + tags = {
          + "Env"  = "bar"
          + "Name" = "foo"
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id            = "632902152528"
  + assessment_target_aka = (known after apply)
  + aws_partition         = "aws"
  + aws_region            = "us-east-1"
  + resource_aka          = (known after apply)
  + resource_name         = "turbottest78683"
aws_inspector_resource_group.inspector_rg: Creating...
aws_inspector_resource_group.inspector_rg: Creation complete after 1s [id=arn:aws:inspector:us-east-1:632902152528:resourcegroup/0-azSAqqj3]
aws_inspector_assessment_target.assessment_target: Creating...
aws_inspector_assessment_target.assessment_target: Creation complete after 0s [id=arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM]
aws_inspector_assessment_template.named_test_resource: Creating...
aws_inspector_assessment_template.named_test_resource: Creation complete after 1s [id=arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM/template/0-NvRgTLnG]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
assessment_target_aka = "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM/template/0-NvRgTLnG"
resource_name = "turbottest78683"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM/template/0-NvRgTLnG",
    "assessment_run_count": 0,
    "assessment_target_arn": "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM",
    "duration_in_seconds": 3600,
    "last_assessment_run_arn": null,
    "name": "turbottest78683",
    "partition": "aws",
    "region": "us-east-1",
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      }
    ],
    "user_attributes_for_findings": []
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM/template/0-NvRgTLnG",
    "assessment_target_arn": "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM",
    "duration_in_seconds": 3600,
    "name": "turbottest78683"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:inspector:us-east-1:632902152528:target/0-TpPR3aiM/template/0-NvRgTLnG"
    ],
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest78683"
  }
]
✔ PASSED

POSTTEST: tests/aws_inspector_assessment_template

TEARDOWN: tests/aws_inspector_assessment_template

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_kinesisanalyticsv2_application []

PRETEST: tests/aws_kinesisanalyticsv2_application

TEST: tests/aws_kinesisanalyticsv2_application
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "kinesisanalytics.amazonaws.com"
                        }
                      + Sid       = "test"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest45457"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_kinesisanalyticsv2_application.named_test_resource will be created
  + resource "aws_kinesisanalyticsv2_application" "named_test_resource" {
      + arn                    = (known after apply)
      + create_timestamp       = (known after apply)
      + id                     = (known after apply)
      + last_update_timestamp  = (known after apply)
      + name                   = "turbottest45457"
      + runtime_environment    = "SQL-1_0"
      + service_execution_role = (known after apply)
      + status                 = (known after apply)
      + tags                   = {
          + "Name" = "turbottest45457"
        }
      + tags_all               = {
          + "Name" = "turbottest45457"
        }
      + version_id             = (known after apply)

      + application_configuration {
          + application_code_configuration {
              + code_content_type = (known after apply)

              + code_content {
                  + text_content = (known after apply)

                  + s3_content_location {
                      + bucket_arn     = (known after apply)
                      + file_key       = (known after apply)
                      + object_version = (known after apply)
                    }
                }
            }

          + application_snapshot_configuration {
              + snapshots_enabled = (known after apply)
            }

          + environment_properties {
              + property_group {
                  + property_group_id = (known after apply)
                  + property_map      = (known after apply)
                }
            }

          + flink_application_configuration {
              + checkpoint_configuration {
                  + checkpoint_interval           = (known after apply)
                  + checkpointing_enabled         = (known after apply)
                  + configuration_type            = (known after apply)
                  + min_pause_between_checkpoints = (known after apply)
                }

              + monitoring_configuration {
                  + configuration_type = (known after apply)
                  + log_level          = (known after apply)
                  + metrics_level      = (known after apply)
                }

              + parallelism_configuration {
                  + auto_scaling_enabled = (known after apply)
                  + configuration_type   = (known after apply)
                  + parallelism          = (known after apply)
                  + parallelism_per_kpu  = (known after apply)
                }
            }

          + run_configuration {
              + application_restore_configuration {
                  + application_restore_type = (known after apply)
                  + snapshot_name            = (known after apply)
                }

              + flink_run_configuration {
                  + allow_non_restored_state = (known after apply)
                }
            }

          + sql_application_configuration {
              + input {
                  + in_app_stream_names = (known after apply)
                  + input_id            = (known after apply)
                  + name_prefix         = (known after apply)

                  + input_parallelism {
                      + count = (known after apply)
                    }

                  + input_processing_configuration {
                      + input_lambda_processor {
                          + resource_arn = (known after apply)
                        }
                    }

                  + input_schema {
                      + record_encoding = (known after apply)

                      + record_column {
                          + mapping  = (known after apply)
                          + name     = (known after apply)
                          + sql_type = (known after apply)
                        }

                      + record_format {
                          + record_format_type = (known after apply)

                          + mapping_parameters {
                              + csv_mapping_parameters {
                                  + record_column_delimiter = (known after apply)
                                  + record_row_delimiter    = (known after apply)
                                }

                              + json_mapping_parameters {
                                  + record_row_path = (known after apply)
                                }
                            }
                        }
                    }

                  + input_starting_position_configuration {
                      + input_starting_position = (known after apply)
                    }

                  + kinesis_firehose_input {
                      + resource_arn = (known after apply)
                    }

                  + kinesis_streams_input {
                      + resource_arn = (known after apply)
                    }
                }

              + output {
                  + name      = (known after apply)
                  + output_id = (known after apply)

                  + destination_schema {
                      + record_format_type = (known after apply)
                    }

                  + kinesis_firehose_output {
                      + resource_arn = (known after apply)
                    }

                  + kinesis_streams_output {
                      + resource_arn = (known after apply)
                    }

                  + lambda_output {
                      + resource_arn = (known after apply)
                    }
                }

              + reference_data_source {
                  + reference_id = (known after apply)
                  + table_name   = (known after apply)

                  + reference_schema {
                      + record_encoding = (known after apply)

                      + record_column {
                          + mapping  = (known after apply)
                          + name     = (known after apply)
                          + sql_type = (known after apply)
                        }

                      + record_format {
                          + record_format_type = (known after apply)

                          + mapping_parameters {
                              + csv_mapping_parameters {
                                  + record_column_delimiter = (known after apply)
                                  + record_row_delimiter    = (known after apply)
                                }

                              + json_mapping_parameters {
                                  + record_row_path = (known after apply)
                                }
                            }
                        }
                    }

                  + s3_reference_data_source {
                      + bucket_arn = (known after apply)
                      + file_key   = (known after apply)
                    }
                }
            }

          + vpc_configuration {
              + security_group_ids   = (known after apply)
              + subnet_ids           = (known after apply)
              + vpc_configuration_id = (known after apply)
              + vpc_id               = (known after apply)
            }
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + aws_region             = "us-east-1"
  + resource_aka           = (known after apply)
  + resource_creation_time = (known after apply)
  + resource_id            = (known after apply)
  + resource_name          = "turbottest45457"
  + version                = (known after apply)
aws_iam_role.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest45457]
aws_kinesisanalyticsv2_application.named_test_resource: Creating...
aws_kinesisanalyticsv2_application.named_test_resource: Still creating... [10s elapsed]
aws_kinesisanalyticsv2_application.named_test_resource: Creation complete after 12s [id=arn:aws:kinesisanalytics:us-east-1:632902152528:application/turbottest45457]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:kinesisanalytics:us-east-1:632902152528:application/turbottest45457"
resource_creation_time = "2022-06-20T12:33:53Z"
resource_id = "arn:aws:kinesisanalytics:us-east-1:632902152528:application/turbottest45457"
resource_name = "turbottest45457"
version = 1

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:kinesisanalytics:us-east-1:632902152528:application/turbottest45457"
    ],
    "application_name": "turbottest45457",
    "application_version_id": 1,
    "partition": "aws",
    "runtime_environment": "SQL-1_0",
    "service_execution_role": "arn:aws:iam::632902152528:role/turbottest45457",
    "title": "turbottest45457"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "application_description": null,
    "cloud_watch_logging_option_descriptions": null,
    "service_execution_role": "arn:aws:iam::632902152528:role/turbottest45457",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest45457"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "application_arn": "arn:aws:kinesisanalytics:us-east-1:632902152528:application/turbottest45457",
    "application_name": "turbottest45457",
    "application_status": "READY",
    "application_version_id": 1
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:kinesisanalytics:us-east-1:632902152528:application/turbottest45457"
    ],
    "tags": {
      "Name": "turbottest45457"
    },
    "title": "turbottest45457"
  }
]
✔ PASSED

POSTTEST: tests/aws_kinesisanalyticsv2_application

TEARDOWN: tests/aws_kinesisanalyticsv2_application

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_kinesis_consumer []

PRETEST: tests/aws_kinesis_consumer

TEST: tests/aws_kinesis_consumer
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_kinesis_consumer/terraform/test/kinesis_stream.json"
      + id             = (known after apply)
    }

  # aws_kinesis_stream.named_test_resource will be created
  + resource "aws_kinesis_stream" "named_test_resource" {
      + arn                       = (known after apply)
      + encryption_type           = "NONE"
      + enforce_consumer_deletion = true
      + id                        = (known after apply)
      + name                      = "turbottest98521"
      + retention_period          = 24
      + shard_count               = 1
      + tags_all                  = (known after apply)

      + stream_mode_details {
          + stream_mode = (known after apply)
        }
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

  # null_resource.output_test_resource will be created
  + resource "null_resource" "output_test_resource" {
      + id = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest98521"
  + stream_aka    = (known after apply)
aws_kinesis_stream.named_test_resource: Creating...
aws_kinesis_stream.named_test_resource: Still creating... [10s elapsed]
aws_kinesis_stream.named_test_resource: Still creating... [20s elapsed]
aws_kinesis_stream.named_test_resource: Creation complete after 23s [id=arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521]
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws kinesis register-stream-consumer --stream-arn arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521 --consumer-name turbottest98521 --profile default --region  us-east-1"]
null_resource.named_test_resource (local-exec): {
null_resource.named_test_resource (local-exec):     "Consumer": {
null_resource.named_test_resource (local-exec):         "ConsumerName": "turbottest98521",
null_resource.named_test_resource (local-exec):         "ConsumerARN": "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521/consumer/turbottest98521:1655728501",
null_resource.named_test_resource (local-exec):         "ConsumerStatus": "CREATING",
null_resource.named_test_resource (local-exec):         "ConsumerCreationTimestamp": "2022-06-20T12:35:01+00:00"
null_resource.named_test_resource (local-exec):     }
null_resource.named_test_resource (local-exec): }
null_resource.named_test_resource: Creation complete after 2s [id=4660737798539563830]
null_resource.output_test_resource: Creating...
null_resource.output_test_resource: Provisioning with 'local-exec'...
null_resource.output_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws kinesis list-stream-consumers --stream-arn arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521 --output json --profile default --region us-east-1 > /tmp/tests/aws_kinesis_consumer/terraform/test/kinesis_stream.json"]
null_resource.output_test_resource: Creation complete after 1s [id=6220156004979524356]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=ecba6eec8d99685a7c49fc59f7c398d644f75858]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
resource_aka = "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521/consumer/turbottest98521:1655728501"
resource_name = "turbottest98521"
stream_aka = "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521"

Running SQL query: test-get-query.sql
[
  {
    "consumer_arn": "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521/consumer/turbottest98521:1655728501",
    "consumer_name": "turbottest98521",
    "consumer_status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "stream_arn": "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "consumer_arn": "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521/consumer/turbottest98521:1655728501",
    "consumer_name": "turbottest98521"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest98521/consumer/turbottest98521:1655728501"
    ],
    "region": "us-east-1",
    "title": "turbottest98521"
  }
]
✔ PASSED

POSTTEST: tests/aws_kinesis_consumer

TEARDOWN: tests/aws_kinesis_consumer

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_kinesis_firehose_delivery_stream []

PRETEST: tests/aws_kinesis_firehose_delivery_stream

TEST: tests/aws_kinesis_firehose_delivery_stream
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.firehose_role will be created
  + resource "aws_iam_role" "firehose_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "firehose.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "firehose_test_role"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_kinesis_firehose_delivery_stream.named_test_resource will be created
  + resource "aws_kinesis_firehose_delivery_stream" "named_test_resource" {
      + arn            = (known after apply)
      + destination    = "s3"
      + destination_id = (known after apply)
      + id             = (known after apply)
      + name           = "turbottest51258"
      + tags           = {
          + "Foo"  = "Bar"
          + "Name" = "turbottest51258"
        }
      + tags_all       = {
          + "Foo"  = "Bar"
          + "Name" = "turbottest51258"
        }
      + version_id     = (known after apply)

      + s3_configuration {
          + bucket_arn         = (known after apply)
          + buffer_interval    = 300
          + buffer_size        = 5
          + compression_format = "UNCOMPRESSED"
          + role_arn           = (known after apply)

          + cloudwatch_logging_options {
              + enabled         = (known after apply)
              + log_group_name  = (known after apply)
              + log_stream_name = (known after apply)
            }
        }
    }

  # aws_s3_bucket.firehose_bucket will be created
  + resource "aws_s3_bucket" "firehose_bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest51258"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "ap-southeast-1"
  + bucket_arn    = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest51258"
  + role_arn      = (known after apply)
aws_iam_role.firehose_role: Creating...
aws_s3_bucket.firehose_bucket: Creating...
aws_iam_role.firehose_role: Creation complete after 2s [id=firehose_test_role]
aws_s3_bucket.firehose_bucket: Creation complete after 3s [id=turbottest51258]
aws_kinesis_firehose_delivery_stream.named_test_resource: Creating...
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [10s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [20s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [30s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [40s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Creation complete after 44s [id=arn:aws:firehose:ap-southeast-1:632902152528:deliverystream/turbottest51258]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "ap-southeast-1"
bucket_arn = "arn:aws:s3:::turbottest51258"
resource_aka = "arn:aws:firehose:ap-southeast-1:632902152528:deliverystream/turbottest51258"
resource_name = "turbottest51258"
role_arn = "arn:aws:iam::632902152528:role/firehose_test_role"

Running SQL query: test-get-query.sql
null
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:firehose:ap-southeast-1:632902152528:deliverystream/turbottest51258",
    "delivery_stream_encryption_configuration": {
      "FailureDescription": null,
      "KeyARN": null,
      "KeyType": null,
      "Status": "DISABLED"
    },
    "delivery_stream_name": "turbottest51258",
    "delivery_stream_status": "ACTIVE",
    "delivery_stream_type": "DirectPut",
    "destinations": [
      {
        "DestinationId": "destinationId-000000000001",
        "ElasticsearchDestinationDescription": null,
        "ExtendedS3DestinationDescription": {
          "BucketARN": "arn:aws:s3:::turbottest51258",
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5
          },
          "CloudWatchLoggingOptions": {
            "Enabled": false,
            "LogGroupName": null,
            "LogStreamName": null
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": null,
          "DynamicPartitioningConfiguration": null,
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": null,
            "NoEncryptionConfig": "NoEncryption"
          },
          "ErrorOutputPrefix": null,
          "Prefix": "",
          "ProcessingConfiguration": null,
          "RoleARN": "arn:aws:iam::632902152528:role/firehose_test_role",
          "S3BackupDescription": null,
          "S3BackupMode": "Disabled"
        },
        "HttpEndpointDestinationDescription": null,
        "RedshiftDestinationDescription": null,
        "S3DestinationDescription": {
          "BucketARN": "arn:aws:s3:::turbottest51258",
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5
          },
          "CloudWatchLoggingOptions": {
            "Enabled": false,
            "LogGroupName": null,
            "LogStreamName": null
          },
          "CompressionFormat": "UNCOMPRESSED",
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": null,
            "NoEncryptionConfig": "NoEncryption"
          },
          "ErrorOutputPrefix": null,
          "Prefix": "",
          "RoleARN": "arn:aws:iam::632902152528:role/firehose_test_role"
        },
        "SplunkDestinationDescription": null
      }
    ],
    "failure_description": null,
    "has_more_destinations": false,
    "last_update_timestamp": null,
    "partition": "aws",
    "region": "ap-southeast-1",
    "source": null,
    "tags_src": [
      {
        "Key": "Foo",
        "Value": "Bar"
      },
      {
        "Key": "Name",
        "Value": "turbottest51258"
      }
    ],
    "version_id": "1"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
null
[
  {
    "arn": "arn:aws:firehose:ap-southeast-1:632902152528:deliverystream/turbottest51258",
    "delivery_stream_name": "turbottest51258",
    "delivery_stream_status": "ACTIVE",
    "version_id": "1"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
null
[
  {
    "akas": [
      "arn:aws:firehose:ap-southeast-1:632902152528:deliverystream/turbottest51258"
    ],
    "tags": {
      "Foo": "Bar",
      "Name": "turbottest51258"
    },
    "title": "turbottest51258"
  }
]

✘ FAILED

TEARDOWN: tests/aws_kinesis_firehose_delivery_stream

SUMMARY:

✘ tests/aws_kinesis_firehose_delivery_stream failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_kinesis_stream []

PRETEST: tests/aws_kinesis_stream

TEST: tests/aws_kinesis_stream
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_kinesis_stream.named_test_resource will be created
  + resource "aws_kinesis_stream" "named_test_resource" {
      + arn                       = (known after apply)
      + encryption_type           = "NONE"
      + enforce_consumer_deletion = false
      + id                        = (known after apply)
      + name                      = "turbottest8299"
      + retention_period          = 24
      + shard_count               = 1
      + tags                      = {
          + "foo" = "bar"
        }
      + tags_all                  = {
          + "foo" = "bar"
        }

      + stream_mode_details {
          + stream_mode = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest8299"
aws_kinesis_stream.named_test_resource: Creating...
aws_kinesis_stream.named_test_resource: Still creating... [10s elapsed]
aws_kinesis_stream.named_test_resource: Still creating... [20s elapsed]
aws_kinesis_stream.named_test_resource: Creation complete after 23s [id=arn:aws:kinesis:us-east-1:632902152528:stream/turbottest8299]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest8299"
resource_name = "turbottest8299"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "encryption_type": "NONE",
    "key_id": null,
    "partition": "aws",
    "region": "us-east-1",
    "retention_period_hours": 24,
    "stream_arn": "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest8299",
    "stream_name": "turbottest8299",
    "stream_status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "consumer_count": 0,
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "stream_arn": "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest8299",
    "stream_name": "turbottest8299",
    "stream_status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:kinesis:us-east-1:632902152528:stream/turbottest8299"
    ],
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest8299"
  }
]
✔ PASSED

POSTTEST: tests/aws_kinesis_stream

TEARDOWN: tests/aws_kinesis_stream

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_kinesis_video_stream []

PRETEST: tests/aws_kinesis_video_stream

TEST: tests/aws_kinesis_video_stream
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_kinesis_video_stream.named_test_resource will be created
  + resource "aws_kinesis_video_stream" "named_test_resource" {
      + arn                     = (known after apply)
      + creation_time           = (known after apply)
      + data_retention_in_hours = 24
      + device_name             = "kinesis-video-device-name"
      + id                      = (known after apply)
      + kms_key_id              = (known after apply)
      + media_type              = "video/h264"
      + name                    = "turbottest21120"
      + tags                    = {
          + "Foo"  = "Bar"
          + "Name" = "turbottest21120"
        }
      + tags_all                = {
          + "Foo"  = "Bar"
          + "Name" = "turbottest21120"
        }
      + version                 = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + aws_region             = "us-east-1"
  + resource_aka           = (known after apply)
  + resource_creation_time = (known after apply)
  + resource_id            = (known after apply)
  + resource_name          = "turbottest21120"
  + resource_version       = (known after apply)
aws_kinesis_video_stream.named_test_resource: Creating...
aws_kinesis_video_stream.named_test_resource: Still creating... [10s elapsed]
aws_kinesis_video_stream.named_test_resource: Creation complete after 12s [id=arn:aws:kinesisvideo:us-east-1:632902152528:stream/turbottest21120/1655728721925]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:kinesisvideo:us-east-1:632902152528:stream/turbottest21120/1655728721925"
resource_creation_time = "2022-06-20T12:38:41Z"
resource_id = "arn:aws:kinesisvideo:us-east-1:632902152528:stream/turbottest21120/1655728721925"
resource_name = "turbottest21120"
resource_version = "zHmuJhvx6EqeuvWZ3ZUc"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "data_retention_in_hours": 24,
    "device_name": "kinesis-video-device-name",
    "kms_key_id": "arn:aws:kms:us-east-1:632902152528:alias/aws/kinesisvideo",
    "media_type": "video/h264",
    "partition": "aws",
    "region": "us-east-1",
    "status": "ACTIVE",
    "stream_arn": "arn:aws:kinesisvideo:us-east-1:632902152528:stream/turbottest21120/1655728721925",
    "stream_name": "turbottest21120",
    "tags": {
      "Foo": "Bar",
      "Name": "turbottest21120"
    },
    "version": "zHmuJhvx6EqeuvWZ3ZUc"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "status": "ACTIVE",
    "stream_arn": "arn:aws:kinesisvideo:us-east-1:632902152528:stream/turbottest21120/1655728721925",
    "stream_name": "turbottest21120",
    "version": "zHmuJhvx6EqeuvWZ3ZUc"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:kinesisvideo:us-east-1:632902152528:stream/turbottest21120/1655728721925"
    ],
    "tags": {
      "Foo": "Bar",
      "Name": "turbottest21120"
    },
    "title": "turbottest21120"
  }
]
✔ PASSED

POSTTEST: tests/aws_kinesis_video_stream

TEARDOWN: tests/aws_kinesis_video_stream

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_kms_key []

PRETEST: tests/aws_kms_key

TEST: tests/aws_kms_key
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_kms_alias.key_alias will be created
  + resource "aws_kms_alias" "key_alias" {
      + arn            = (known after apply)
      + id             = (known after apply)
      + name           = "alias/my-key-alias_turbottest44838"
      + name_prefix    = (known after apply)
      + target_key_arn = (known after apply)
      + target_key_id  = (known after apply)
    }

  # aws_kms_key.named_test_resource will be created
  + resource "aws_kms_key" "named_test_resource" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + deletion_window_in_days            = 7
      + description                        = "var.resource_name"
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = (known after apply)
      + policy                             = (known after apply)
      + tags                               = {
          + "Name" = "turbottest44838"
        }
      + tags_all                           = {
          + "Name" = "turbottest44838"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + alias_arn     = (known after apply)
  + aws_partition = "aws"
  + key_title     = "alias/my-key-alias_turbottest44838"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest44838"
aws_kms_key.named_test_resource: Creating...
aws_kms_key.named_test_resource: Creation complete after 7s [id=498c7edc-6685-4b30-998a-a0fe99af4f6e]
aws_kms_alias.key_alias: Creating...
aws_kms_alias.key_alias: Creation complete after 0s [id=alias/my-key-alias_turbottest44838]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
alias_arn = "arn:aws:kms:us-east-1:632902152528:alias/my-key-alias_turbottest44838"
aws_partition = "aws"
key_title = "alias/my-key-alias_turbottest44838"
resource_aka = "arn:aws:kms:us-east-1:632902152528:key/498c7edc-6685-4b30-998a-a0fe99af4f6e"
resource_id = "498c7edc-6685-4b30-998a-a0fe99af4f6e"
resource_name = "turbottest44838"

Running SQL query: test-get-query.sql
[
  {
    "id": "498c7edc-6685-4b30-998a-a0fe99af4f6e"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "alias_arn": "arn:aws:kms:us-east-1:632902152528:alias/my-key-alias_turbottest44838",
    "alias_name": "alias/my-key-alias_turbottest44838",
    "alias_target_key_id": "498c7edc-6685-4b30-998a-a0fe99af4f6e",
    "key_manager": "CUSTOMER",
    "key_rotation_enabled": false,
    "policy": {
      "Id": "key-default-1",
      "Statement": [
        {
          "Action": "kms:*",
          "Effect": "Allow",
          "Principal": {
            "AWS": "arn:aws:iam::632902152528:root"
          },
          "Resource": "*",
          "Sid": "Enable IAM User Permissions"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Id": "key-default-1",
      "Statement": [
        {
          "Action": [
            "kms:*"
          ],
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "arn:aws:iam::632902152528:root"
            ]
          },
          "Resource": [
            "*"
          ],
          "Sid": "Enable IAM User Permissions"
        }
      ],
      "Version": "2012-10-17"
    },
    "tags_src": [
      {
        "TagKey": "Name",
        "TagValue": "turbottest44838"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "id": "498c7edc-6685-4b30-998a-a0fe99af4f6e"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:kms:us-east-1:632902152528:key/498c7edc-6685-4b30-998a-a0fe99af4f6e"
    ],
    "tags": {
      "Name": "turbottest44838"
    },
    "title": "498c7edc-6685-4b30-998a-a0fe99af4f6e"
  }
]
✔ PASSED

POSTTEST: tests/aws_kms_key

TEARDOWN: tests/aws_kms_key

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_lambda_alias []

PRETEST: tests/aws_lambda_alias

TEST: tests/aws_lambda_alias
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.archive_file.zip will be read during apply
  # (config refers to values not yet known)
 <= data "archive_file" "zip"  {
      + id                  = (known after apply)
      + output_base64sha256 = (known after apply)
      + output_md5          = (known after apply)
      + output_path         = "/tmp/tests/aws_lambda_alias/terraform/test/../../test.zip"
      + output_sha          = (known after apply)
      + output_size         = (known after apply)
      + source_file         = "/tmp/tests/aws_lambda_alias/terraform/test/../../test.py"
      + type                = "zip"
    }

  # aws_iam_role.aws_lambda_function will be created
  + resource "aws_iam_role" "aws_lambda_function" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "lambda.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest26661"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_lambda_alias.named_test_resource will be created
  + resource "aws_lambda_alias" "named_test_resource" {
      + arn              = (known after apply)
      + description      = "Test alias."
      + function_name    = "arn:aws:lambda:us-east-1:632902152528:function:turbottest26661"
      + function_version = "$LATEST"
      + id               = (known after apply)
      + invoke_arn       = (known after apply)
      + name             = "turbottest26661"
    }

  # aws_lambda_function.named_test_resource will be created
  + resource "aws_lambda_function" "named_test_resource" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "/tmp/tests/aws_lambda_alias/terraform/test/../../test.zip"
      + function_name                  = "turbottest26661"
      + handler                        = "test.test"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + reserved_concurrent_executions = -1
      + role                           = (known after apply)
      + runtime                        = "python3.7"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + source_code_hash               = (known after apply)
      + source_code_size               = (known after apply)
      + tags_all                       = (known after apply)
      + timeout                        = 3
      + version                        = (known after apply)

      + ephemeral_storage {
          + size = (known after apply)
        }

      + tracing_config {
          + mode = (known after apply)
        }
    }

  # local_file.python_file will be created
  + resource "local_file" "python_file" {
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/tests/aws_lambda_alias/terraform/test/../../test.py"
      + id                   = (known after apply)
      + sensitive_content    = (sensitive value)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest26661"
local_file.python_file: Creating...
local_file.python_file: Creation complete after 0s [id=dafb34f0ced09879d73bc8baab67226f2e264bac]
data.archive_file.zip: Reading...
data.archive_file.zip: Read complete after 0s [id=61b63ea8607a7af06fcaf35c5056569139ec72b8]
aws_iam_role.aws_lambda_function: Creating...
aws_iam_role.aws_lambda_function: Creation complete after 1s [id=turbottest26661]
aws_lambda_function.named_test_resource: Creating...
aws_lambda_function.named_test_resource: Still creating... [10s elapsed]
aws_lambda_function.named_test_resource: Creation complete after 15s [id=turbottest26661]
aws_lambda_alias.named_test_resource: Creating...
aws_lambda_alias.named_test_resource: Creation complete after 0s [id=arn:aws:lambda:us-east-1:632902152528:function:turbottest26661:turbottest26661]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with local_file.python_file,
  on variables.tf line 53, in resource "local_file" "python_file":
  53:   sensitive_content = "def test (event, context):\n\tprint ('This is a test for intergration testing to check creation of a lambda function')"

Use the `local_sensitive_file` resource instead.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:lambda:us-east-1:632902152528:function:turbottest26661:turbottest26661"
resource_name = "turbottest26661"

Running SQL query: query.sql
[
  {
    "function_name": "turbottest26661",
    "name": "turbottest26661"
  }
]
✔ PASSED

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:lambda:us-east-1:632902152528:function:turbottest26661:turbottest26661"
    ],
    "alias_arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest26661:turbottest26661",
    "description": "Test alias.",
    "function_name": "turbottest26661",
    "function_version": "$LATEST",
    "name": "turbottest26661",
    "title": "turbottest26661"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:lambda:us-east-1:632902152528:function:turbottest26661:turbottest26661"
    ],
    "alias_arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest26661:turbottest26661",
    "description": "Test alias.",
    "function_name": "turbottest26661",
    "function_version": "$LATEST",
    "name": "turbottest26661",
    "title": "turbottest26661"
  }
]
✔ PASSED

POSTTEST: tests/aws_lambda_alias

TEARDOWN: tests/aws_lambda_alias

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_lambda_function []

PRETEST: tests/aws_lambda_function

TEST: tests/aws_lambda_function
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.archive_file.zip will be read during apply
  # (config refers to values not yet known)
 <= data "archive_file" "zip"  {
      + id                  = (known after apply)
      + output_base64sha256 = (known after apply)
      + output_md5          = (known after apply)
      + output_path         = "/tmp/tests/aws_lambda_function/terraform/test/../../test.zip"
      + output_sha          = (known after apply)
      + output_size         = (known after apply)
      + source_file         = "/tmp/tests/aws_lambda_function/terraform/test/../../test.py"
      + type                = "zip"
    }

  # aws_iam_role.aws_lambda_function will be created
  + resource "aws_iam_role" "aws_lambda_function" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "lambda.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest28524"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_lambda_function.named_test_resource will be created
  + resource "aws_lambda_function" "named_test_resource" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "/tmp/tests/aws_lambda_function/terraform/test/../../test.zip"
      + function_name                  = "turbottest28524"
      + handler                        = "test.test"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + reserved_concurrent_executions = 2
      + role                           = (known after apply)
      + runtime                        = "python3.7"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + source_code_hash               = (known after apply)
      + source_code_size               = (known after apply)
      + tags                           = {
          + "name" = "turbottest28524"
        }
      + tags_all                       = {
          + "name" = "turbottest28524"
        }
      + timeout                        = 3
      + version                        = (known after apply)

      + ephemeral_storage {
          + size = (known after apply)
        }

      + tracing_config {
          + mode = (known after apply)
        }
    }

  # aws_lambda_permission.with_sns will be created
  + resource "aws_lambda_permission" "with_sns" {
      + action              = "lambda:InvokeFunction"
      + function_name       = "turbottest28524"
      + id                  = (known after apply)
      + principal           = "sns.amazonaws.com"
      + source_arn          = (known after apply)
      + statement_id        = "AllowExecutionFromSNS"
      + statement_id_prefix = (known after apply)
    }

  # aws_sns_topic.default will be created
  + resource "aws_sns_topic" "default" {
      + arn                         = (known after apply)
      + content_based_deduplication = false
      + fifo_topic                  = false
      + id                          = (known after apply)
      + name                        = "call-lambda-maybe"
      + name_prefix                 = (known after apply)
      + owner                       = (known after apply)
      + policy                      = (known after apply)
      + tags_all                    = (known after apply)
    }

  # local_file.python_file will be created
  + resource "local_file" "python_file" {
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/tests/aws_lambda_function/terraform/test/../../test.py"
      + id                   = (known after apply)
      + sensitive_content    = (sensitive value)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest28524"
  + sns_arn       = (known after apply)
local_file.python_file: Creating...
local_file.python_file: Creation complete after 0s [id=31a055a187e07d0bd8fca8ceb1f633aa4497fe53]
data.archive_file.zip: Reading...
data.archive_file.zip: Read complete after 0s [id=5268107579eeeec9b40269bd6c4ac9b5b42770e5]
aws_iam_role.aws_lambda_function: Creating...
aws_sns_topic.default: Creating...
aws_iam_role.aws_lambda_function: Creation complete after 2s [id=turbottest28524]
aws_lambda_function.named_test_resource: Creating...
aws_sns_topic.default: Creation complete after 2s [id=arn:aws:sns:us-east-1:632902152528:call-lambda-maybe]
aws_lambda_function.named_test_resource: Still creating... [10s elapsed]
aws_lambda_function.named_test_resource: Creation complete after 15s [id=turbottest28524]
aws_lambda_permission.with_sns: Creating...
aws_lambda_permission.with_sns: Creation complete after 0s [id=AllowExecutionFromSNS]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with local_file.python_file,
  on variables.tf line 53, in resource "local_file" "python_file":
  53:   sensitive_content = "def test (event, context):\n\tprint ('This is a test for integration testing to check creation of a lambda function')"

Use the `local_sensitive_file` resource instead.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:lambda:us-east-1:632902152528:function:turbottest28524"
resource_name = "turbottest28524"
sns_arn = "arn:aws:sns:us-east-1:632902152528:call-lambda-maybe"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest28524",
    "description": "",
    "name": "turbottest28524",
    "role": "arn:aws:iam::632902152528:role/turbottest28524",
    "version": "$LATEST"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "policy": {
      "Id": "default",
      "Statement": [
        {
          "Action": "lambda:InvokeFunction",
          "Condition": {
            "ArnLike": {
              "AWS:SourceArn": "arn:aws:sns:us-east-1:632902152528:call-lambda-maybe"
            }
          },
          "Effect": "Allow",
          "Principal": {
            "Service": "sns.amazonaws.com"
          },
          "Resource": "arn:aws:lambda:us-east-1:632902152528:function:turbottest28524",
          "Sid": "AllowExecutionFromSNS"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Id": "default",
      "Statement": [
        {
          "Action": [
            "lambda:invokefunction"
          ],
          "Condition": {
            "ArnLike": {
              "aws:sourcearn": [
                "arn:aws:sns:us-east-1:632902152528:call-lambda-maybe"
              ]
            }
          },
          "Effect": "Allow",
          "Principal": {
            "Service": [
              "sns.amazonaws.com"
            ]
          },
          "Resource": [
            "arn:aws:lambda:us-east-1:632902152528:function:turbottest28524"
          ],
          "Sid": "AllowExecutionFromSNS"
        }
      ],
      "Version": "2012-10-17"
    },
    "reserved_concurrent_executions": 2,
    "tags": {
      "name": "turbottest28524"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest28524",
    "description": "",
    "name": "turbottest28524",
    "role": "arn:aws:iam::632902152528:role/turbottest28524",
    "version": "$LATEST"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:lambda:us-east-1:632902152528:function:turbottest28524"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest28524"
    },
    "title": "turbottest28524"
  }
]
✔ PASSED

POSTTEST: tests/aws_lambda_function

TEARDOWN: tests/aws_lambda_function

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_lambda_version []

PRETEST: tests/aws_lambda_version

TEST: tests/aws_lambda_version
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.archive_file.zip will be read during apply
  # (config refers to values not yet known)
 <= data "archive_file" "zip"  {
      + id                  = (known after apply)
      + output_base64sha256 = (known after apply)
      + output_md5          = (known after apply)
      + output_path         = "/tmp/tests/aws_lambda_version/terraform/test/../../test.zip"
      + output_sha          = (known after apply)
      + output_size         = (known after apply)
      + source_file         = "/tmp/tests/aws_lambda_version/terraform/test/../../test.py"
      + type                = "zip"
    }

  # aws_iam_role.aws_lambda_function will be created
  + resource "aws_iam_role" "aws_lambda_function" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "lambda.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest51507"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_lambda_function.named_test_resource will be created
  + resource "aws_lambda_function" "named_test_resource" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "/tmp/tests/aws_lambda_version/terraform/test/../../test.zip"
      + function_name                  = "turbottest51507"
      + handler                        = "test.test"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + reserved_concurrent_executions = -1
      + role                           = (known after apply)
      + runtime                        = "python3.7"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + source_code_hash               = (known after apply)
      + source_code_size               = (known after apply)
      + tags                           = {
          + "name" = "turbottest51507"
        }
      + tags_all                       = {
          + "name" = "turbottest51507"
        }
      + timeout                        = 3
      + version                        = (known after apply)

      + ephemeral_storage {
          + size = (known after apply)
        }

      + tracing_config {
          + mode = (known after apply)
        }
    }

  # local_file.python_file will be created
  + resource "local_file" "python_file" {
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/tests/aws_lambda_version/terraform/test/../../test.py"
      + id                   = (known after apply)
      + sensitive_content    = (sensitive value)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest51507"
local_file.python_file: Creating...
local_file.python_file: Creation complete after 0s [id=31a055a187e07d0bd8fca8ceb1f633aa4497fe53]
data.archive_file.zip: Reading...
data.archive_file.zip: Read complete after 0s [id=5268107579eeeec9b40269bd6c4ac9b5b42770e5]
aws_iam_role.aws_lambda_function: Creating...
aws_iam_role.aws_lambda_function: Creation complete after 2s [id=turbottest51507]
aws_lambda_function.named_test_resource: Creating...
aws_lambda_function.named_test_resource: Still creating... [10s elapsed]
aws_lambda_function.named_test_resource: Creation complete after 15s [id=turbottest51507]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with local_file.python_file,
  on variables.tf line 53, in resource "local_file" "python_file":
  53:   sensitive_content = "def test (event, context):\n\tprint ('This is a test for integration testing to check creation of a lambda function')"

Use the `local_sensitive_file` resource instead.

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:lambda:us-east-1:632902152528:function:turbottest51507"
resource_name = "turbottest51507"

Running SQL query: query.sql
[
  {
    "arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest51507:$LATEST",
    "function_name": "turbottest51507",
    "version": "$LATEST"
  }
]
✔ PASSED

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:lambda:us-east-1:632902152528:function:turbottest51507:$LATEST"
    ],
    "arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest51507:$LATEST",
    "function_name": "turbottest51507",
    "runtime": "python3.7",
    "title": "$LATEST",
    "version": "$LATEST"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:lambda:us-east-1:632902152528:function:turbottest51507:$LATEST"
    ],
    "arn": "arn:aws:lambda:us-east-1:632902152528:function:turbottest51507:$LATEST",
    "function_name": "turbottest51507",
    "runtime": "python3.7",
    "title": "$LATEST",
    "version": "$LATEST"
  }
]
✔ PASSED

POSTTEST: tests/aws_lambda_version

TEARDOWN: tests/aws_lambda_version

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_macie2_classification_job []

PRETEST: tests/aws_macie2_classification_job

TEST: tests/aws_macie2_classification_job
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_macie2_account.test will be created
  + resource "aws_macie2_account" "test" {
      + created_at                   = (known after apply)
      + finding_publishing_frequency = "FIFTEEN_MINUTES"
      + id                           = (known after apply)
      + service_role                 = (known after apply)
      + status                       = "ENABLED"
      + updated_at                   = (known after apply)
    }

  # aws_macie2_classification_job.named_test_resource will be created
  + resource "aws_macie2_classification_job" "named_test_resource" {
      + created_at                 = (known after apply)
      + custom_data_identifier_ids = (known after apply)
      + description                = (known after apply)
      + id                         = (known after apply)
      + job_arn                    = (known after apply)
      + job_id                     = (known after apply)
      + job_status                 = (known after apply)
      + job_type                   = "ONE_TIME"
      + name                       = "turbottest63907"
      + name_prefix                = (known after apply)
      + sampling_percentage        = (known after apply)
      + tags                       = {
          + "Name" = "turbottest63907"
        }
      + tags_all                   = (known after apply)
      + user_paused_details        = (known after apply)

      + s3_job_definition {
          + bucket_definitions {
              + account_id = "632902152528"
              + buckets    = [
                  + "turbottest63907",
                ]
            }

          + scoping {
              + excludes {
                  + and {
                      + simple_scope_term {
                          + comparator = (known after apply)
                          + key        = (known after apply)
                          + values     = (known after apply)
                        }

                      + tag_scope_term {
                          + comparator = (known after apply)
                          + key        = (known after apply)
                          + target     = (known after apply)

                          + tag_values {
                              + key   = (known after apply)
                              + value = (known after apply)
                            }
                        }
                    }
                }

              + includes {
                  + and {
                      + simple_scope_term {
                          + comparator = (known after apply)
                          + key        = (known after apply)
                          + values     = (known after apply)
                        }

                      + tag_scope_term {
                          + comparator = (known after apply)
                          + key        = (known after apply)
                          + target     = (known after apply)

                          + tag_values {
                              + key   = (known after apply)
                              + value = (known after apply)
                            }
                        }
                    }
                }
            }
        }

      + schedule_frequency {
          + daily_schedule   = (known after apply)
          + monthly_schedule = (known after apply)
          + weekly_schedule  = (known after apply)
        }
    }

  # aws_s3_bucket.test will be created
  + resource "aws_s3_bucket" "test" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest63907"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_id   = (known after apply)
  + resource_name = "turbottest63907"
aws_macie2_account.test: Creating...
aws_s3_bucket.test: Creating...
aws_s3_bucket.test: Creation complete after 5s [id=turbottest63907]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error enabling Macie Account: ConflictException: Macie has already been enabled

  with aws_macie2_account.test,
  on variables.tf line 53, in resource "aws_macie2_account" "test":
  53: resource "aws_macie2_account" "test" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_macie2_classification_job

SUMMARY:

✘ tests/aws_macie2_classification_job failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_media_store_container []

PRETEST: tests/aws_media_store_container

TEST: tests/aws_media_store_container
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_media_store_container.named_test_resource will be created
  + resource "aws_media_store_container" "named_test_resource" {
      + arn      = (known after apply)
      + endpoint = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest32687"
      + tags     = {
          + "name" = "turbottest32687"
        }
      + tags_all = {
          + "name" = "turbottest32687"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + endpoint      = (known after apply)
  + resource_arn  = (known after apply)
  + resource_name = "turbottest32687"
aws_media_store_container.named_test_resource: Creating...
aws_media_store_container.named_test_resource: Still creating... [10s elapsed]
aws_media_store_container.named_test_resource: Still creating... [20s elapsed]
aws_media_store_container.named_test_resource: Still creating... [30s elapsed]
aws_media_store_container.named_test_resource: Still creating... [40s elapsed]
aws_media_store_container.named_test_resource: Creation complete after 42s [id=turbottest32687]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
endpoint = "https://jiiqb2ebhaex3e.data.mediastore.us-east-1.amazonaws.com"
resource_arn = "arn:aws:mediastore:us-east-1:632902152528:container/turbottest32687"
resource_name = "turbottest32687"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = 2 list calls returned errors:
 RequestError: send request failed
caused by: Post "https://mediastore.us-east-2.amazonaws.com/": dial tcp: lookup mediastore.us-east-2.amazonaws.com on 172.31.0.2:53: no such host
SerializationError: failed to unmarshal response error
	status code: 503, request id: 
caused by: UnmarshalError: error message missing (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:mediastore:us-east-1:632902152528:container/turbottest32687",
    "endpoint": "https://jiiqb2ebhaex3e.data.mediastore.us-east-1.amazonaws.com",
    "name": "turbottest32687",
    "tags": {
      "name": "turbottest32687"
    }
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = 2 list calls returned errors:
 RequestError: send request failed
caused by: Post "https://mediastore.us-east-2.amazonaws.com/": dial tcp: lookup mediastore.us-east-2.amazonaws.com on 172.31.0.2:53: no such host
SerializationError: failed to unmarshal response error
	status code: 503, request id: 
caused by: UnmarshalError: error message missing (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:mediastore:us-east-1:632902152528:container/turbottest32687",
    "endpoint": "https://jiiqb2ebhaex3e.data.mediastore.us-east-1.amazonaws.com",
    "name": "turbottest32687",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest32687"
      }
    ]
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Error: SerializationError: failed to unmarshal response error
	status code: 503, request id: 
caused by: UnmarshalError: error message missing (SQLSTATE HV000)
{}
[
  {
    "arn": "arn:aws:mediastore:us-east-1:632902152528:container/turbottest32687",
    "endpoint": "https://jiiqb2ebhaex3e.data.mediastore.us-east-1.amazonaws.com",
    "name": "turbottest32687",
    "tags": {
      "name": "turbottest32687"
    }
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = 2 list calls returned errors:
 SerializationError: failed to unmarshal response error
	status code: 503, request id: 
caused by: UnmarshalError: error message missing
RequestError: send request failed
caused by: Post "https://mediastore.us-east-2.amazonaws.com/": dial tcp: lookup mediastore.us-east-2.amazonaws.com on 172.31.0.2:53: no such host (SQLSTATE HV000)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = 2 list calls returned errors:
 SerializationError: failed to unmarshal response error
	status code: 503, request id: 
caused by: UnmarshalError: error message missing
RequestError: send request failed
caused by: Post "https://mediastore.us-east-2.amazonaws.com/": dial tcp: lookup mediastore.us-east-2.amazonaws.com on 172.31.0.2:53: no such host (SQLSTATE HV000)
{}
[
  {
    "akas": [
      "arn:aws:mediastore:us-east-1:632902152528:container/turbottest32687"
    ],
    "name": "turbottest32687",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest32687"
    },
    "title": "turbottest32687"
  }
]

✘ FAILED

TEARDOWN: tests/aws_media_store_container

SUMMARY:

✘ tests/aws_media_store_container failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_neptune_db_cluster []

PRETEST: tests/aws_neptune_db_cluster

TEST: tests/aws_neptune_db_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_neptune_cluster.named_test_resource will be created
  + resource "aws_neptune_cluster" "named_test_resource" {
      + allow_major_version_upgrade          = (known after apply)
      + apply_immediately                    = true
      + arn                                  = (known after apply)
      + availability_zones                   = (known after apply)
      + backup_retention_period              = 5
      + cluster_identifier                   = "turbottest97073"
      + cluster_identifier_prefix            = (known after apply)
      + cluster_members                      = (known after apply)
      + cluster_resource_id                  = (known after apply)
      + endpoint                             = (known after apply)
      + engine                               = "neptune"
      + engine_version                       = (known after apply)
      + hosted_zone_id                       = (known after apply)
      + iam_database_authentication_enabled  = false
      + id                                   = (known after apply)
      + kms_key_arn                          = (known after apply)
      + neptune_cluster_parameter_group_name = "default.neptune1"
      + neptune_subnet_group_name            = (known after apply)
      + port                                 = 8182
      + preferred_backup_window              = "07:00-09:00"
      + preferred_maintenance_window         = (known after apply)
      + reader_endpoint                      = (known after apply)
      + skip_final_snapshot                  = true
      + storage_encrypted                    = false
      + tags                                 = {
          + "name" = "turbottest97073"
        }
      + tags_all                             = {
          + "name" = "turbottest97073"
        }
      + vpc_security_group_ids               = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + endpoint      = (known after apply)
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest97073"
aws_neptune_cluster.named_test_resource: Creating...
aws_neptune_cluster.named_test_resource: Still creating... [10s elapsed]
aws_neptune_cluster.named_test_resource: Still creating... [20s elapsed]
aws_neptune_cluster.named_test_resource: Still creating... [30s elapsed]
aws_neptune_cluster.named_test_resource: Still creating... [40s elapsed]
aws_neptune_cluster.named_test_resource: Still creating... [50s elapsed]
aws_neptune_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_neptune_cluster.named_test_resource: Creation complete after 1m3s [id=turbottest97073]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
endpoint = "turbottest97073.cluster-cv1h1d6lt3di.us-east-1.neptune.amazonaws.com"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:cluster:turbottest97073"
resource_id = "cluster-K5TEKVPIA2A5OX3YWDGD6SNVKE"
resource_name = "turbottest97073"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster:turbottest97073",
    "copy_tags_to_snapshot": false,
    "cross_account_clone": false,
    "db_cluster_identifier": "turbottest97073",
    "db_cluster_resource_id": "cluster-K5TEKVPIA2A5OX3YWDGD6SNVKE",
    "db_subnet_group": "default",
    "deletion_protection": false,
    "endpoint": "turbottest97073.cluster-cv1h1d6lt3di.us-east-1.neptune.amazonaws.com",
    "engine": "neptune",
    "engine_version": "1.1.1.0",
    "iam_database_authentication_enabled": false,
    "multi_az": false,
    "port": 8182,
    "status": "available",
    "storage_encrypted": false,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest97073"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "allocated_storage": 1,
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster:turbottest97073",
    "copy_tags_to_snapshot": false,
    "cross_account_clone": false,
    "db_cluster_identifier": "turbottest97073",
    "db_subnet_group": "default",
    "deletion_protection": false,
    "endpoint": "turbottest97073.cluster-cv1h1d6lt3di.us-east-1.neptune.amazonaws.com",
    "engine": "neptune",
    "engine_version": "1.1.1.0",
    "iam_database_authentication_enabled": false,
    "multi_az": false,
    "port": 8182,
    "storage_encrypted": false,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest97073"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster:turbottest97073",
    "db_cluster_identifier": "turbottest97073",
    "db_cluster_resource_id": "cluster-K5TEKVPIA2A5OX3YWDGD6SNVKE"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:cluster:turbottest97073"
    ],
    "db_cluster_identifier": "turbottest97073",
    "tags": {
      "name": "turbottest97073"
    },
    "title": "turbottest97073"
  }
]
✔ PASSED

POSTTEST: tests/aws_neptune_db_cluster

TEARDOWN: tests/aws_neptune_db_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_opensearch_domain []

PRETEST: tests/aws_opensearch_domain

TEST: tests/aws_opensearch_domain
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_opensearch_domain.named_test_resource will be created
  + resource "aws_opensearch_domain" "named_test_resource" {
      + access_policies  = (known after apply)
      + advanced_options = (known after apply)
      + arn              = (known after apply)
      + domain_id        = (known after apply)
      + domain_name      = "turbottest58183"
      + endpoint         = (known after apply)
      + engine_version   = "OpenSearch_1.2"
      + id               = (known after apply)
      + kibana_endpoint  = (known after apply)
      + tags             = {
          + "Domain" = "TestDomain"
        }
      + tags_all         = {
          + "Domain" = "TestDomain"
        }

      + advanced_security_options {
          + enabled                        = (known after apply)
          + internal_user_database_enabled = (known after apply)

          + master_user_options {
              + master_user_arn      = (known after apply)
              + master_user_name     = (known after apply)
              + master_user_password = (sensitive value)
            }
        }

      + auto_tune_options {
          + desired_state       = (known after apply)
          + rollback_on_disable = (known after apply)

          + maintenance_schedule {
              + cron_expression_for_recurrence = (known after apply)
              + start_at                       = (known after apply)

              + duration {
                  + unit  = (known after apply)
                  + value = (known after apply)
                }
            }
        }

      + cluster_config {
          + dedicated_master_enabled = false
          + instance_count           = 1
          + instance_type            = "t3.small.search"

          + cold_storage_options {
              + enabled = (known after apply)
            }
        }

      + domain_endpoint_options {
          + custom_endpoint                 = (known after apply)
          + custom_endpoint_certificate_arn = (known after apply)
          + custom_endpoint_enabled         = (known after apply)
          + enforce_https                   = (known after apply)
          + tls_security_policy             = (known after apply)
        }

      + ebs_options {
          + ebs_enabled = true
          + volume_size = 10
          + volume_type = (known after apply)
        }

      + encrypt_at_rest {
          + enabled    = (known after apply)
          + kms_key_id = (known after apply)
        }

      + node_to_node_encryption {
          + enabled = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest58183"
aws_opensearch_domain.named_test_resource: Creating...
aws_opensearch_domain.named_test_resource: Still creating... [10s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [20s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [30s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [40s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [50s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [1m0s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [1m10s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [1m20s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [1m30s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [1m40s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [1m50s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [2m0s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [2m10s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [2m20s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [2m30s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [2m40s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [2m50s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [3m0s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [3m10s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [3m20s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [3m30s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [3m40s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [3m50s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [4m0s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [4m10s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [4m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [4m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [4m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [4m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [5m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [5m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [5m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [5m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [5m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [5m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [6m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [6m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [6m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [6m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [6m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [6m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [7m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [7m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [7m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [7m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [7m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [7m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [8m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [8m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [8m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [8m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [8m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [8m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [9m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [9m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [9m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [9m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [9m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [9m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [10m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [10m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [10m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [10m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [10m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [10m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [11m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [11m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [11m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [11m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [11m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [11m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [12m1s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [12m11s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [12m21s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [12m31s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [12m41s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [12m51s elapsed]
aws_opensearch_domain.named_test_resource: Still creating... [13m1s elapsed]
aws_opensearch_domain.named_test_resource: Creation complete after 13m7s [id=arn:aws:es:us-east-1:632902152528:domain/turbottest58183]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:es:us-east-1:632902152528:domain/turbottest58183"
resource_name = "turbottest58183"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest58183"
    ],
    "domain_name": "turbottest58183",
    "ebs_options": {
      "EBSEnabled": true,
      "Iops": null,
      "VolumeSize": 10,
      "VolumeType": "gp2"
    },
    "engine_version": "OpenSearch_1.2",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest58183"
    ],
    "domain_name": "turbottest58183",
    "ebs_options": {
      "EBSEnabled": true,
      "Iops": null,
      "VolumeSize": 10,
      "VolumeType": "gp2"
    },
    "engine_version": "OpenSearch_1.2",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest58183"
    ],
    "domain_name": "turbottest58183",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:es:us-east-1:632902152528:domain/turbottest58183"
    ],
    "title": "turbottest58183"
  }
]
✔ PASSED

POSTTEST: tests/aws_opensearch_domain

TEARDOWN: tests/aws_opensearch_domain

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_organizations_account []

PRETEST: tests/aws_organizations_account

TEST: tests/aws_organizations_account
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Iteration over null value

  on variables.tf line 76, in output "resource_name":
  76:   value = [for account in data.aws_organizations_organization.main.accounts : account.name if account.id == data.aws_organizations_organization.main.master_account_id][0]
    ├────────────────
    │ data.aws_organizations_organization.main.accounts is null

A null value cannot be used as the collection in a 'for' expression.

Error: Iteration over null value

  on variables.tf line 80, in output "resource_status":
  80:     value = [for account in data.aws_organizations_organization.main.accounts : account.status if account.id == data.aws_organizations_organization.main.master_account_id][0]
    ├────────────────
    │ data.aws_organizations_organization.main.accounts is null

A null value cannot be used as the collection in a 'for' expression.
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_organizations_account


Error: Iteration over null value

  on variables.tf line 76, in output "resource_name":
  76:   value = [for account in data.aws_organizations_organization.main.accounts : account.name if account.id == data.aws_organizations_organization.main.master_account_id][0]
    ├────────────────
    │ data.aws_organizations_organization.main.accounts is null

A null value cannot be used as the collection in a 'for' expression.

Error: Iteration over null value

  on variables.tf line 80, in output "resource_status":
  80:     value = [for account in data.aws_organizations_organization.main.accounts : account.status if account.id == data.aws_organizations_organization.main.master_account_id][0]
    ├────────────────
    │ data.aws_organizations_organization.main.accounts is null

A null value cannot be used as the collection in a 'for' expression.
SUMMARY:

✘ tests/aws_organizations_account failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_pinpoint_app []

PRETEST: tests/aws_pinpoint_app

TEST: tests/aws_pinpoint_app
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_pinpoint_app.named_test_resource will be created
  + resource "aws_pinpoint_app" "named_test_resource" {
      + application_id = (known after apply)
      + arn            = (known after apply)
      + id             = (known after apply)
      + name           = "turbottest39664"
      + tags           = {
          + "name" = "turbottest39664"
        }
      + tags_all       = {
          + "name" = "turbottest39664"
        }

      + limits {
          + maximum_duration    = 600
          + messages_per_second = 50
        }

      + quiet_time {
          + end   = "06:00"
          + start = "00:00"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest39664"
aws_pinpoint_app.named_test_resource: Creating...
aws_pinpoint_app.named_test_resource: Creation complete after 3s [id=4cb847a09b33498a986c047eb4368374]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on varables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:mobiletargeting:us-east-1:632902152528:apps/4cb847a09b33498a986c047eb4368374"
resource_id = "4cb847a09b33498a986c047eb4368374"
resource_name = "turbottest39664"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:mobiletargeting:us-east-1:632902152528:apps/4cb847a09b33498a986c047eb4368374",
    "id": "4cb847a09b33498a986c047eb4368374",
    "name": "turbottest39664"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:mobiletargeting:us-east-1:632902152528:apps/4cb847a09b33498a986c047eb4368374",
    "id": "4cb847a09b33498a986c047eb4368374"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:mobiletargeting:us-east-1:632902152528:apps/4cb847a09b33498a986c047eb4368374"
    ],
    "tags": {
      "name": "turbottest39664"
    },
    "title": "turbottest39664"
  }
]
✔ PASSED

POSTTEST: tests/aws_pinpoint_app

TEARDOWN: tests/aws_pinpoint_app

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ram_principal_association []

PRETEST: tests/aws_ram_principal_association

TEST: tests/aws_ram_principal_association
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ram_principal_association.named_test_resource will be created
  + resource "aws_ram_principal_association" "named_test_resource" {
      + id                 = (known after apply)
      + principal          = "111111111111"
      + resource_share_arn = (known after apply)
    }

  # aws_ram_resource_share.named_test_resource will be created
  + resource "aws_ram_resource_share" "named_test_resource" {
      + allow_external_principals = true
      + arn                       = (known after apply)
      + id                        = (known after apply)
      + name                      = "turbottest45761"
      + permission_arns           = (known after apply)
      + tags_all                  = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest45761"
aws_ram_resource_share.named_test_resource: Creating...
aws_ram_resource_share.named_test_resource: Creation complete after 3s [id=arn:aws:ram:us-east-1:632902152528:resource-share/f9d1c8f0-3887-4190-b062-909d9cbdd05f]
aws_ram_principal_association.named_test_resource: Creating...
aws_ram_principal_association.named_test_resource: Creation complete after 1s [id=arn:aws:ram:us-east-1:632902152528:resource-share/f9d1c8f0-3887-4190-b062-909d9cbdd05f,111111111111]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on varables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:ram:us-east-1:632902152528:resource-share/f9d1c8f0-3887-4190-b062-909d9cbdd05f"
resource_id = "111111111111"
resource_name = "turbottest45761"

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_ram_principal_association" does not exist (SQLSTATE 42P01)
{}
[
  {
    "associated_entity": "111111111111",
    "resource_share_arn": "arn:aws:ram:us-east-1:632902152528:resource-share/f9d1c8f0-3887-4190-b062-909d9cbdd05f",
    "resource_share_name": "turbottest45761"
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_ram_principal_association" does not exist (SQLSTATE 42P01)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_ram_principal_association" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:ram:us-east-1:632902152528:resource-share/f9d1c8f0-3887-4190-b062-909d9cbdd05f"
    ],
    "title": "turbottest45761"
  }
]

✘ FAILED

TEARDOWN: tests/aws_ram_principal_association

SUMMARY:

✘ tests/aws_ram_principal_association failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ram_resource_association []

PRETEST: tests/aws_ram_resource_association

TEST: tests/aws_ram_resource_association
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ram_resource_association.named_test_resource will be created
  + resource "aws_ram_resource_association" "named_test_resource" {
      + id                 = (known after apply)
      + resource_arn       = (known after apply)
      + resource_share_arn = (known after apply)
    }

  # aws_ram_resource_share.named_test_resource will be created
  + resource "aws_ram_resource_share" "named_test_resource" {
      + allow_external_principals = true
      + arn                       = (known after apply)
      + id                        = (known after apply)
      + name                      = "turbottest42107"
      + permission_arns           = (known after apply)
      + tags_all                  = (known after apply)
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.1.0/24"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest42107"
aws_vpc.named_test_resource: Creating...
aws_ram_resource_share.named_test_resource: Creating...
aws_ram_resource_share.named_test_resource: Creation complete after 2s [id=arn:aws:ram:us-east-1:632902152528:resource-share/3ca4e631-384a-4434-8b41-f74035b0b6db]
aws_vpc.named_test_resource: Creation complete after 3s [id=vpc-060135e8785597080]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-001df4559cdf3136e]
aws_ram_resource_association.named_test_resource: Creating...
aws_ram_resource_association.named_test_resource: Creation complete after 3s [id=arn:aws:ram:us-east-1:632902152528:resource-share/3ca4e631-384a-4434-8b41-f74035b0b6db,arn:aws:ec2:us-east-1:632902152528:subnet/subnet-001df4559cdf3136e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on varables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:ram:us-east-1:632902152528:resource-share/3ca4e631-384a-4434-8b41-f74035b0b6db"
resource_id = "arn:aws:ec2:us-east-1:632902152528:subnet/subnet-001df4559cdf3136e"
resource_name = "turbottest42107"

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_ram_resource_association" does not exist (SQLSTATE 42P01)
{}
[
  {
    "associated_entity": "arn:aws:ec2:us-east-1:632902152528:subnet/subnet-001df4559cdf3136e",
    "resource_share_arn": "arn:aws:ram:us-east-1:632902152528:resource-share/3ca4e631-384a-4434-8b41-f74035b0b6db",
    "resource_share_name": "turbottest42107"
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_ram_resource_association" does not exist (SQLSTATE 42P01)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_ram_resource_association" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:ram:us-east-1:632902152528:resource-share/3ca4e631-384a-4434-8b41-f74035b0b6db"
    ],
    "title": "turbottest42107"
  }
]

✘ FAILED

TEARDOWN: tests/aws_ram_resource_association

SUMMARY:

✘ tests/aws_ram_resource_association failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_cluster []

PRETEST: tests/aws_rds_db_cluster

TEST: tests/aws_rds_db_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_subnet_group.my_subnetgroup will be created
  + resource "aws_db_subnet_group" "my_subnetgroup" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest23769"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_rds_cluster.named_test_resource will be created
  + resource "aws_rds_cluster" "named_test_resource" {
      + allocated_storage               = (known after apply)
      + apply_immediately               = (known after apply)
      + arn                             = (known after apply)
      + availability_zones              = (known after apply)
      + backup_retention_period         = 1
      + cluster_identifier              = "turbottest23769"
      + cluster_identifier_prefix       = (known after apply)
      + cluster_members                 = (known after apply)
      + cluster_resource_id             = (known after apply)
      + copy_tags_to_snapshot           = false
      + database_name                   = (known after apply)
      + db_cluster_parameter_group_name = (known after apply)
      + db_subnet_group_name            = "turbottest23769"
      + enable_global_write_forwarding  = false
      + enable_http_endpoint            = false
      + endpoint                        = (known after apply)
      + engine                          = "aurora"
      + engine_mode                     = "provisioned"
      + engine_version                  = (known after apply)
      + engine_version_actual           = (known after apply)
      + hosted_zone_id                  = (known after apply)
      + iam_roles                       = (known after apply)
      + id                              = (known after apply)
      + kms_key_id                      = (known after apply)
      + master_password                 = (sensitive value)
      + master_username                 = "turbottest"
      + port                            = (known after apply)
      + preferred_backup_window         = (known after apply)
      + preferred_maintenance_window    = (known after apply)
      + reader_endpoint                 = (known after apply)
      + skip_final_snapshot             = true
      + storage_encrypted               = (known after apply)
      + tags                            = {
          + "name" = "turbottest23769"
        }
      + tags_all                        = {
          + "name" = "turbottest23769"
        }
      + vpc_security_group_ids          = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + endpoint      = (known after apply)
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest23769"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0565059c0c81a03cd]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-0c1c35fa963ea5246]
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0bf624eb9d1fb6d14]
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-030ebcfe0d9273738]
aws_db_subnet_group.my_subnetgroup: Creating...
aws_db_subnet_group.my_subnetgroup: Creation complete after 3s [id=turbottest23769]
aws_rds_cluster.named_test_resource: Creating...
aws_rds_cluster.named_test_resource: Still creating... [10s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [20s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [30s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [40s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [50s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_rds_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_rds_cluster.named_test_resource: Creation complete after 1m34s [id=turbottest23769]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
endpoint = "turbottest23769.cluster-cv1h1d6lt3di.us-east-1.rds.amazonaws.com"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:cluster:turbottest23769"
resource_id = "cluster-PXO3MAWNLWXOARHRI2HTFHOBJU"
resource_name = "turbottest23769"

Running SQL query: test-get-query.sql
[
  {
    "allocated_storage": 1,
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster:turbottest23769",
    "copy_tags_to_snapshot": false,
    "cross_account_clone": false,
    "db_cluster_identifier": "turbottest23769",
    "db_subnet_group": "turbottest23769",
    "deletion_protection": false,
    "endpoint": "turbottest23769.cluster-cv1h1d6lt3di.us-east-1.rds.amazonaws.com",
    "engine": "aurora",
    "engine_mode": "provisioned",
    "engine_version": "5.6.mysql_aurora.1.22.5",
    "global_write_forwarding_requested": false,
    "http_endpoint_enabled": false,
    "iam_database_authentication_enabled": false,
    "master_user_name": "turbottest",
    "multi_az": false,
    "port": 3306,
    "resource_id": "cluster-PXO3MAWNLWXOARHRI2HTFHOBJU",
    "storage_encrypted": false,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest23769"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "allocated_storage": 1,
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster:turbottest23769",
    "copy_tags_to_snapshot": false,
    "cross_account_clone": false,
    "db_cluster_identifier": "turbottest23769",
    "db_subnet_group": "turbottest23769",
    "deletion_protection": false,
    "endpoint": "turbottest23769.cluster-cv1h1d6lt3di.us-east-1.rds.amazonaws.com",
    "engine": "aurora",
    "engine_mode": "provisioned",
    "engine_version": "5.6.mysql_aurora.1.22.5",
    "global_write_forwarding_requested": false,
    "http_endpoint_enabled": false,
    "iam_database_authentication_enabled": false,
    "master_user_name": "turbottest",
    "multi_az": false,
    "port": 3306,
    "resource_id": "cluster-PXO3MAWNLWXOARHRI2HTFHOBJU",
    "storage_encrypted": false,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest23769"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster:turbottest23769",
    "db_cluster_identifier": "turbottest23769",
    "resource_id": "cluster-PXO3MAWNLWXOARHRI2HTFHOBJU"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:cluster:turbottest23769"
    ],
    "db_cluster_identifier": "turbottest23769",
    "tags": {
      "name": "turbottest23769"
    },
    "title": "turbottest23769"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_cluster

TEARDOWN: tests/aws_rds_db_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_cluster_parameter_group []

PRETEST: tests/aws_rds_db_cluster_parameter_group

TEST: tests/aws_rds_db_cluster_parameter_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_rds_cluster_parameter_group.named_test_resource will be created
  + resource "aws_rds_cluster_parameter_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "Terraform created resource to verify table"
      + family      = "aurora5.6"
      + id          = (known after apply)
      + name        = "turbottest85035"
      + name_prefix = (known after apply)
      + tags        = {
          + "name" = "turbottest85035"
        }
      + tags_all    = {
          + "name" = "turbottest85035"
        }

      + parameter {
          + apply_method = "immediate"
          + name         = "character_set_client"
          + value        = "utf8"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest85035"
aws_rds_cluster_parameter_group.named_test_resource: Creating...
aws_rds_cluster_parameter_group.named_test_resource: Creation complete after 3s [id=turbottest85035]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:cluster-pg:turbottest85035"
resource_name = "turbottest85035"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster-pg:turbottest85035",
    "db_parameter_group_family": "aurora5.6",
    "description": "Terraform created resource to verify table",
    "name": "turbottest85035"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest85035",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest85035"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster-pg:turbottest85035",
    "name": "turbottest85035"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:cluster-pg:turbottest85035"
    ],
    "name": "turbottest85035",
    "tags": {
      "name": "turbottest85035"
    },
    "title": "turbottest85035"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_cluster_parameter_group

TEARDOWN: tests/aws_rds_db_cluster_parameter_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_cluster_snapshot []

PRETEST: tests/aws_rds_db_cluster_snapshot

TEST: tests/aws_rds_db_cluster_snapshot
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_cluster_snapshot.named_test_resource will be created
  + resource "aws_db_cluster_snapshot" "named_test_resource" {
      + allocated_storage              = (known after apply)
      + availability_zones             = (known after apply)
      + db_cluster_identifier          = (known after apply)
      + db_cluster_snapshot_arn        = (known after apply)
      + db_cluster_snapshot_identifier = "turbottest5680"
      + engine                         = (known after apply)
      + engine_version                 = (known after apply)
      + id                             = (known after apply)
      + kms_key_id                     = (known after apply)
      + license_model                  = (known after apply)
      + port                           = (known after apply)
      + snapshot_type                  = (known after apply)
      + source_db_cluster_snapshot_arn = (known after apply)
      + status                         = (known after apply)
      + storage_encrypted              = (known after apply)
      + tags                           = {
          + "name" = "turbottest5680"
        }
      + tags_all                       = {
          + "name" = "turbottest5680"
        }
      + vpc_id                         = (known after apply)
    }

  # aws_db_subnet_group.my_subnetgroup will be created
  + resource "aws_db_subnet_group" "my_subnetgroup" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest5680"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "name" = "turbottest5680"
        }
      + tags_all = {
          + "name" = "turbottest5680"
        }
      + vpc_id   = (known after apply)
    }

  # aws_rds_cluster.test_cluster will be created
  + resource "aws_rds_cluster" "test_cluster" {
      + allocated_storage               = (known after apply)
      + apply_immediately               = (known after apply)
      + arn                             = (known after apply)
      + availability_zones              = (known after apply)
      + backup_retention_period         = 1
      + cluster_identifier              = "turbottest5680"
      + cluster_identifier_prefix       = (known after apply)
      + cluster_members                 = (known after apply)
      + cluster_resource_id             = (known after apply)
      + copy_tags_to_snapshot           = false
      + database_name                   = (known after apply)
      + db_cluster_parameter_group_name = (known after apply)
      + db_subnet_group_name            = "turbottest5680"
      + enable_global_write_forwarding  = false
      + enable_http_endpoint            = false
      + endpoint                        = (known after apply)
      + engine                          = "aurora"
      + engine_mode                     = "provisioned"
      + engine_version                  = (known after apply)
      + engine_version_actual           = (known after apply)
      + hosted_zone_id                  = (known after apply)
      + iam_roles                       = (known after apply)
      + id                              = (known after apply)
      + kms_key_id                      = (known after apply)
      + master_password                 = (sensitive value)
      + master_username                 = "turbottest"
      + port                            = (known after apply)
      + preferred_backup_window         = (known after apply)
      + preferred_maintenance_window    = (known after apply)
      + reader_endpoint                 = (known after apply)
      + skip_final_snapshot             = true
      + storage_encrypted               = (known after apply)
      + tags                            = {
          + "name" = "turbottest5680"
        }
      + tags_all                        = {
          + "name" = "turbottest5680"
        }
      + vpc_security_group_ids          = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "name" = "turbottest5680"
        }
      + tags_all                                       = {
          + "name" = "turbottest5680"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "name" = "turbottest5680"
        }
      + tags_all                                       = {
          + "name" = "turbottest5680"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest5680"
        }
      + tags_all                             = {
          + "name" = "turbottest5680"
        }
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest5680"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0e2fdae88fe507512]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-07bbeb4b1d934b2d6]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creation complete after 2s [id=subnet-072caae3de1b04b33]
aws_subnet.my_subnet2: Creation complete after 2s [id=subnet-0d1026d412c8929f3]
aws_db_subnet_group.my_subnetgroup: Creating...
aws_db_subnet_group.my_subnetgroup: Creation complete after 2s [id=turbottest5680]
aws_rds_cluster.test_cluster: Creating...
aws_rds_cluster.test_cluster: Still creating... [10s elapsed]
aws_rds_cluster.test_cluster: Still creating... [20s elapsed]
aws_rds_cluster.test_cluster: Still creating... [30s elapsed]
aws_rds_cluster.test_cluster: Still creating... [40s elapsed]
aws_rds_cluster.test_cluster: Still creating... [50s elapsed]
aws_rds_cluster.test_cluster: Still creating... [1m0s elapsed]
aws_rds_cluster.test_cluster: Still creating... [1m10s elapsed]
aws_rds_cluster.test_cluster: Creation complete after 1m14s [id=turbottest5680]
aws_db_cluster_snapshot.named_test_resource: Creating...
aws_db_cluster_snapshot.named_test_resource: Still creating... [10s elapsed]
aws_db_cluster_snapshot.named_test_resource: Still creating... [20s elapsed]
aws_db_cluster_snapshot.named_test_resource: Creation complete after 26s [id=turbottest5680]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:cluster-snapshot:turbottest5680"
resource_name = "turbottest5680"
vpc_id = "vpc-0e2fdae88fe507512"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster-snapshot:turbottest5680",
    "db_cluster_identifier": "turbottest5680",
    "db_cluster_snapshot_identifier": "turbottest5680",
    "engine": "aurora",
    "engine_version": "5.6.mysql_aurora.1.22.5",
    "iam_database_authentication_enabled": false,
    "license_model": "aurora",
    "master_user_name": "turbottest",
    "port": 0,
    "storage_encrypted": false,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest5680"
      }
    ],
    "type": "manual",
    "vpc_id": "vpc-0e2fdae88fe507512"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "db_cluster_snapshot_attributes": [
      {
        "AttributeName": "restore",
        "AttributeValues": null
      }
    ],
    "db_cluster_snapshot_identifier": "turbottest5680"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:cluster-snapshot:turbottest5680",
    "db_cluster_identifier": "turbottest5680",
    "db_cluster_snapshot_identifier": "turbottest5680",
    "type": "manual"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:cluster-snapshot:turbottest5680"
    ],
    "db_cluster_snapshot_identifier": "turbottest5680",
    "tags": {
      "name": "turbottest5680"
    },
    "title": "turbottest5680"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_cluster_snapshot

TEARDOWN: tests/aws_rds_db_cluster_snapshot

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_event_subscription []

PRETEST: tests/aws_rds_db_event_subscription

TEST: tests/aws_rds_db_event_subscription
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_event_subscription.named_test_resource will be created
  + resource "aws_db_event_subscription" "named_test_resource" {
      + arn              = (known after apply)
      + customer_aws_id  = (known after apply)
      + enabled          = false
      + event_categories = [
          + "availability",
          + "deletion",
          + "failover",
          + "failure",
          + "low storage",
          + "maintenance",
          + "notification",
          + "read replica",
          + "recovery",
          + "restoration",
        ]
      + id               = (known after apply)
      + name             = "turbottest35201"
      + name_prefix      = (known after apply)
      + sns_topic        = (known after apply)
      + source_ids       = (known after apply)
      + source_type      = "db-instance"
      + tags_all         = (known after apply)
    }

  # aws_db_instance.named_test_resource will be created
  + resource "aws_db_instance" "named_test_resource" {
      + address                               = (known after apply)
      + allocated_storage                     = 5
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_name                               = (known after apply)
      + db_subnet_group_name                  = "turbottest35201"
      + delete_automated_backups              = true
      + endpoint                              = (known after apply)
      + engine                                = "mysql"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "turbottest35201"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.m5.large"
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + maintenance_window                    = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + name                                  = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = true
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_encrypted                     = true
      + storage_type                          = (known after apply)
      + tags                                  = {
          + "name" = "turbottest35201"
        }
      + tags_all                              = {
          + "name" = "turbottest35201"
        }
      + timezone                              = (known after apply)
      + username                              = "master"
      + vpc_security_group_ids                = (known after apply)
    }

  # aws_db_subnet_group.my_subnetgroup will be created
  + resource "aws_db_subnet_group" "my_subnetgroup" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest35201"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_sns_topic.named_test_resource will be created
  + resource "aws_sns_topic" "named_test_resource" {
      + arn                         = (known after apply)
      + content_based_deduplication = false
      + fifo_topic                  = false
      + id                          = (known after apply)
      + name                        = "turbottest35201"
      + name_prefix                 = (known after apply)
      + owner                       = (known after apply)
      + policy                      = (known after apply)
      + tags_all                    = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id      = "632902152528"
  + aws_partition   = "aws"
  + customer_aws_id = (known after apply)
  + region_name     = "us-east-1"
  + resource_aka    = (known after apply)
  + resource_id     = (known after apply)
  + resource_name   = "turbottest35201"
  + sns_topic_arn   = (known after apply)
aws_sns_topic.named_test_resource: Creating...
aws_vpc.my_vpc: Creating...
aws_sns_topic.named_test_resource: Creation complete after 2s [id=arn:aws:sns:us-east-1:632902152528:turbottest35201]
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0d5ca3d305213e324]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-086e2cf4400becd6b]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-012556c1468415c73]
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0c6e74ff7961ca023]
aws_db_subnet_group.my_subnetgroup: Creating...
aws_db_subnet_group.my_subnetgroup: Creation complete after 2s [id=turbottest35201]
aws_db_instance.named_test_resource: Creating...
aws_db_instance.named_test_resource: Still creating... [10s elapsed]
aws_db_instance.named_test_resource: Still creating... [20s elapsed]
aws_db_instance.named_test_resource: Still creating... [30s elapsed]
aws_db_instance.named_test_resource: Still creating... [40s elapsed]
aws_db_instance.named_test_resource: Still creating... [50s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m0s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m10s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m20s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m30s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m40s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m50s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m0s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m10s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m20s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m30s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m40s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m50s elapsed]
aws_db_instance.named_test_resource: Creation complete after 2m57s [id=turbottest35201]
aws_db_event_subscription.named_test_resource: Creating...
aws_db_event_subscription.named_test_resource: Still creating... [10s elapsed]
aws_db_event_subscription.named_test_resource: Still creating... [20s elapsed]
aws_db_event_subscription.named_test_resource: Still creating... [30s elapsed]
aws_db_event_subscription.named_test_resource: Creation complete after 31s [id=turbottest35201]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variable.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
customer_aws_id = "632902152528"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:es:turbottest35201"
resource_id = "turbottest35201"
resource_name = "turbottest35201"
sns_topic_arn = "arn:aws:sns:us-east-1:632902152528:turbottest35201"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:es:turbottest35201",
    "cust_subscription_id": "turbottest35201",
    "customer_aws_id": "632902152528",
    "enabled": false,
    "sns_topic_arn": "arn:aws:sns:us-east-1:632902152528:turbottest35201",
    "status": "active"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:es:turbottest35201",
    "cust_subscription_id": "turbottest35201",
    "enabled": false
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:es:turbottest35201"
    ],
    "cust_subscription_id": "turbottest35201",
    "title": "turbottest35201"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_event_subscription

TEARDOWN: tests/aws_rds_db_event_subscription

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_instance []

PRETEST: tests/aws_rds_db_instance

TEST: tests/aws_rds_db_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_instance.named_test_resource will be created
  + resource "aws_db_instance" "named_test_resource" {
      + address                               = (known after apply)
      + allocated_storage                     = 5
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_name                               = (known after apply)
      + db_subnet_group_name                  = "turbottest35575"
      + delete_automated_backups              = true
      + endpoint                              = (known after apply)
      + engine                                = "mysql"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = "turbottest35575"
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.m5.large"
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + maintenance_window                    = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + name                                  = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = true
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_encrypted                     = true
      + storage_type                          = (known after apply)
      + tags                                  = {
          + "name" = "turbottest35575"
        }
      + tags_all                              = {
          + "name" = "turbottest35575"
        }
      + timezone                              = (known after apply)
      + username                              = "master"
      + vpc_security_group_ids                = (known after apply)
    }

  # aws_db_subnet_group.my_subnetgroup will be created
  + resource "aws_db_subnet_group" "my_subnetgroup" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest35575"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest35575"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0d4948abe8219a67c]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-0052a8537f3907a08]
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-0b9a74accb0def000]
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-05812dad2aa1df123]
aws_db_subnet_group.my_subnetgroup: Creating...
aws_db_subnet_group.my_subnetgroup: Creation complete after 3s [id=turbottest35575]
aws_db_instance.named_test_resource: Creating...
aws_db_instance.named_test_resource: Still creating... [10s elapsed]
aws_db_instance.named_test_resource: Still creating... [20s elapsed]
aws_db_instance.named_test_resource: Still creating... [30s elapsed]
aws_db_instance.named_test_resource: Still creating... [40s elapsed]
aws_db_instance.named_test_resource: Still creating... [50s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m0s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m10s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m20s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m30s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m40s elapsed]
aws_db_instance.named_test_resource: Still creating... [1m50s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m0s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m10s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m20s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m30s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m40s elapsed]
aws_db_instance.named_test_resource: Still creating... [2m50s elapsed]
aws_db_instance.named_test_resource: Creation complete after 2m56s [id=turbottest35575]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:db:turbottest35575"
resource_id = "db-XLKJTXV24IEVIC4QRHWJWRX2P4"
resource_name = "turbottest35575"

Running SQL query: test-get-query.sql
[
  {
    "allocated_storage": 5,
    "arn": "arn:aws:rds:us-east-1:632902152528:db:turbottest35575",
    "auto_minor_version_upgrade": true,
    "class": "db.m5.large",
    "copy_tags_to_snapshot": false,
    "customer_owned_ip_enabled": false,
    "db_instance_identifier": "turbottest35575",
    "db_subnet_group_name": "turbottest35575",
    "deletion_protection": false,
    "endpoint_port": 3306,
    "engine": "mysql",
    "engine_version": "8.0.28",
    "engine_version": "8.0.27",
    "iam_database_authentication_enabled": false,
    "master_user_name": "master",
    "multi_az": false,
    "performance_insights_enabled": false,
    "port": 0,
    "publicly_accessible": false,
    "resource_id": "db-XLKJTXV24IEVIC4QRHWJWRX2P4",
    "storage_encrypted": true,
    "storage_type": "gp2",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest35575"
      }
    ]
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
[
  {
    "allocated_storage": 5,
    "arn": "arn:aws:rds:us-east-1:632902152528:db:turbottest35575",
    "auto_minor_version_upgrade": true,
    "class": "db.m5.large",
    "copy_tags_to_snapshot": false,
    "customer_owned_ip_enabled": false,
    "db_instance_identifier": "turbottest35575",
    "db_subnet_group_name": "turbottest35575",
    "deletion_protection": false,
    "endpoint_port": 3306,
    "engine": "mysql",
    "engine_version": "8.0.28",
    "engine_version": "8.0.27",
    "iam_database_authentication_enabled": false,
    "master_user_name": "master",
    "multi_az": false,
    "performance_insights_enabled": false,
    "port": 0,
    "publicly_accessible": false,
    "resource_id": "db-XLKJTXV24IEVIC4QRHWJWRX2P4",
    "storage_encrypted": true,
    "storage_type": "gp2",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest35575"
      }
    ]
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:db:turbottest35575",
    "db_instance_identifier": "turbottest35575",
    "resource_id": "db-XLKJTXV24IEVIC4QRHWJWRX2P4"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:db:turbottest35575"
    ],
    "db_instance_identifier": "turbottest35575",
    "tags": {
      "name": "turbottest35575"
    },
    "title": "turbottest35575"
  }
]
✔ PASSED

TEARDOWN: tests/aws_rds_db_instance

SUMMARY:

✘ tests/aws_rds_db_instance failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_option_group []

PRETEST: tests/aws_rds_db_option_group

TEST: tests/aws_rds_db_option_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_option_group.named_test_resource will be created
  + resource "aws_db_option_group" "named_test_resource" {
      + arn                      = (known after apply)
      + engine_name              = "sqlserver-ee"
      + id                       = (known after apply)
      + major_engine_version     = "11.00"
      + name                     = "turbottest83450"
      + name_prefix              = (known after apply)
      + option_group_description = "Terraform created resource to verify table"
      + tags                     = {
          + "name" = "turbottest83450"
        }
      + tags_all                 = {
          + "name" = "turbottest83450"
        }

      + option {
          + db_security_group_memberships  = []
          + option_name                    = "TDE"
          + vpc_security_group_memberships = []
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest83450"
aws_db_option_group.named_test_resource: Creating...
aws_db_option_group.named_test_resource: Creation complete after 2s [id=turbottest83450]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:og:turbottest83450"
resource_name = "turbottest83450"

Running SQL query: test-get-query.sql
[
  {
    "allows_vpc_and_non_vpc_instance_memberships": false,
    "arn": "arn:aws:rds:us-east-1:632902152528:og:turbottest83450",
    "description": "Terraform created resource to verify table",
    "engine_name": "sqlserver-ee",
    "major_engine_version": "11.00",
    "name": "turbottest83450",
    "options": [
      {
        "DBSecurityGroupMemberships": null,
        "OptionDescription": "SQL Server - Transparent Data Encryption",
        "OptionName": "TDE",
        "OptionSettings": null,
        "OptionVersion": null,
        "Permanent": false,
        "Persistent": true,
        "Port": null,
        "VpcSecurityGroupMemberships": null
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest83450",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest83450"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:og:turbottest83450",
    "name": "turbottest83450"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:og:turbottest83450"
    ],
    "name": "turbottest83450",
    "tags": {
      "name": "turbottest83450"
    },
    "title": "turbottest83450"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_option_group

TEARDOWN: tests/aws_rds_db_option_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_parameter_group []

PRETEST: tests/aws_rds_db_parameter_group

TEST: tests/aws_rds_db_parameter_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_parameter_group.named_test_resource will be created
  + resource "aws_db_parameter_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "Terraform created resource to verify table"
      + family      = "mysql5.6"
      + id          = (known after apply)
      + name        = "turbottest21925"
      + name_prefix = (known after apply)
      + tags        = {
          + "name" = "turbottest21925"
        }
      + tags_all    = {
          + "name" = "turbottest21925"
        }

      + parameter {
          + apply_method = "immediate"
          + name         = "character_set_client"
          + value        = "utf8"
        }
      + parameter {
          + apply_method = "immediate"
          + name         = "character_set_server"
          + value        = "utf8"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest21925"
aws_db_parameter_group.named_test_resource: Creating...
aws_db_parameter_group.named_test_resource: Creation complete after 5s [id=turbottest21925]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:pg:turbottest21925"
resource_name = "turbottest21925"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:pg:turbottest21925",
    "db_parameter_group_family": "mysql5.6",
    "description": "Terraform created resource to verify table",
    "name": "turbottest21925"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest21925",
    "parameters": [
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Controls whether user-defined functions that have only an xxx symbol for the main function can be loaded",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "allow-suspicious-udfs",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Sets the autocommit mode",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "autocommit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-65535",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Intended for use with master-to-master replication, and can be used to control the operation of AUTO_INCREMENT columns",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "auto_increment_increment",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-65535",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Determines the starting point for the AUTO_INCREMENT column value",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "auto_increment_offset",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "When this variable has a value of 1 (the default), the server automatically grants the EXECUTE and ALTER ROUTINE privileges to the creator of a stored routine, if the user cannot already execute and alter or drop the routine.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "automatic_sp_privileges",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-65535",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of outstanding connection requests MySQL can have",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "back_log",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The MySQL installation base directory.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "basedir",
        "ParameterValue": "/rdsdbbin/mysql",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4096-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The size of the cache to hold the SQL statements for the binary log during a transaction.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_cache_size",
        "ParameterValue": "32768",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "NONE,CRC32",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "When enabled, this variable causes the master to write a checksum for each event in the binary log.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_checksum",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "IGNORE_ERROR,ABORT_SERVER",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Controls what happens when the server cannot write to the binary log.",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.22",
        "ParameterName": "binlog_error_action",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "ROW,STATEMENT,MIXED",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Row-based, Statement-based or Mixed replication",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_format",
        "ParameterValue": "MIXED",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "IGNORE_ERROR,ABORT_SERVER",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Use the renamed binlog_error_action to control what happens when the server cannot write to the binary log.",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.21",
        "ParameterName": "binlogging_impossible_mode",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-100000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "How long in microseconds to keep reading transactions from the flush queue before proceeding with the group commit (and syncing the log to disk, if sync_binlog is greater than 0). If the value is 0 (the default), there is no timeout and the server keeps reading new transactions until the queue is empty.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_max_flush_queue_time",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "If this variable is enabled (the default), transactions are committed in the same order they are written to the binary log. If disabled, transactions may be committed in parallel.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_order_commits",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "full,minimal,noblob",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Whether the server logs full or minmal rows with row-based replication.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_row_image",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "When enabled, it causes a MySQL 5.6.2 or later server to write informational log events such as row query log events into its binary log.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_rows_query_log_events",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4096-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "This variable determines the size of the cache for the binary log to hold nontransactional statements issued during a transaction.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "binlog_stmt_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "aes-128-ecb,aes-192-ecb,aes-256-ecb,aes-128-cbc,aes-192-cbc,aes-256-cbc",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT().",
        "IsModifiable": true,
        "MinimumEngineVersion": "5.6.17",
        "ParameterName": "block_encryption_mode",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Limits the size of the MyISAM cache tree in bytes per thread.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "bulk_insert_buffer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5,dec8,cp850,hp8,koi8r,latin1,latin2,swe7,ascii,ujis,sjis,hebrew,tis620,euckr,koi8u,gb2312,greek,cp1250,gbk,latin5,armscii8,utf8,cp866,keybcs2,macce,macroman,cp852,latin7,utf8mb4,cp1251,cp1256,cp1257,binary,geostd8,cp932,eucjpms",
        "ApplyMethod": "immediate",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The character set for statements that arrive from the client.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character_set_client",
        "ParameterValue": "utf8",
        "Source": "user",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Don't ignore character set information sent by the client.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character-set-client-handshake",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5,dec8,cp850,hp8,koi8r,latin1,latin2,swe7,ascii,ujis,sjis,hebrew,tis620,euckr,koi8u,gb2312,greek,cp1250,gbk,latin5,armscii8,utf8,ucs2,cp866,keybcs2,macce,macroman,cp852,latin7,utf8mb4,cp1251,utf16,cp1256,cp1257,utf32,binary,geostd8,cp932,eucjpms",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The character set used for literals that do not have a character set introducer and for number-to-string conversion.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character_set_connection",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5,dec8,cp850,hp8,koi8r,latin1,latin2,swe7,ascii,ujis,sjis,hebrew,tis620,euckr,koi8u,gb2312,greek,cp1250,gbk,latin5,armscii8,utf8,ucs2,cp866,keybcs2,macce,macroman,cp852,latin7,utf8mb4,cp1251,utf16,cp1256,cp1257,utf32,binary,geostd8,cp932,eucjpms",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The character set used by the default database.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character_set_database",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5,dec8,cp850,hp8,koi8r,latin1,latin2,swe7,ascii,ujis,sjis,hebrew,tis620,euckr,koi8u,gb2312,greek,cp1250,gbk,latin5,armscii8,utf8,ucs2,cp866,keybcs2,macce,macroman,cp852,latin7,utf8mb4,cp1251,utf16,cp1256,cp1257,utf32,binary,geostd8,cp932,eucjpms",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The file system character set.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character_set_filesystem",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5,dec8,cp850,hp8,koi8r,latin1,latin2,swe7,ascii,ujis,sjis,hebrew,tis620,euckr,koi8u,gb2312,greek,cp1250,gbk,latin5,armscii8,utf8,ucs2,cp866,keybcs2,macce,macroman,cp852,latin7,utf8mb4,cp1251,utf16,cp1256,cp1257,utf32,binary,geostd8,cp932,eucjpms",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The character set used for returning query results to the client.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character_set_results",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5,dec8,cp850,hp8,koi8r,latin1,latin2,swe7,ascii,ujis,sjis,hebrew,tis620,euckr,koi8u,gb2312,greek,cp1250,gbk,latin5,armscii8,utf8,ucs2,cp866,keybcs2,macce,macroman,cp852,latin7,utf8mb4,cp1251,utf16,cp1256,cp1257,utf32,binary,geostd8,cp932,eucjpms",
        "ApplyMethod": "immediate",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The server's default character set.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "character_set_server",
        "ParameterValue": "utf8",
        "Source": "user",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5_chinese_ci,big5_bin,dec8_swedish_ci,dec8_bin,cp850_general_ci,cp850_bin,hp8_english_ci,hp8_bin,koi8r_general_ci,koi8r_bin,latin1_german1_ci,latin1_swedish_ci,latin1_danish_ci,latin1_german2_ci,latin1_bin,latin1_general_ci,latin1_general_cs,latin1_spanish_ci,latin2_czech_cs,latin2_general_ci,latin2_hungarian_ci,latin2_croatian_ci,latin2_bin,swe7_swedish_ci,swe7_bin,ascii_general_ci,ascii_bin,ujis_japanese_ci,ujis_bin,sjis_japanese_ci,sjis_bin,hebrew_general_ci,hebrew_bin,tis620_thai_ci,tis620_bin,euckr_korean_ci,euckr_bin,koi8u_general_ci,koi8u_bin,gb2312_chinese_ci,gb2312_bin,greek_general_ci,greek_bin,cp1250_general_ci,cp1250_czech_cs,cp1250_croatian_ci,cp1250_bin,cp1250_polish_ci,gbk_chinese_ci,gbk_bin,latin5_turkish_ci,latin5_bin,armscii8_general_ci,armscii8_bin,utf8_general_ci,utf8_bin,utf8_unicode_ci,utf8_icelandic_ci,utf8_latvian_ci,utf8_romanian_ci,utf8_slovenian_ci,utf8_polish_ci,utf8_estonian_ci,utf8_spanish_ci,utf8_swedish_ci,utf8_turkish_ci,utf8_czech_ci,utf8_danish_ci,utf8_lithuanian_ci,utf8_slovak_ci,utf8_spanish2_ci,utf8_roman_ci,utf8_persian_ci,utf8_esperanto_ci,utf8_hungarian_ci,utf8_sinhala_ci,ucs2_general_ci,ucs2_bin,ucs2_unicode_ci,ucs2_icelandic_ci,ucs2_latvian_ci,ucs2_romanian_ci,ucs2_slovenian_ci,ucs2_polish_ci,ucs2_estonian_ci,ucs2_spanish_ci,ucs2_swedish_ci,ucs2_turkish_ci,ucs2_czech_ci,ucs2_danish_ci,ucs2_lithuanian_ci,ucs2_slovak_ci,ucs2_spanish2_ci,ucs2_roman_ci,ucs2_persian_ci,ucs2_esperanto_ci,ucs2_hungarian_ci,ucs2_sinhala_ci,cp866_general_ci,cp866_bin,keybcs2_general_ci,keybcs2_bin,macce_general_ci,macce_bin,macroman_general_ci,macroman_bin,cp852_general_ci,cp852_bin,latin7_estonian_cs,latin7_general_ci,latin7_general_cs,latin7_bin,utf8mb4_general_ci,utf8mb4_bin,utf8mb4_unicode_ci,utf8mb4_icelandic_ci,utf8mb4_latvian_ci,utf8mb4_romanian_ci,utf8mb4_slovenian_ci,utf8mb4_polish_ci,utf8mb4_estonian_ci,utf8mb4_spanish_ci,utf8mb4_swedish_ci,utf8mb4_turkish_ci,utf8mb4_czech_ci,utf8mb4_danish_ci,utf8mb4_lithuanian_ci,utf8mb4_slovak_ci,utf8mb4_spanish2_ci,utf8mb4_roman_ci,utf8mb4_persian_ci,utf8mb4_esperanto_ci,utf8mb4_hungarian_ci,utf8mb4_sinhala_ci,cp1251_bulgarian_ci,cp1251_ukrainian_ci,cp1251_bin,cp1251_general_ci,cp1251_general_cs,utf16_general_ci,utf16_bin,utf16_unicode_ci,utf16_icelandic_ci,utf16_latvian_ci,utf16_romanian_ci,utf16_slovenian_ci,utf16_polish_ci,utf16_estonian_ci,utf16_spanish_ci,utf16_swedish_ci,utf16_turkish_ci,utf16_czech_ci,utf16_danish_ci,utf16_lithuanian_ci,utf16_slovak_ci,utf16_spanish2_ci,utf16_roman_ci,utf16_persian_ci,utf16_esperanto_ci,utf16_hungarian_ci,utf16_sinhala_ci,cp1256_general_ci,cp1256_bin,cp1257_lithuanian_ci,cp1257_bin,cp1257_general_ci,utf32_general_ci,utf32_bin,utf32_unicode_ci,utf32_icelandic_ci,utf32_latvian_ci,utf32_romanian_ci,utf32_slovenian_ci,utf32_polish_ci,utf32_estonian_ci,utf32_spanish_ci,utf32_swedish_ci,utf32_turkish_ci,utf32_czech_ci,utf32_danish_ci,utf32_lithuanian_ci,utf32_slovak_ci,utf32_spanish2_ci,utf32_roman_ci,utf32_persian_ci,utf32_esperanto_ci,utf32_hungarian_ci,utf32_sinhala_ci,binary,geostd8_general_ci,geostd8_bin,cp932_japanese_ci,cp932_bin,eucjpms_japanese_ci,eucjpms_bin",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The collation of the connection character set.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "collation_connection",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "big5_chinese_ci,big5_bin,dec8_swedish_ci,dec8_bin,cp850_general_ci,cp850_bin,hp8_english_ci,hp8_bin,koi8r_general_ci,koi8r_bin,latin1_german1_ci,latin1_swedish_ci,latin1_danish_ci,latin1_german2_ci,latin1_bin,latin1_general_ci,latin1_general_cs,latin1_spanish_ci,latin2_czech_cs,latin2_general_ci,latin2_hungarian_ci,latin2_croatian_ci,latin2_bin,swe7_swedish_ci,swe7_bin,ascii_general_ci,ascii_bin,ujis_japanese_ci,ujis_bin,sjis_japanese_ci,sjis_bin,hebrew_general_ci,hebrew_bin,tis620_thai_ci,tis620_bin,euckr_korean_ci,euckr_bin,koi8u_general_ci,koi8u_bin,gb2312_chinese_ci,gb2312_bin,greek_general_ci,greek_bin,cp1250_general_ci,cp1250_czech_cs,cp1250_croatian_ci,cp1250_bin,cp1250_polish_ci,gbk_chinese_ci,gbk_bin,latin5_turkish_ci,latin5_bin,armscii8_general_ci,armscii8_bin,utf8_general_ci,utf8_bin,utf8_unicode_ci,utf8_icelandic_ci,utf8_latvian_ci,utf8_romanian_ci,utf8_slovenian_ci,utf8_polish_ci,utf8_estonian_ci,utf8_spanish_ci,utf8_swedish_ci,utf8_turkish_ci,utf8_czech_ci,utf8_danish_ci,utf8_lithuanian_ci,utf8_slovak_ci,utf8_spanish2_ci,utf8_roman_ci,utf8_persian_ci,utf8_esperanto_ci,utf8_hungarian_ci,utf8_sinhala_ci,ucs2_general_ci,ucs2_bin,ucs2_unicode_ci,ucs2_icelandic_ci,ucs2_latvian_ci,ucs2_romanian_ci,ucs2_slovenian_ci,ucs2_polish_ci,ucs2_estonian_ci,ucs2_spanish_ci,ucs2_swedish_ci,ucs2_turkish_ci,ucs2_czech_ci,ucs2_danish_ci,ucs2_lithuanian_ci,ucs2_slovak_ci,ucs2_spanish2_ci,ucs2_roman_ci,ucs2_persian_ci,ucs2_esperanto_ci,ucs2_hungarian_ci,ucs2_sinhala_ci,cp866_general_ci,cp866_bin,keybcs2_general_ci,keybcs2_bin,macce_general_ci,macce_bin,macroman_general_ci,macroman_bin,cp852_general_ci,cp852_bin,latin7_estonian_cs,latin7_general_ci,latin7_general_cs,latin7_bin,utf8mb4_general_ci,utf8mb4_bin,utf8mb4_unicode_ci,utf8mb4_icelandic_ci,utf8mb4_latvian_ci,utf8mb4_romanian_ci,utf8mb4_slovenian_ci,utf8mb4_polish_ci,utf8mb4_estonian_ci,utf8mb4_spanish_ci,utf8mb4_swedish_ci,utf8mb4_turkish_ci,utf8mb4_czech_ci,utf8mb4_danish_ci,utf8mb4_lithuanian_ci,utf8mb4_slovak_ci,utf8mb4_spanish2_ci,utf8mb4_roman_ci,utf8mb4_persian_ci,utf8mb4_esperanto_ci,utf8mb4_hungarian_ci,utf8mb4_sinhala_ci,cp1251_bulgarian_ci,cp1251_ukrainian_ci,cp1251_bin,cp1251_general_ci,cp1251_general_cs,utf16_general_ci,utf16_bin,utf16_unicode_ci,utf16_icelandic_ci,utf16_latvian_ci,utf16_romanian_ci,utf16_slovenian_ci,utf16_polish_ci,utf16_estonian_ci,utf16_spanish_ci,utf16_swedish_ci,utf16_turkish_ci,utf16_czech_ci,utf16_danish_ci,utf16_lithuanian_ci,utf16_slovak_ci,utf16_spanish2_ci,utf16_roman_ci,utf16_persian_ci,utf16_esperanto_ci,utf16_hungarian_ci,utf16_sinhala_ci,cp1256_general_ci,cp1256_bin,cp1257_lithuanian_ci,cp1257_bin,cp1257_general_ci,utf32_general_ci,utf32_bin,utf32_unicode_ci,utf32_icelandic_ci,utf32_latvian_ci,utf32_romanian_ci,utf32_slovenian_ci,utf32_polish_ci,utf32_estonian_ci,utf32_spanish_ci,utf32_swedish_ci,utf32_turkish_ci,utf32_czech_ci,utf32_danish_ci,utf32_lithuanian_ci,utf32_slovak_ci,utf32_spanish2_ci,utf32_roman_ci,utf32_persian_ci,utf32_esperanto_ci,utf32_hungarian_ci,utf32_sinhala_ci,binary,geostd8_general_ci,geostd8_bin,cp932_japanese_ci,cp932_bin,eucjpms_japanese_ci,eucjpms_bin",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The server's default collation.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "collation_server",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The transaction completion type (0 - default, 1 - chain, 2 - release)",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "completion_type",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Allows INSERT and SELECT statements to run concurrently for MyISAM tables that have no free blocks in the middle of the data file.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "concurrent_insert",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "2-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of seconds that the MySQLd  server waits for a connect packet before responding with Bad handshake.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "connect_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Write a core file if mysqld dies.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "core-file",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "MySQL data directory",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "datadir",
        "ParameterValue": "/rdsdbdata/db/",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "InnoDB,MRG_MYISAM,BLACKHOLE,CSV,MEMORY,FEDERATED,ARCHIVE,MyISAM",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The default storage engine (table type).",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "default_storage_engine",
        "ParameterValue": "InnoDB",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Server current time zone",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "default_time_zone",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The default storage engine for TEMPORARY tables.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "default_tmp_storage_engine",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-7",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The default mode value to use for the WEEK() function.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "default_week_format",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "After inserting delayed_insert_limit delayed rows, the INSERT DELAYED handler thread checks whether there are any SELECT statements pending. If so, it allows them to execute before continuing to insert delayed rows.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "delayed_insert_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "How many seconds an INSERT DELAYED handler thread should wait for INSERT statements before terminating.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "delayed_insert_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If the queue becomes full, any client that issues an INSERT DELAYED statement waits until there is room in the queue again.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "delayed_queue_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "OFF,ON,ALL",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Determines when keys are flushed for MyISAM tables",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "delay_key_write",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-30",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of digits by which to increase the scale of the result of division operations.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "div_precision_increment",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Whether optimizer JSON output should add end markers.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "end_markers_in_json",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "When this variable is true, execution is allowed of only those statements that can be logged in a transactionally safe manner.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "enforce_gtid_consistency",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of equality ranges when the optimizer should switch from using index dives to index statistics.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "eq_range_index_dive_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "ON,OFF",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Indicates the status of the Event Scheduler",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "event_scheduler",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Needed for 5.6.7",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "explicit_defaults_for_timestamp",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "If ON, the server flushes all changes to disk after each SQL statement.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "flush",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Frees up resources and synchronize unflushed data to disk. Recommended only on systems with minimal resources.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "flush_time",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The list of operators supported by boolean full-text searches",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "ft_boolean_syntax",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "10-84",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Maximum length of the word to be included in a FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "ft_max_word_len",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-84",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Minimum length of the word to be included in a FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "ft_min_word_len",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Number of top matches to use for full-text searches performed using WITH QUERY EXPANSION.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "ft_query_expansion_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "/dev/null",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "File for Full Search Stop Words. NULL uses Default, /dev/null to disable Stop Words",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "ft_stopword_file",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Whether the general query log is enabled",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "general_log",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Location of mysql general log.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "general_log_file",
        "ParameterValue": "/rdsdbdata/log/general/mysql-general.log",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum allowed result length in bytes for the GROUP_CONCAT().",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "group_concat_max_len",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "OFF,ON",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "This option specifies whether GTIDs are enabled",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "gtid-mode",
        "ParameterValue": "OFF",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-65536",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The size of the internal host cache.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "host_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "String to be executed by the server for each client that connects.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "init_connect",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enables InnoDB Adaptive Flushing (default=on for RDS)",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_adaptive_flushing",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-70",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Low water mark representing percentage of redo log capacity at which adaptive flushing is enabled.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_adaptive_flushing_lwm",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Whether innodb adaptive hash indexes are enabled or disabled",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_adaptive_hash_index",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1000000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Allows InnoDB to automatically adjust the value of innodb_thread_sleep_delay up or down according to the current workload.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_adaptive_max_sleep_delay",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-1000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The increment size (in MB) for extending the size of an auto-extending tablespace file when it becomes full",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_autoextend_increment",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The locking mode to use for generating auto-increment values",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_autoinc_lock_mode",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Specifies whether to record the pages cached in the InnoDB buffer pool when the MySQL server is shut down.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_dump_at_shutdown",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Immediately records the pages cached in the InnoDB buffer pool.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_dump_now",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Specifies the file that holds the list of page numbers produced by innodb_buffer_pool_dump_at_shutdown or innodb_buffer_pool_dump_now.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_filename",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-64",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of regions that the InnoDB buffer pool is divided into",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Interrupts the process of restoring InnoDB buffer pool contents triggered by innodb_buffer_pool_load_at_startup or innodb_buffer_pool_load_now.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_load_abort",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Specifies that, on MySQL server startup, the InnoDB buffer pool is automatically warmed up by loading the same pages it held at an earlier time.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_load_at_startup",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Immediately warms up the InnoDB buffer pool by loading a set of data pages, without waiting for a server restart. ",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_load_now",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "5242880-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The size in bytes of the memory buffer innodb uses to cache data and indexes of its tables",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_buffer_pool_size",
        "ParameterValue": "{DBInstanceClassMemory*3/4}",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "inserts,deletes,purges,changes,all,none",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Controls InnoDB change buffering",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_change_buffering",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-50",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_change_buffer_max_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "crc32,innodb,none,strict_crc32,strict_innodb,strict_none",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Specifies how to generate and verify the checksum stored in each disk block of each InnoDB tablespace.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_checksum_algorithm",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enables per-index compression-related statistics in the INFORMATION_SCHEMA.INNODB_CMP_PER_INDEX table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_cmp_per_index_enabled",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of threads that can commit at the same time.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_commit_concurrency",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-100",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sets the cutoff point at which MySQL begins adding padding within compressed pages to avoid expensive compression failures.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_compression_failure_threshold_pct",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-9",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sets the cutoff point at which MySQL begins adding padding within compressed pages to avoid expensive compression failures.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_compression_level",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-75",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies the maximum percentage that can be reserved as free space within each compressed page, allowing room to reorganize the data and modification log within the page when a compressed table or index is updated and the data might be recompressed.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_compression_pad_pct_max",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of times a thread can enter and leave Innodb before it is subject to innodb-thread-concurrency",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_concurrency_tickets",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Directory where innodb files are stored",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_data_home_dir",
        "ParameterValue": "/rdsdbdata/db/innodb",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1,2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The InnoDB shutdown mode",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_fast_shutdown",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "Antelope,Barracuda",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Sets InnoDB Plug-in default file format.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_file_format",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Use tablespaces or files for Innodb.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_file_per_table",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-1000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of iterations for which InnoDB keeps the previously calculated snapshot of the flushing state, controlling how quickly adaptive flushing responds to changing workloads.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_flushing_avg_loops",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2700",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Write and flush the logs every N seconds. This setting has an effect only when innodb_flush_log_at_trx_commit has a value of 2.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_flush_log_at_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Determines Innodb transaction durability",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_flush_log_at_trx_commit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "O_DIRECT",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Determines Innodb flush method",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_flush_method",
        "ParameterValue": "O_DIRECT",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_flush_neighbors",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Lets InnoDB load tables at startup that are marked as corrupted",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_force_load_corrupted",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Specifies the qualified name of an InnoDB table containing a FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_aux_table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Size of the cache that holds a parsed document in memory while creating an InnoDB FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Specifies that a set of stopwords is associated with an InnoDB FULLTEXT index at the time the index is created.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_enable_stopword",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "10-252",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Maximum length of words that are stored in an InnoDB FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_max_token_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-16",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Minimum length of words that are stored in an InnoDB FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_min_token_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of words to process during each OPTIMIZE TABLE operation on an InnoDB FULLTEXT index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_num_word_optimize",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1000000-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The InnoDB FULLTEXT search (FTS) query result cache limit (defined in bytes) per FTS query or per thread.",
        "IsModifiable": true,
        "MinimumEngineVersion": "5.6.13",
        "ParameterName": "innodb_ft_result_cache_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Name of the table containing a list of words to ignore when creating an InnoDB FULLTEXT index, in the format db_name/table_name.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_server_stopword_table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-32",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Number of threads used in parallel to index and tokenize text in an InnoDB FULLTEXT index, when building a search index for a large table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_sort_pll_degree",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Name of the table containing a list of words to ignore when creating an InnoDB FULLTEXT index, in the format db_name/table_name.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_ft_user_stopword_table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "100-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum number of I/O operations per second that InnoDB will perform.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_io_capacity",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "2000-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The limit up to which InnoDB is allowed to extend the innodb_io_capacity setting in case of emergency.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_io_capacity_max",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enables or disables Innodb Large Prefix for Keys",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_large_prefix",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-1073741824",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Timeout in seconds an innodb transaction may wait for a row lock before giving up",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_lock_wait_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "262144-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The size in bytes of the buffer that innodb uses to write to the log files on disk",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_log_buffer_size",
        "ParameterValue": "8388608",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Specifies whether images of re-compressed pages are stored in InnoDB redo logs. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_log_compressed_pages",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1048576-274877906944",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The size in bytes of each log file in a log group",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_log_file_size",
        "ParameterValue": "134217728",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The directory path to the innodb log files",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_log_group_home_dir",
        "ParameterValue": "/rdsdbdata/log/innodb",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "100-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "A parameter that influences the algorithms and heuristics for the flush operation for the InnoDB buffer pool.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_lru_scan_depth",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-99",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum percentage of dirty pages in the buffer pool",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_max_dirty_pages_pct",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Controls how to delay INSERT, UPDATE, and DELETE operations when purge operations are lagging",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_max_purge_lag",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies the maximum delay in milliseconds for the delay imposed by the innodb_max_purge_lag configuration option",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_max_purge_lag_delay",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Turns off one or more counters in the information_schema.innodb_metrics table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_monitor_disable",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Turns on one or more counters in the information_schema.innodb_metrics table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_monitor_enable",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Resets to zero the count value for one or more counters in the information_schema.innodb_metrics table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_monitor_reset",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Resets all values (minimum, maximum, and so on) for one or more counters in the information_schema.innodb_metrics table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_monitor_reset_all",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "5-95",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies the approximate percentage of the InnoDB buffer pool used for the old block sublist.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_old_blocks_pct",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies how long in milliseconds (ms) a block inserted into the old sublist must stay there after its first access before it can be moved to the new sublist.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_old_blocks_time",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "65536-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies an upper limit on the size of the temporary log files used during online DDL operations for InnoDB tables.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_online_alter_log_max_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1,10-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Relevant only if you use multiple tablespaces in innodb. It specifies the maximum number of .ibd files that innodb can keep open at one time",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_open_files",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Changes the way the OPTIMIZE TABLE statement operates on InnoDB tables.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_optimize_fulltext_only",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Specifies the page size for all InnoDB tablespaces in a MySQL instance.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_page_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Specifies the page size for all InnoDB tablespaces in a MySQL instance.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_print_all_deadlocks",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-5000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The granularity of changes, expressed in units of redo log records, that trigger a purge operation, flushing the changed buffer pool blocks to disk",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_purge_batch_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-32",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of background threads devoted to the InnoDB purge operation",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_purge_threads",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enables or disables Innodb Random Read Ahead",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_random_read_ahead",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-64",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Controls the sensitivity of linear read-ahead that InnoDB uses to prefetch pages into the buffer cache.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_read_ahead_threshold",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-64",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of I/O threads for read operations in InnoDB.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_read_io_threads",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Starts the server in read-only mode.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_read_only",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The replication thread delay (in ms) on a slave server if innodb_thread_concurrency is reached.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_replication_delay",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Controls whether timeouts rollback the last statement or the entire transaction",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_rollback_on_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-128",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Defines how many of the rollback segments in the system tablespace that InnoDB uses within a transaction.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_rollback_segments",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "65536-67108864",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Specifies the sizes of several buffers used for sorting data during creation of an InnoDB index.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_sort_buffer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum delay between polls for a spin lock.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_spin_wait_delay",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Causes InnoDB to automatically recalculate persistent statistics after the data in a table is changed substantially.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_stats_auto_recalc",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "nulls_equal,nulls_unequal,nulls_ignored",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "How the server treats NULL values when collecting statistics about the distribution of index values for InnoDB tables.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_stats_method",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Controls whether table and index stats are updated when getting status information via SHOW STATUS or the INFORMATION_SCHEMA",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_stats_on_metadata",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "OFF,ON,0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Specifies whether the InnoDB index statistics produced by the ANALYZE TABLE command are stored on disk.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_stats_persistent",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_stats_persistent_sample_pages",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of index pages to sample when estimating cardinality and other statistics for an indexed column, such as those calculated by ANALYZE TABLE.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_stats_transient_sample_pages",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Whether InnoDB returns errors rather than warnings for exceptional conditions.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_strict_mode",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enables two phase commit in XA transactions",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_support_xa",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-1024",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Splits an internal data structure used to coordinate threads, for higher concurrency in workloads with large numbers of waiting threads.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_sync_array_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of times a thread waits for an innodb mutex to be freed before the thread is suspended",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_sync_spin_loops",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "If autocommit = 0, innodb honors LOCK TABLES",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_table_locks",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of threads that can enter innodb concurrently",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_thread_concurrency",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "How long innodb threads sleep before joining the innodb queue, in microseconds.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_thread_sleep_delay",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The relative or absolute directory path where InnoDB creates separate tablespaces for the undo logs",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_undo_directory",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-128",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Defines how many of the rollback segments in the system tablespace that InnoDB uses within a transaction.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_undo_logs",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-126",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of tablespace files that the undo logs are divided between, when you use a non-zero innodb_undo_logs setting.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_undo_tablespaces",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Controls whether or not MySQL uses Linux native asynchronous IO.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_use_native_aio",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-64",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of I/O threads for write operations in InnoDB.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "innodb_write_io_threads",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of seconds the server waits for activity on an interactive connection before closing it.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "interactive_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "128-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Increase the value of join_buffer_size to get a faster full join when adding indexes is not possible.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "join_buffer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Suppress behavior to overwrite MyISAM file created in DATA DIRECTORY or INDEX DIRECTORY.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "keep_files_on_create",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "8-9223372036854771712",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Increase the buffer size to get better index handling used for index blocks (for all reads and multiple writes).",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "key_buffer_size",
        "ParameterValue": "16777216",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "100-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Controls the demotion of buffers from the hot sub-chain of a key cache to the warm sub-chain. Lower values cause demotion to happen more quickly.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "key_cache_age_threshold",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "512-16384",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Size in bytes of blocks in the key cache.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "key_cache_block_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-100",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The division point between the hot and warm sub-chains of the key cache buffer chain. The value is the percentage of the buffer chain to use for the warm sub-chain.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "key_cache_division_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "ar_AE,ar_BH,ar_DZ,ar_EG,ar_IN,ar_IQ,ar_JO,ar_KW,ar_LB,ar_LY,ar_MA,ar_OM,ar_QA,ar_SA,ar_SD,ar_SY,ar_TN,ar_YE,be_BY,bg_BG,ca_ES,cs_CZ,da_DK,de_AT,de_BE,de_CH,de_DE,de_LU,el_GR,en_AU,en_CA,en_GB,en_IN,en_NZ,en_PH,en_US,en_ZA,en_ZW,es_AR,es_BO,es_CL,es_CO,es_CR,es_DO,es_EC,es_ES,es_GT,es_HN,es_MX,es_NI,es_PA,es_PE,es_PR,es_PY,es_SV,es_US,es_UY,es_VE,et_EE,eu_ES,fi_FI,fo_FO,fr_BE,fr_CA,fr_CH,fr_FR,fr_LU,gl_ES,gu_IN,he_IL,hi_IN,hr_HR,hu_HU,id_ID,is_IS,it_CH,it_IT,ja_JP,ko_KR,lt_LT,lv_LV,mk_MK,mn_MN,ms_MY,nb_NO,nl_BE,nl_NL,no_NO,pl_PL,pt_BR,pt_PT,ro_RO,ru_RU,ru_UA,sk_SK,sl_SI,sq_AL,sr_RS,sv_FI,sv_SE,ta_IN,te_IN,th_TH,tr_TR,uk_UA,ur_PK,vi_VN,zh_CN,zh_HK,zh_TW",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "This variable specifies the locale that controls the language used to display day and month names and abbreviations.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "lc_time_names",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Controls whetther LOCAL is supported for LOAD DATA INFILE",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "local_infile",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Specifies the timeout in seconds for attempts to acquire metadata locks",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "lock_wait_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Controls binary logging.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "log-bin",
        "ParameterValue": "/rdsdbdata/log/binlog/mysql-bin-changelog",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enforces restrictions on stored functions / triggers - logging for replication.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_bin_trust_function_creators",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Whether MySQL writes binary log events using a Version 1 or Version 2 logging events",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_bin_use_v1_row_events",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Location  of error log.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "log_error",
        "ParameterValue": "/rdsdbdata/log/error/mysql-error.log",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "TABLE,FILE,NONE",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Controls where to store query logs",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_output",
        "ParameterValue": "TABLE",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Logs queries that are expected to retrieve all rows to slow query log",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_queries_not_using_indexes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Allow for chain replication - ingression",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "log_slave_updates",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Include slow administrative statements in the statements written to the slow query log.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_slow_admin_statements",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "When the slow query log is enabled, this variable enables logging for queries that have taken more than long_query_time seconds to execute on the slave.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_slow_slave_statements",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Limits the number of such queries per minute that can be written to the slow query log.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_throttle_queries_not_using_indexes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Controls whether to produce additional warning messages.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "log_warnings",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "float",
        "Description": "Defines what MySQL considers long queries",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "long_query_time",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Affects how the server handles identifier case sensitivity",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "lower_case_table_names",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "INSERT, UPDATE, DELETE, and LOCK TABLE WRITE wait until no pending SELECT. Affects only storage engines that use only table-level locking (MyISAM, MEMORY, MERGE).",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "low_priority_updates",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "FILE,TABLE",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "This option causes the server to write its master info log to a file or a table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "master-info-repository",
        "ParameterValue": "TABLE",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enabling this variable causes the master to examine checksums when reading from the binary log.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "master_verify_checksum",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-1073741824",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "This value by default is small, to catch large (possibly incorrect) packets. Must be increased if using large BLOB columns or long strings. As big as largest BLOB. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_allowed_packet",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4096-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum binlog cache size a transaction may use",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_binlog_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4096-1073741824",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Server rotates the binlog once it reaches this size",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "max_binlog_size",
        "ParameterValue": "134217728",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4096-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If nontransactional statements within a transaction require more than this many bytes of memory, the server generates an error.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_binlog_stmt_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "A host is blocked from further connections if there are more than this number of interrupted connections",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_connect_errors",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-100000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of simultaneous client connections allowed.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_connections",
        "ParameterValue": "{DBInstanceClassMemory/12582880}",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-16384",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Do not start more than this number of threads to handle INSERT DELAYED statements.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_delayed_threads",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of bytes available for computing statement digests.",
        "IsModifiable": true,
        "MinimumEngineVersion": "5.6.27",
        "ParameterName": "max_digest_length",
        "ParameterValue": "1024",
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-65535",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum number of error, warning, and note messages to be stored for display.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_error_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "16384-1844674407370954752",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum size to which MEMORY tables are allowed to grow.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_heap_table_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-16384",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Synonym for max_delayed_threads",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_insert_delayed_threads",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Catch SELECT statements where keys are not used properly and would probably take a long time. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_join_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4-8388608",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "ORDER BY Optimization. The cutoff on the size of index values that determines which filesort algorithm to use.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_length_for_sort_data",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Used if the potential for denial-of-service attacks based on running the server out of memory by preparing huge numbers of statements.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_prepared_stmt_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "A low value can force MySQL to prefer indexes instead of table scans.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_seeks_for_key",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4-8388608",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of bytes to use when sorting BLOB or TEXT values.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_sort_length",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-255",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Limits the number of times a stored procedure can be called recursively minimizing the demand on thread stack space.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_sp_recursion_depth",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum number of temporary tables a client can keep open at the same time.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_tmp_tables",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum number of simultaneous connections allowed to any given MySQL account. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_user_connections",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "After this many write locks, allow some pending read lock requests to be processed in between.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "max_write_lock_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The size of the metadata locks cache",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "metadata_locks_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Can be used to cause queries which examine fewer than the stated number of rows not to be logged.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "min_examined_row_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "2-7",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The default pointer size in bytes, to be used by CREATE TABLE for MyISAM tables when no MAX_ROWS option is specified.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "myisam_data_pointer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-9223372036853727232",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum size of the temporary file that MySQL is allowed to use while re-creating a MyISAM index",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "myisam_max_sort_file_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "7-922337203685477807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "Maximum amount of memory to use for memory mapping compressed MyISAM files",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "myisam_mmap_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Size of the buffer that is allocated when sorting MyISAM indexes during a REPAIR TABLE or when creating indexes with CREATE INDEX or ALTER TABLE.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "myisam_sort_buffer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "nulls_equal,nulls_unequal,nulls_ignored",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "How the server treats NULL values when collecting statistics about the distribution of index values for MyISAM tables",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "myisam_stats_method",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Memory mapping for reading and writing MyISAM tables.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "myisam_use_mmap",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "This variable should not normally be changed. For use when very little memory is available. Set it to the expected length of statements sent by clients.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "net_buffer_length",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of seconds to wait for more data from a TCP/IP connection before aborting the read.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "net_read_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If a read on a communication port is interrupted, retry this many times before giving up. This value should be set quite high on freebsd because internal interrupts are sent to all threads. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "net_retry_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of seconds to wait on TCP/IP connections for a block to be written before aborting the write. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "net_write_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Force the server to generate short (pre-4.1) password hashes for new passwords. This is useful for compatibility when the server must support older client programs.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "old_passwords",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Enable old-style user limits.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "old-style-user-limits",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Controls the heuristics applied during query optimization to prune less-promising partial plans from the optimizer search space.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_prune_level",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-62",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum depth of search performed by the query optimizer.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_search_depth",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "default,batched_key_access=on,batched_key_access=off,block_nested_loop=on,block_nested_loop=off,engine_condition_pushdown=on,engine_condition_pushdown=off,firstmatch=on,firstmatch=off,index_merge=on,index_merge=off,index_merge_intersection=on,index_merge_intersection=off,index_merge_union=on,index_merge_union=off,index_merge_sort_union=on,index_merge_sort_union=off,loosescan=on,loosescan=off,materialization=on,materialization=off,mrr=on,mrr=off,mrr_cost_based=on,mrr_cost_based=off,semijoin=on,semijoin=off,subquery_materialization_cost_based=on,subquery_materialization_cost_based=off,use_index_extensions=on,use_index_extensions=off",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Controls optimizer behavior. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_switch",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "default,enabled=on,enabled=off,one_line=on,one_line=off",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Controls how statements are traced.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_trace",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "default,greedy_search=on,greedy_search=off,range_optimizer=on,range_optimizer=off,dynamic_range=on,dynamic_range=off,repeated_subselect=on,repeated_subselect=off",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Controls optimizations during statement tracing.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_trace_features",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Controls the limit on trace retention.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_trace_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Maximum allowed cumulated size of stored optimizer traces",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_trace_max_mem_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-9223372036854775807-9223372036854775807",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Controls the offset on trace retention.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "optimizer_trace_offset",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Enables or disables the Performance Schema",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema",
        "ParameterValue": "0",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the Performance Schema accounts table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_accounts_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of rows in the events_statements_summary_by_digest table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_digests_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the events_stages_history_long table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_events_stages_history_long_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows per thread in the events_stages_history table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_events_stages_history_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows per thread in the events_statements_history table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_events_statements_history_long_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows per thread in the events_statements_history table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_events_statements_history_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the events_waits_history_long table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_events_waits_history_long_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1024",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows per thread in the events_waits_history table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_events_waits_history_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the hosts table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_hosts_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of condition instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_cond_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented condition objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_cond_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of bytes available for computing statement digests.",
        "IsModifiable": true,
        "MinimumEngineVersion": "5.6.27",
        "ParameterName": "performance_schema_max_digest_length",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of file instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_file_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of opened file objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_file_handles",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented file objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_file_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of mutex instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_mutex_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-104857600",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented mutex objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_mutex_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of rwlock instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_rwlock_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-104857600",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented rwlock objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_rwlock_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of socket instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_socket_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented socket objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_socket_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of stage instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_stage_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of statement instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_statement_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of opened table objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_table_handles",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented table objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_table_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-256",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of thread instruments",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_thread_classes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The maximum number of instrumented thread objects",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_max_thread_instances",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The amount of preallocated memory per thread used to hold connection attribute strings",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_session_connect_attrs_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1024",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the setup_actors table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_setup_actors_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the setup_objects table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_setup_objects_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1-1048576",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of rows in the users table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "performance_schema_users_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The path name of the process ID file. This file is used by other programs such as MySQLd_safe to determine the server's process ID.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "pid_file",
        "ParameterValue": "/rdsdbdata/log/mysql-{EndPointPort}.pid",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Directory searched by systems dynamic linker for UDF object files. Otherwise, user-defined function object files must be located the default directory.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "plugin_dir",
        "ParameterValue": null,
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of the port on which the server listens for TCP/IP connections.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "port",
        "ParameterValue": "{EndPointPort}",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-1073741824",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The size of the buffer that is allocated when preloading indexes.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "preload_buffer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-100",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of statements for which to maintain profiling if profiling is enabled.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "profiling_history_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The allocation size of memory blocks that are allocated for objects created during statement parsing and execution. May help resolve fragmentation problems.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_alloc_block_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Don't cache results that are larger than this number of bytes.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_cache_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "512-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The minimum size (in bytes) for blocks allocated by the query cache.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_cache_min_res_unit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-9223372036854774784",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The amount of memory allocated for caching query results.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "For query results either don't cache (=OFF), cache except for NO_CACHE (=ON), or only CACHE (=DEMAND)",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_cache_type",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Setting this variable to 1 causes acquisition of a WRITE lock for a table to invalidate any queries in the query cache that refer to the table",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_cache_wlock_invalidate",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "8192-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Increased size might help improve perf for complex queries (i.e. Reduces server memory allocation)",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "query_prealloc_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "4096-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The size of blocks that are allocated when doing range optimization.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "range_alloc_block_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "8200-2147479552",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Each thread that does a sequential scan allocates this buffer. Increased value may help perf if performing many sequential scans.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "read_buffer_size",
        "ParameterValue": "262144",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1,{TrueIfReplica}",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "When it is enabled, the server permits no updates except from updates performed by slave  threads.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "read_only",
        "ParameterValue": "{TrueIfReplica}",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "8200-2147479552",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Avoids disk reads when reading rows in sorted order following a key-sort operation. Large values can improve ORDER BY perf.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "read_rnd_buffer_size",
        "ParameterValue": "524288",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The basename for the relay log.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "relay-log",
        "ParameterValue": "/rdsdbdata/log/relaylog/relaylog",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "FILE,TABLE",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "This option causes the server to log its relay log info to a file or a table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "relay_log_info_repository",
        "ParameterValue": "TABLE",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enables automatic relay log recovery immediately following server startup.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "relay_log_recovery",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Creates a replication filter using the name of a database",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.44",
        "ParameterName": "replicate-do-db",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Creates a replication filter using the name of a table",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.44",
        "ParameterName": "replicate-do-table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Creates a replication ignore filter using the name of a database",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.44",
        "ParameterName": "replicate-ignore-db",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Creates a replication ignore filter using the name of a table",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.44",
        "ParameterName": "replicate-ignore-table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Creates a replication filter using the pattern of a table name",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.44",
        "ParameterName": "replicate-wild-do-table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Creates a replication ignore filter using the pattern of a table name",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.44",
        "ParameterName": "replicate-wild-ignore-table",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "If this option is enabled, a user cannot create new MySQL users by using the GRANT  statement unless the user has the INSERT privilege for the mysql.user table or any column in the table.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "safe-user-create",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Blocks connections from all accounts that have passwords stored in the old (pre-4.1) format.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "secure_auth",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "Limits the effect of LOAD_FILE(), LOAD_DATA, and SELECT ??? INTO OUTFILE to specified directory.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "secure_file_priv",
        "ParameterValue": "/tmp",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Integer value used to identify the instance in a replication group",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "server_id",
        "ParameterValue": "{ServerId}",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Controls how MySQL searches for GID events through binary log files.",
        "IsModifiable": false,
        "MinimumEngineVersion": "5.6.21",
        "ParameterName": "simplified_binlog_gtid_recovery",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Ignore character set information sent by the client.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "skip-character-set-client-handshake",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Uses OS locking instead of internal",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "skip_external_locking",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Host names are not resolved. All Host column values in the grant tables must be IP numbers or localhost.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "skip_name_resolve",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "SHOW DATABASES statement is allowed only to users who have the SHOW DATABASES privilege",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "skip_show_database",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Tells the slave server not to start the slave threads when the server starts.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "skip-slave-start",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "32-524280",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sets the maximum number of transactions that can be processed by a multi-threaded slave before a checkpoint operation is called to update its status as shown by SHOW SLAVE STATUS.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_checkpoint_group",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-4294967295",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sets the maximum time (in milliseconds) that is allowed to pass before a checkpoint operation is called to update the status of a multi-threaded slave as shown by SHOW SLAVE STATUS.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_checkpoint_period",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Whether to use compression of the slave/master protocol if both the slave and the master support it.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_compressed_protocol",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of seconds to wait for more data from a master/slave connection before aborting the read.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_net_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-1024",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sets the number of slave worker threads for executing replication events (transactions) in parallel. Setting this variable to 0 (the default) disables parallel execution.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_parallel_workers",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "For multithreaded slaves, this option sets the maximum amount of memory (in bytes) available to slave worker queues holding events not yet applied.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_pending_jobs_size_max",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "When this option is enabled, the slave examines checksums read from the relay log, in the event of a mismatch, the slave stops with an error.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slave_sql_verify_checksum",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "ALL_LOSSY,ALL_NON_LOSSY,ALL_SIGNED,ALL_UNSIGNED",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "list",
        "Description": "Controls the type conversion mode in effect on the slave when using row-based replication",
        "IsModifiable": true,
        "MinimumEngineVersion": "5.6.13",
        "ParameterName": "slave_type_conversions",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Increments Slow_launch_threads if creating thread takes longer than this many seconds.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slow_launch_time",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Enable or disable the slow query log",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "slow_query_log",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Location of the mysql slow query log file.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "slow_query_log_file",
        "ParameterValue": "/rdsdbdata/log/slowquery/mysql-slowquery.log",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "(UNIX) socket file and (WINDOWS) named pipe used for local connections.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "socket",
        "ParameterValue": "/tmp/mysql.sock",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "32768-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Larger value improves perf for ORDER BY or GROUP BY operations.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sort_buffer_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "ALLOW_INVALID_DATES,ANSI_QUOTES,ERROR_FOR_DIVISION_BY_ZERO,HIGH_NOT_PRECEDENCE,IGNORE_SPACE,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_BACKSLASH_ESCAPES,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION,NO_FIELD_OPTIONS,NO_KEY_OPTIONS,NO_TABLE_OPTIONS,NO_UNSIGNED_SUBTRACTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY,PAD_CHAR_TO_FULL_LENGTH,PIPES_AS_CONCAT,REAL_AS_FLOAT,STRICT_ALL_TABLES,STRICT_TRANS_TABLES,ANSI,DB2,MAXDB,MSSQL,MYSQL323,MYSQL40,ORACLE,POSTGRESQL,TRADITIONAL",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "list",
        "Description": "Current SQL Server Mode.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sql_mode",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The maximum number of rows to return from SELECT statements.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sql_select_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "256-524288",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sets a soft upper limit for the number of cached stored routines per connection.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "stored_program_cache",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Sync binlog (MySQL flush to disk or rely on OS)",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sync_binlog",
        "ParameterValue": "1",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "For non-temporary tables controls if .frm file is sync'ed to disk.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sync_frm",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If the value of this variable is greater than 0, a replication slave synchronizes its master.info file to disk (using fdatasync()) after every sync_master_info events.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sync_master_info",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If the value of this variable is greater than 0, the MySQL server synchronizes its relay log to disk (using fdatasync()) after every sync_relay_log writes to the relay log.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sync_relay_log",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If the value of this variable is greater than 0, a replication slave synchronizes its relay-log.info file to disk (using fdatasync()) after every sync_relay_log_info transactions.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sync_relay_log_info",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "Causes SYSYDATE() to be an alias for NOW(). Replication related",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "sysdate-is-now",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "-1,400-524288",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of table definitions that can be stored in the definition cache",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "table_definition_cache",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-524288",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of open tables for all threads. Increasing this value increases the number of file descriptors.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "table_open_cache",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-16",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "The number of open tables cache instances.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "table_open_cache_instances",
        "ParameterValue": "16",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "boolean",
        "Description": "This option causes most temporary files created by the server to use a small set of names, rather than a unique name for each new file. This works around a problem in the Linux kernel dealing with creating many new files with different names.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "temp-pool",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-16384",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "Number of threads to be cached. Doesn't improve perf for good thread implementations.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "thread_cache_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "131072-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "integer",
        "Description": "If the thread stack size is too small, it limits the complexity of the SQL statements that the server can handle, the recursion depth of stored procedures, and other memory-consuming actions.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "thread_stack",
        "ParameterValue": "262144",
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "Controls whether innodb mutexes are timed out. ",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "timed_mutexes",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "Africa/Cairo,Africa/Casablanca,Africa/Harare,Africa/Monrovia,Africa/Nairobi,Africa/Tripoli,Africa/Windhoek,America/Araguaina,America/Asuncion,America/Bogota,America/Buenos_Aires,America/Caracas,America/Chihuahua,America/Cuiaba,America/Denver,America/Fortaleza,America/Guatemala,America/Halifax,America/Manaus,America/Matamoros,America/Monterrey,America/Montevideo,America/Phoenix,America/Santiago,America/Tijuana,Asia/Amman,Asia/Ashgabat,Asia/Baghdad,Asia/Baku,Asia/Bangkok,Asia/Beirut,Asia/Calcutta,Asia/Damascus,Asia/Dhaka,Asia/Irkutsk,Asia/Jerusalem,Asia/Kabul,Asia/Karachi,Asia/Kathmandu,Asia/Krasnoyarsk,Asia/Magadan,Asia/Muscat,Asia/Novosibirsk,Asia/Riyadh,Asia/Seoul,Asia/Shanghai,Asia/Singapore,Asia/Taipei,Asia/Tehran,Asia/Tokyo,Asia/Ulaanbaatar,Asia/Vladivostok,Asia/Yakutsk,Asia/Yerevan,Atlantic/Azores,Australia/Adelaide,Australia/Brisbane,Australia/Darwin,Australia/Hobart,Australia/Perth,Australia/Sydney,Canada/Newfoundland,Canada/Saskatchewan,Canada/Yukon,Brazil/East,Europe/Amsterdam,Europe/Athens,Europe/Dublin,Europe/Helsinki,Europe/Istanbul,Europe/Kaliningrad,Europe/Moscow,Europe/Paris,Europe/Prague,Europe/Sarajevo,Pacific/Auckland,Pacific/Fiji,Pacific/Guam,Pacific/Honolulu,Pacific/Samoa,US/Alaska,US/Central,US/Eastern,US/East-Indiana,US/Pacific,UTC",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The server time zone",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "time_zone",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The directory used for temporary files and temporary tables",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "tmpdir",
        "ParameterValue": "/rdsdbdata/tmp",
        "Source": "system",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-18446744073709551615",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "If an in-memory temporary table exceeds the limit, MySQL automatically converts it to an on-disk MyISAM table. Increased value can improve perf for many advanced GROUP BY queries.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "tmp_table_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The amount in bytes by which to increase a per-transaction memory pool which needs memory.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "transaction_alloc_block_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1024-18446744073709547520",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "There is a per-transaction memory pool from which various transaction-related allocations take memory. For every allocation that cannot be satisfied from the pool because it has insufficient memory available, the pool is incremented.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "transaction_prealloc_size",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "READ-UNCOMMITTED,READ-COMMITTED,REPEATABLE-READ,SERIALIZABLE",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "Sets the default transaction isolation level.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "tx_isolation",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0,1",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "boolean",
        "Description": "This variable controls whether updates to a view can be made when the view does not contain all columns of the primary key defined in the underlying table, if the update statement contains a LIMIT clause (Often generated by GUI tools).",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "updatable_views_with_limit",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "ON,OFF,FORCE,FORCE_PLUS_PERMANENT",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "This option controls how the server loads the validate_password plugin at startup.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "validate-password",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": null,
        "ApplyMethod": "pending-reboot",
        "ApplyType": "static",
        "DataType": "string",
        "Description": "The path name of the dictionary file used by the validate_password plugin for checking passwords.",
        "IsModifiable": false,
        "MinimumEngineVersion": null,
        "ParameterName": "validate_password_dictionary_file",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2147483647",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The minimum number of characters that validate_password requires passwords to have.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "validate_password_length",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2147483647",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The minimum number of lowercase and uppercase characters that passwords checked by the validate_password plugin must have if the password policy is MEDIUM or stronger.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "validate_password_mixed_case_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2147483647",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The minimum number of numeric (digit) characters that passwords checked by the validate_password plugin must have if the password policy is MEDIUM or stronger.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "validate_password_number_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "LOW,MEDIUM,STRONG",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "string",
        "Description": "The password policy enforced by the validate_password plugin.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "validate_password_policy",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "0-2147483647",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The minimum number of nonalphanumeric characters that passwords checked by the validate_password plugin must have if the password policy is MEDIUM or stronger.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "validate_password_special_char_count",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      },
      {
        "AllowedValues": "1-31536000",
        "ApplyMethod": "pending-reboot",
        "ApplyType": "dynamic",
        "DataType": "integer",
        "Description": "The number of seconds the server waits for activity on a non-interactive TCP/IP or UNIX File connection before closing it.",
        "IsModifiable": true,
        "MinimumEngineVersion": null,
        "ParameterName": "wait_timeout",
        "ParameterValue": null,
        "Source": "engine-default",
        "SupportedEngineModes": null
      }
    ],
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest21925"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:pg:turbottest21925",
    "name": "turbottest21925"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:pg:turbottest21925"
    ],
    "name": "turbottest21925",
    "tags": {
      "name": "turbottest21925"
    },
    "title": "turbottest21925"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_parameter_group

TEARDOWN: tests/aws_rds_db_parameter_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_snapshot []

PRETEST: tests/aws_rds_db_snapshot

TEST: tests/aws_rds_db_snapshot
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_instance.my_instance will be created
  + resource "aws_db_instance" "my_instance" {
      + address                               = (known after apply)
      + allocated_storage                     = 20
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_name                               = (known after apply)
      + db_subnet_group_name                  = "turbottest95979"
      + delete_automated_backups              = true
      + endpoint                              = (known after apply)
      + engine                                = "mysql"
      + engine_version                        = (known after apply)
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = (known after apply)
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t2.micro"
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + maintenance_window                    = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + name                                  = "turbottest95979"
      + nchar_character_set_name              = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = true
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_type                          = (known after apply)
      + tags_all                              = (known after apply)
      + timezone                              = (known after apply)
      + username                              = "turbottest"
      + vpc_security_group_ids                = (known after apply)
    }

  # aws_db_snapshot.named_test_resource will be created
  + resource "aws_db_snapshot" "named_test_resource" {
      + allocated_storage             = (known after apply)
      + availability_zone             = (known after apply)
      + db_instance_identifier        = (known after apply)
      + db_snapshot_arn               = (known after apply)
      + db_snapshot_identifier        = "turbottest95979"
      + encrypted                     = (known after apply)
      + engine                        = (known after apply)
      + engine_version                = (known after apply)
      + id                            = (known after apply)
      + iops                          = (known after apply)
      + kms_key_id                    = (known after apply)
      + license_model                 = (known after apply)
      + option_group_name             = (known after apply)
      + port                          = (known after apply)
      + snapshot_type                 = (known after apply)
      + source_db_snapshot_identifier = (known after apply)
      + source_region                 = (known after apply)
      + status                        = (known after apply)
      + storage_type                  = (known after apply)
      + tags                          = {
          + "name" = "turbottest95979"
        }
      + tags_all                      = {
          + "name" = "turbottest95979"
        }
      + vpc_id                        = (known after apply)
    }

  # aws_db_subnet_group.default will be created
  + resource "aws_db_subnet_group" "default" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest95979"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_subnet.backend will be created
  + resource "aws_subnet" "backend" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "175.0.128.0/17"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest95979"
        }
      + tags_all                                       = {
          + "Name" = "turbottest95979"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.frontend will be created
  + resource "aws_subnet" "frontend" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "175.0.0.0/17"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest95979"
        }
      + tags_all                                       = {
          + "Name" = "turbottest95979"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "175.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest95979"
        }
      + tags_all                             = {
          + "Name" = "turbottest95979"
        }
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + db_instance_identifier = (known after apply)
  + region_name            = "us-east-1"
  + resource_aka           = (known after apply)
  + resource_name          = "turbottest95979"
  + vpc_id                 = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0b9ef65b7641a8ea4]
aws_subnet.frontend: Creating...
aws_subnet.backend: Creating...
aws_subnet.backend: Creation complete after 1s [id=subnet-0f840075927057886]
aws_subnet.frontend: Creation complete after 2s [id=subnet-0da3998288c34f2ba]
aws_db_subnet_group.default: Creating...
aws_db_subnet_group.default: Creation complete after 2s [id=turbottest95979]
aws_db_instance.my_instance: Creating...
aws_db_instance.my_instance: Still creating... [10s elapsed]
aws_db_instance.my_instance: Still creating... [20s elapsed]
aws_db_instance.my_instance: Still creating... [30s elapsed]
aws_db_instance.my_instance: Still creating... [40s elapsed]
aws_db_instance.my_instance: Still creating... [50s elapsed]
aws_db_instance.my_instance: Still creating... [1m0s elapsed]
aws_db_instance.my_instance: Still creating... [1m10s elapsed]
aws_db_instance.my_instance: Still creating... [1m20s elapsed]
aws_db_instance.my_instance: Still creating... [1m30s elapsed]
aws_db_instance.my_instance: Still creating... [1m40s elapsed]
aws_db_instance.my_instance: Still creating... [1m50s elapsed]
aws_db_instance.my_instance: Still creating... [2m0s elapsed]
aws_db_instance.my_instance: Still creating... [2m10s elapsed]
aws_db_instance.my_instance: Still creating... [2m20s elapsed]
aws_db_instance.my_instance: Still creating... [2m30s elapsed]
aws_db_instance.my_instance: Still creating... [2m40s elapsed]
aws_db_instance.my_instance: Still creating... [2m50s elapsed]
aws_db_instance.my_instance: Still creating... [3m0s elapsed]
aws_db_instance.my_instance: Still creating... [3m10s elapsed]
aws_db_instance.my_instance: Still creating... [3m20s elapsed]
aws_db_instance.my_instance: Still creating... [3m30s elapsed]
aws_db_instance.my_instance: Still creating... [3m40s elapsed]
aws_db_instance.my_instance: Still creating... [3m50s elapsed]
aws_db_instance.my_instance: Still creating... [4m0s elapsed]
aws_db_instance.my_instance: Still creating... [4m10s elapsed]
aws_db_instance.my_instance: Still creating... [4m20s elapsed]
aws_db_instance.my_instance: Still creating... [4m30s elapsed]
aws_db_instance.my_instance: Still creating... [4m40s elapsed]
aws_db_instance.my_instance: Creation complete after 4m49s [id=terraform-20220620140353399300000001]
aws_db_snapshot.named_test_resource: Creating...
aws_db_snapshot.named_test_resource: Still creating... [10s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [20s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [30s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [40s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [50s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [1m0s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [1m10s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [1m20s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [1m30s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [1m40s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [1m50s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [2m0s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [2m10s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [2m20s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [2m30s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [2m40s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [2m50s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [3m0s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [3m10s elapsed]
aws_db_snapshot.named_test_resource: Still creating... [3m20s elapsed]
aws_db_snapshot.named_test_resource: Creation complete after 3m25s [id=turbottest95979]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_db_instance.my_instance,
  on variables.tf line 84, in resource "aws_db_instance" "my_instance":
  84:   name                 = var.resource_name

Use db_name instead

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
db_instance_identifier = "terraform-20220620140353399300000001"
region_name = "us-east-1"
resource_aka = "arn:aws:rds:us-east-1:632902152528:snapshot:turbottest95979"
resource_name = "turbottest95979"
vpc_id = "vpc-0b9ef65b7641a8ea4"

Running SQL query: test-get-query.sql
[
  {
    "allocated_storage": 20,
    "arn": "arn:aws:rds:us-east-1:632902152528:snapshot:turbottest95979",
    "db_instance_identifier": "terraform-20220620140353399300000001",
    "db_snapshot_identifier": "turbottest95979",
    "encrypted": false,
    "engine": "mysql",
    "engine_version": "8.0.28",
    "engine_version": "8.0.20",
    "iam_database_authentication_enabled": false,
    "license_model": "general-public-license",
    "master_user_name": "turbottest",
    "port": 3306,
    "storage_type": "gp2",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest95979"
      }
    ],
    "type": "manual",
    "vpc_id": "vpc-0b9ef65b7641a8ea4"
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
[
  {
    "db_snapshot_attributes": [
      {
        "AttributeName": "restore",
        "AttributeValues": null
      }
    ],
    "db_snapshot_identifier": "turbottest95979"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:snapshot:turbottest95979",
    "db_snapshot_identifier": "turbottest95979"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:snapshot:turbottest95979"
    ],
    "db_snapshot_identifier": "turbottest95979",
    "tags": {
      "name": "turbottest95979"
    },
    "title": "turbottest95979"
  }
]
✔ PASSED

TEARDOWN: tests/aws_rds_db_snapshot

SUMMARY:

✘ tests/aws_rds_db_snapshot failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_rds_db_subnet_group []

PRETEST: tests/aws_rds_db_subnet_group

TEST: tests/aws_rds_db_subnet_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_subnet_group.named_test_resource will be created
  + resource "aws_db_subnet_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "Terraform created resource to verify table"
      + id          = (known after apply)
      + name        = "turbottest62988"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags        = {
          + "name" = "turbottest62988"
        }
      + tags_all    = {
          + "name" = "turbottest62988"
        }
    }

  # aws_subnet.aws_db_subnet_group_a will be created
  + resource "aws_subnet" "aws_db_subnet_group_a" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.84.0.0/25"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.aws_db_subnet_group_b will be created
  + resource "aws_subnet" "aws_db_subnet_group_b" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.84.0.128/25"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.aws_db_subnet_group will be created
  + resource "aws_vpc" "aws_db_subnet_group" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.84.0.0/24"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_name = "turbottest62988"
  + vpc_id        = (known after apply)
aws_vpc.aws_db_subnet_group: Creating...
aws_vpc.aws_db_subnet_group: Creation complete after 3s [id=vpc-06d2de1698541d961]
aws_subnet.aws_db_subnet_group_b: Creating...
aws_subnet.aws_db_subnet_group_a: Creating...
aws_subnet.aws_db_subnet_group_b: Creation complete after 1s [id=subnet-04fd6548828e0f098]
aws_subnet.aws_db_subnet_group_a: Creation complete after 1s [id=subnet-0e26e2d7679d67fb5]
aws_db_subnet_group.named_test_resource: Creating...
aws_db_subnet_group.named_test_resource: Creation complete after 2s [id=turbottest62988]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:rds:us-east-1:632902152528:subgrp:turbottest62988"
resource_name = "turbottest62988"
vpc_id = "vpc-06d2de1698541d961"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:subgrp:turbottest62988",
    "description": "Terraform created resource to verify table",
    "name": "turbottest62988",
    "vpc_id": "vpc-06d2de1698541d961"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest62988",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest62988"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:rds:us-east-1:632902152528:subgrp:turbottest62988",
    "name": "turbottest62988"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:rds:us-east-1:632902152528:subgrp:turbottest62988"
    ],
    "name": "turbottest62988",
    "tags": {
      "name": "turbottest62988"
    },
    "title": "turbottest62988"
  }
]
✔ PASSED

POSTTEST: tests/aws_rds_db_subnet_group

TEARDOWN: tests/aws_rds_db_subnet_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_redshift_cluster []

PRETEST: tests/aws_redshift_cluster

TEST: tests/aws_redshift_cluster
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_redshift_cluster.named_test_resource will be created
  + resource "aws_redshift_cluster" "named_test_resource" {
      + allow_version_upgrade               = true
      + apply_immediately                   = false
      + aqua_configuration_status           = (known after apply)
      + arn                                 = (known after apply)
      + automated_snapshot_retention_period = 1
      + availability_zone                   = (known after apply)
      + cluster_identifier                  = "turbottest79316"
      + cluster_nodes                       = (known after apply)
      + cluster_parameter_group_name        = (known after apply)
      + cluster_public_key                  = (known after apply)
      + cluster_revision_number             = (known after apply)
      + cluster_security_groups             = (known after apply)
      + cluster_subnet_group_name           = "turbottest79316"
      + cluster_type                        = "single-node"
      + cluster_version                     = "1.0"
      + database_name                       = "testdb"
      + default_iam_role_arn                = (known after apply)
      + dns_name                            = (known after apply)
      + encrypted                           = false
      + endpoint                            = (known after apply)
      + enhanced_vpc_routing                = (known after apply)
      + iam_roles                           = (known after apply)
      + id                                  = (known after apply)
      + kms_key_id                          = (known after apply)
      + maintenance_track_name              = "current"
      + manual_snapshot_retention_period    = -1
      + master_password                     = (sensitive value)
      + master_username                     = "turbottest"
      + node_type                           = "dc2.large"
      + number_of_nodes                     = 1
      + port                                = 5439
      + preferred_maintenance_window        = (known after apply)
      + publicly_accessible                 = true
      + skip_final_snapshot                 = true
      + tags                                = {
          + "name" = "turbottest79316"
        }
      + tags_all                            = {
          + "name" = "turbottest79316"
        }
      + vpc_security_group_ids              = (known after apply)
    }

  # aws_redshift_subnet_group.my_subnet_group will be created
  + resource "aws_redshift_subnet_group" "my_subnet_group" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest79316"
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + region_name   = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest79316"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0b8366971990d5416]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-0c7b7fbb69bb615cf]
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet1: Creation complete after 2s [id=subnet-0604fa10052674999]
aws_subnet.my_subnet2: Creation complete after 2s [id=subnet-09ef5e5382b8d3470]
aws_redshift_subnet_group.my_subnet_group: Creating...
aws_redshift_subnet_group.my_subnet_group: Creation complete after 1s [id=turbottest79316]
aws_redshift_cluster.named_test_resource: Creating...
aws_redshift_cluster.named_test_resource: Still creating... [10s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [20s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [30s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [40s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [50s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [1m0s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [1m10s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [1m20s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [1m30s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [1m40s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [1m50s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [2m0s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [2m10s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [2m20s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [2m30s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [2m40s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [2m50s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [3m0s elapsed]
aws_redshift_cluster.named_test_resource: Still creating... [3m10s elapsed]
aws_redshift_cluster.named_test_resource: Creation complete after 3m18s [id=turbottest79316]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
region_name = "us-east-1"
resource_aka = "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316"
resource_name = "turbottest79316"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316"
    ],
    "allow_version_upgrade": true,
    "arn": "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316",
    "cluster_identifier": "turbottest79316"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316"
    ],
    "allow_version_upgrade": true,
    "arn": "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316",
    "cluster_identifier": "turbottest79316"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316"
    ],
    "cluster_identifier": "turbottest79316"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:cluster:turbottest79316"
    ],
    "cluster_identifier": "turbottest79316",
    "tags": {
      "name": "turbottest79316"
    },
    "title": "turbottest79316"
  }
]
✔ PASSED

POSTTEST: tests/aws_redshift_cluster

TEARDOWN: tests/aws_redshift_cluster

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_redshift_event_subscription []

PRETEST: tests/aws_redshift_event_subscription

TEST: tests/aws_redshift_event_subscription
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_redshift_event_subscription.named_test_resource will be created
  + resource "aws_redshift_event_subscription" "named_test_resource" {
      + arn              = (known after apply)
      + customer_aws_id  = (known after apply)
      + enabled          = true
      + event_categories = [
          + "configuration",
          + "management",
          + "monitoring",
          + "security",
        ]
      + id               = (known after apply)
      + name             = "turbottest19290"
      + severity         = "INFO"
      + sns_topic_arn    = (known after apply)
      + source_ids       = [
          + "turbottest19290",
        ]
      + source_type      = "cluster"
      + status           = (known after apply)
      + tags             = {
          + "Name" = "turbottest19290"
        }
      + tags_all         = {
          + "Name" = "turbottest19290"
        }
    }

  # aws_sns_topic.test_resource will be created
  + resource "aws_sns_topic" "test_resource" {
      + arn                         = (known after apply)
      + content_based_deduplication = false
      + fifo_topic                  = false
      + id                          = (known after apply)
      + name                        = "redshift-events"
      + name_prefix                 = (known after apply)
      + owner                       = (known after apply)
      + policy                      = (known after apply)
      + tags_all                    = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest19290"
aws_sns_topic.test_resource: Creating...
aws_sns_topic.test_resource: Creation complete after 3s [id=arn:aws:sns:us-east-1:632902152528:redshift-events]
aws_redshift_event_subscription.named_test_resource: Creating...
aws_redshift_event_subscription.named_test_resource: Creation complete after 1s [id=turbottest19290]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:redshift:us-east-1:632902152528:eventsubscription:turbottest19290"
resource_name = "turbottest19290"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "cust_subscription_id": "turbottest19290",
    "partition": "aws",
    "region": "us-east-1",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest19290"
      }
    ],
    "title": "turbottest19290"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "account_id": "632902152528",
    "cust_subscription_id": "turbottest19290",
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest19290"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:eventsubscription:turbottest19290"
    ],
    "tags": {
      "Name": "turbottest19290"
    },
    "title": "turbottest19290"
  }
]
✔ PASSED

POSTTEST: tests/aws_redshift_event_subscription

TEARDOWN: tests/aws_redshift_event_subscription

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_redshift_parameter_group []

PRETEST: tests/aws_redshift_parameter_group

TEST: tests/aws_redshift_parameter_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_redshift_parameter_group.named_test_resource will be created
  + resource "aws_redshift_parameter_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + family      = "redshift-1.0"
      + id          = (known after apply)
      + name        = "turbottest25818"
      + tags        = {
          + "name" = "turbottest25818"
        }
      + tags_all    = {
          + "name" = "turbottest25818"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest25818"
aws_redshift_parameter_group.named_test_resource: Creating...
aws_redshift_parameter_group.named_test_resource: Creation complete after 1s [id=turbottest25818]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:redshift:us-east-1:632902152528:parametergroup:turbottest25818"
resource_name = "turbottest25818"

Running SQL query: test-get-query.sql
[
  {
    "family": "redshift-1.0",
    "name": "turbottest25818",
    "tags": {
      "name": "turbottest25818"
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest25818",
    "tags": {
      "name": "turbottest25818"
    },
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest25818"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "turbottest25818",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest25818"
    },
    "title": "turbottest25818"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:parametergroup:turbottest25818"
    ],
    "name": "turbottest25818",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest25818"
    },
    "title": "turbottest25818"
  }
]
✔ PASSED

POSTTEST: tests/aws_redshift_parameter_group

TEARDOWN: tests/aws_redshift_parameter_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_redshift_snapshot []

PRETEST: tests/aws_redshift_snapshot

TEST: tests/aws_redshift_snapshot
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "turbottest69211"
        }
      + tags_all = {
          + "Name" = "turbottest69211"
        }
      + vpc_id   = (known after apply)
    }

  # aws_redshift_cluster.cluster will be created
  + resource "aws_redshift_cluster" "cluster" {
      + allow_version_upgrade               = true
      + apply_immediately                   = false
      + aqua_configuration_status           = (known after apply)
      + arn                                 = (known after apply)
      + automated_snapshot_retention_period = 1
      + availability_zone                   = (known after apply)
      + cluster_identifier                  = "turbottest69211"
      + cluster_nodes                       = (known after apply)
      + cluster_parameter_group_name        = (known after apply)
      + cluster_public_key                  = (known after apply)
      + cluster_revision_number             = (known after apply)
      + cluster_security_groups             = (known after apply)
      + cluster_subnet_group_name           = "turbottest69211"
      + cluster_type                        = "single-node"
      + cluster_version                     = "1.0"
      + database_name                       = "testdb"
      + default_iam_role_arn                = (known after apply)
      + dns_name                            = (known after apply)
      + encrypted                           = false
      + endpoint                            = (known after apply)
      + enhanced_vpc_routing                = (known after apply)
      + iam_roles                           = (known after apply)
      + id                                  = (known after apply)
      + kms_key_id                          = (known after apply)
      + maintenance_track_name              = "current"
      + manual_snapshot_retention_period    = -1
      + master_password                     = (sensitive value)
      + master_username                     = "rahul"
      + node_type                           = "dc2.large"
      + number_of_nodes                     = 1
      + port                                = 5439
      + preferred_maintenance_window        = (known after apply)
      + publicly_accessible                 = true
      + skip_final_snapshot                 = true
      + tags_all                            = (known after apply)
      + vpc_security_group_ids              = (known after apply)
    }

  # aws_redshift_subnet_group.my_subnet_group will be created
  + resource "aws_redshift_subnet_group" "my_subnet_group" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "turbottest69211"
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest69211"
        }
      + tags_all                                       = {
          + "Name" = "turbottest69211"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest69211"
        }
      + tags_all                                       = {
          + "Name" = "turbottest69211"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest69211"
        }
      + tags_all                             = {
          + "Name" = "turbottest69211"
        }
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = "arn:aws:redshift:us-east-1:632902152528:snapshot:turbottest69211/turbottest69211"
  + resource_id   = (known after apply)
  + resource_name = "turbottest69211"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0f87e5d29b4489db4]
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-086954fc4145c94e0]
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creating...
aws_subnet.my_subnet2: Creation complete after 2s [id=subnet-06caaa3f855f04010]
aws_subnet.my_subnet1: Creation complete after 2s [id=subnet-0784ef4838fc13503]
aws_redshift_subnet_group.my_subnet_group: Creating...
aws_redshift_subnet_group.my_subnet_group: Creation complete after 1s [id=turbottest69211]
aws_redshift_cluster.cluster: Creating...
aws_redshift_cluster.cluster: Still creating... [10s elapsed]
aws_redshift_cluster.cluster: Still creating... [20s elapsed]
aws_redshift_cluster.cluster: Still creating... [30s elapsed]
aws_redshift_cluster.cluster: Still creating... [40s elapsed]
aws_redshift_cluster.cluster: Still creating... [50s elapsed]
aws_redshift_cluster.cluster: Still creating... [1m0s elapsed]
aws_redshift_cluster.cluster: Still creating... [1m10s elapsed]
aws_redshift_cluster.cluster: Still creating... [1m20s elapsed]
aws_redshift_cluster.cluster: Still creating... [1m30s elapsed]
aws_redshift_cluster.cluster: Still creating... [1m40s elapsed]
aws_redshift_cluster.cluster: Still creating... [1m50s elapsed]
aws_redshift_cluster.cluster: Still creating... [2m0s elapsed]
aws_redshift_cluster.cluster: Still creating... [2m10s elapsed]
aws_redshift_cluster.cluster: Still creating... [2m20s elapsed]
aws_redshift_cluster.cluster: Still creating... [2m30s elapsed]
aws_redshift_cluster.cluster: Still creating... [2m40s elapsed]
aws_redshift_cluster.cluster: Creation complete after 2m46s [id=turbottest69211]
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "      aws redshift create-cluster-snapshot --cluster-identifier turbottest69211 --snapshot-identifier turbottest69211 --tags Key=name,Value=turbottest69211 --profile default --region us-east-1;\n"]
null_resource.named_test_resource (local-exec): {
null_resource.named_test_resource (local-exec):     "Snapshot": {
null_resource.named_test_resource (local-exec):         "SnapshotIdentifier": "turbottest69211",
null_resource.named_test_resource (local-exec):         "ClusterIdentifier": "turbottest69211",
null_resource.named_test_resource (local-exec):         "SnapshotCreateTime": "2022-06-20T14:27:30.011000+00:00",
null_resource.named_test_resource (local-exec):         "Status": "creating",
null_resource.named_test_resource (local-exec):         "Port": 5439,
null_resource.named_test_resource (local-exec):         "AvailabilityZone": "us-east-1b",
null_resource.named_test_resource (local-exec):         "ClusterCreateTime": "2022-06-20T14:27:17.050000+00:00",
null_resource.named_test_resource (local-exec):         "MasterUsername": "rahul",
null_resource.named_test_resource (local-exec):         "ClusterVersion": "1.0",
null_resource.named_test_resource (local-exec):         "EngineFullVersion": "1.0.38698",
null_resource.named_test_resource (local-exec):         "SnapshotType": "manual",
null_resource.named_test_resource (local-exec):         "NodeType": "dc2.large",
null_resource.named_test_resource (local-exec):         "NumberOfNodes": 1,
null_resource.named_test_resource (local-exec):         "DBName": "testdb",
null_resource.named_test_resource (local-exec):         "VpcId": "vpc-0f87e5d29b4489db4",
null_resource.named_test_resource (local-exec):         "Encrypted": false,
null_resource.named_test_resource (local-exec):         "EncryptedWithHSM": false,
null_resource.named_test_resource (local-exec):         "OwnerAccount": "632902152528",
null_resource.named_test_resource (local-exec):         "TotalBackupSizeInMegaBytes": 0.0,
null_resource.named_test_resource (local-exec):         "ActualIncrementalBackupSizeInMegaBytes": 0.0,
null_resource.named_test_resource (local-exec):         "BackupProgressInMegaBytes": 0.0,
null_resource.named_test_resource (local-exec):         "CurrentBackupRateInMegaBytesPerSecond": 0.0,
null_resource.named_test_resource (local-exec):         "EstimatedSecondsToCompletion": -1,
null_resource.named_test_resource (local-exec):         "ElapsedTimeInSeconds": 0,
null_resource.named_test_resource (local-exec):         "Tags": [
null_resource.named_test_resource (local-exec):             {
null_resource.named_test_resource (local-exec):                 "Key": "name",
null_resource.named_test_resource (local-exec):                 "Value": "turbottest69211"
null_resource.named_test_resource (local-exec):             }
null_resource.named_test_resource (local-exec):         ],
null_resource.named_test_resource (local-exec):         "EnhancedVpcRouting": false,
null_resource.named_test_resource (local-exec):         "MaintenanceTrackName": "current",
null_resource.named_test_resource (local-exec):         "ManualSnapshotRetentionPeriod": -1
null_resource.named_test_resource (local-exec):     }
null_resource.named_test_resource (local-exec): }
null_resource.named_test_resource: Creation complete after 1s [id=1091101572012587818]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Quoted references are deprecated

  on variables.tf line 68, in resource "aws_subnet" "my_subnet1":
  68:       "aws_internet_gateway.igw"

In this context, references are expected literally rather than in quotes.
Terraform 0.11 and earlier required quotes, but quoted references are now
deprecated and will be removed in a future version of Terraform. Remove the
quotes surrounding this reference to silence this warning.

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:redshift:us-east-1:632902152528:snapshot:turbottest69211/turbottest69211"
resource_id = "1091101572012587818"
resource_name = "turbottest69211"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:snapshot:turbottest69211/turbottest69211"
    ],
    "title": "turbottest69211"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:snapshot:turbottest69211/turbottest69211"
    ],
    "snapshot_identifier": "turbottest69211",
    "tags": {
      "name": "turbottest69211"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "cluster_identifier": "turbottest69211",
    "snapshot_identifier": "turbottest69211"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:snapshot:turbottest69211/turbottest69211"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest69211"
    },
    "title": "turbottest69211"
  }
]
✔ PASSED

POSTTEST: tests/aws_redshift_snapshot
Running terraform
[31m[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mFailed to query available provider packages[0m
[31m│[0m [0m
[31m│[0m [0m[0mCould not retrieve the list of available versions for provider
[31m│[0m [0mhashicorp/turbot: provider registry registry.terraform.io does not have a
[31m│[0m [0mprovider named registry.terraform.io/hashicorp/turbot
[31m│[0m [0m
[31m│[0m [0mDid you intend to use turbot/turbot? If so, you must specify that source
[31m│[0m [0maddress in each module which requires that provider. To see which modules
[31m│[0m [0mare currently depending on hashicorp/turbot, run the following command:
[31m│[0m [0m    terraform providers
[31m╵[0m[0m
[0m[0m

Error: Could not load plugin


Plugin reinitialization required. Please run "terraform init".

Plugins are external binaries that Terraform uses to access and manipulate
resources. The configuration provided requires plugins which can't be
located,
don't satisfy the version constraints, or are otherwise incompatible.

Terraform automatically discovers provider requirements from your
configuration, including providers used in child modules. To see the
requirements and constraints, run "terraform providers".

3 problems:

- failed to instantiate provider "registry.terraform.io/hashicorp/aws" to
obtain schema: unknown provider "registry.terraform.io/hashicorp/aws"
- failed to instantiate provider "registry.terraform.io/hashicorp/null" to
obtain schema: unknown provider "registry.terraform.io/hashicorp/null"
- failed to instantiate provider "registry.terraform.io/hashicorp/turbot" to
obtain schema: unknown provider "registry.terraform.io/hashicorp/turbot"


TEARDOWN: tests/aws_redshift_snapshot



Error: Could not load plugin


Plugin reinitialization required. Please run "terraform init".

Plugins are external binaries that Terraform uses to access and manipulate
resources. The configuration provided requires plugins which can't be
located,
don't satisfy the version constraints, or are otherwise incompatible.

Terraform automatically discovers provider requirements from your
configuration, including providers used in child modules. To see the
requirements and constraints, run "terraform providers".

3 problems:

- failed to instantiate provider "registry.terraform.io/hashicorp/aws" to
obtain schema: unknown provider "registry.terraform.io/hashicorp/aws"
- failed to instantiate provider "registry.terraform.io/hashicorp/null" to
obtain schema: unknown provider "registry.terraform.io/hashicorp/null"
- failed to instantiate provider "registry.terraform.io/hashicorp/turbot" to
obtain schema: unknown provider "registry.terraform.io/hashicorp/turbot"

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_redshift_subnet_group []

PRETEST: tests/aws_redshift_subnet_group

TEST: tests/aws_redshift_subnet_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_redshift_subnet_group.named_test_resource will be created
  + resource "aws_redshift_subnet_group" "named_test_resource" {
      + arn         = (known after apply)
      + description = "A test subnet group"
      + id          = (known after apply)
      + name        = "turbottest84676"
      + subnet_ids  = (known after apply)
      + tags        = {
          + "name" = "turbottest84676"
        }
      + tags_all    = {
          + "name" = "turbottest84676"
        }
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = "turbottest84676"
  + resource_name = "turbottest84676"
  + vpc_id        = (known after apply)
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 4s [id=vpc-06e372909297de529]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-0aa1ca5b414d5a904]
aws_redshift_subnet_group.named_test_resource: Creating...
aws_redshift_subnet_group.named_test_resource: Creation complete after 1s [id=turbottest84676]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:redshift:us-east-1:632902152528:subnetgroup:turbottest84676"
resource_id = "turbottest84676"
resource_name = "turbottest84676"
vpc_id = "vpc-06e372909297de529"

Running SQL query: test-get-query.sql
[
  {
    "cluster_subnet_group_name": "turbottest84676",
    "description": "A test subnet group",
    "subnet_group_status": "Complete",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest84676"
      }
    ],
    "vpc_id": "vpc-06e372909297de529"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:subnetgroup:turbottest84676"
    ],
    "cluster_subnet_group_name": "turbottest84676",
    "description": "A test subnet group",
    "tags": {
      "name": "turbottest84676"
    },
    "title": "turbottest84676"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:redshift:us-east-1:632902152528:subnetgroup:turbottest84676"
    ],
    "cluster_subnet_group_name": "turbottest84676",
    "description": "A test subnet group",
    "subnet_group_status": "Complete",
    "tags": {
      "name": "turbottest84676"
    },
    "title": "turbottest84676"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

POSTTEST: tests/aws_redshift_subnet_group

TEARDOWN: tests/aws_redshift_subnet_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_region []

PRETEST: tests/aws_region

TEST: tests/aws_region
Running terraform

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"

You can apply this plan to save these new output values to the Terraform
state, without changing any real infrastructure.

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 37, in data "null_data_source" "resource":
  37: data "null_data_source" "resource" {}

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"

Running SQL query: test-get-query.sql
[
  {
    "_ctx": {
      "connection_name": "aws"
    },
    "account_id": "632902152528",
    "akas": [
      "arn:aws::ap-south-1:632902152528"
    ],
    "name": "ap-south-1",
    "opt_in_status": "opt-in-not-required",
    "partition": "aws",
    "region": "ap-south-1",
    "title": "ap-south-1"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "_ctx": {
      "connection_name": "aws"
    },
    "account_id": "632902152528",
    "akas": [
      "arn:aws::ap-south-1:632902152528"
    ],
    "name": "ap-south-1",
    "opt_in_status": "opt-in-not-required",
    "partition": "aws",
    "region": "ap-south-1",
    "title": "ap-south-1"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

TEARDOWN: tests/aws_region

SUMMARY:

✘ tests/aws_region failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_health_check []

PRETEST: tests/aws_route53_health_check

TEST: tests/aws_route53_health_check
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_route53_health_check.named_test_resource will be created
  + resource "aws_route53_health_check" "named_test_resource" {
      + arn               = (known after apply)
      + disabled          = false
      + enable_sni        = (known after apply)
      + failure_threshold = 5
      + fqdn              = "example.com"
      + id                = (known after apply)
      + measure_latency   = false
      + port              = 80
      + request_interval  = 30
      + resource_path     = "/"
      + tags              = {
          + "Name" = "turbottest40337"
        }
      + tags_all          = {
          + "Name" = "turbottest40337"
        }
      + type              = "HTTP"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id      = "632902152528"
  + aws_region      = "us-east-1"
  + health_check_id = (known after apply)
  + resource_aka    = (known after apply)
  + resource_name   = "turbottest40337"
aws_route53_health_check.named_test_resource: Creating...
aws_route53_health_check.named_test_resource: Creation complete after 2s [id=46ab09e3-3b77-45e0-bdd6-e0cc03303f4b]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
health_check_id = "46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
resource_aka = "arn:aws:route53:::healthcheck/46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
resource_name = "turbottest40337"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_route53_health_check" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:route53:::healthcheck/46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
    ],
    "id": "46ab09e3-3b77-45e0-bdd6-e0cc03303f4b",
    "tags": {
      "Name": "turbottest40337"
    }
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_route53_health_check" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:route53:::healthcheck/46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
    ],
    "id": "46ab09e3-3b77-45e0-bdd6-e0cc03303f4b",
    "tags": {
      "Name": "turbottest40337"
    }
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_route53_health_check" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:route53:::healthcheck/46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
    ],
    "id": "46ab09e3-3b77-45e0-bdd6-e0cc03303f4b",
    "tags": {
      "Name": "turbottest40337"
    }
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_route53_health_check" does not exist (SQLSTATE 42P01)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_route53_health_check" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:route53:::healthcheck/46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
    ],
    "tags": {
      "Name": "turbottest40337"
    },
    "title": "46ab09e3-3b77-45e0-bdd6-e0cc03303f4b"
  }
]

✘ FAILED

TEARDOWN: tests/aws_route53_health_check

SUMMARY:

✘ tests/aws_route53_health_check failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_record []

PRETEST: tests/aws_route53_record

TEST: tests/aws_route53_record
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.named_test_resource will be created
  + resource "aws_eip" "named_test_resource" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = true
    }

  # aws_route53_record.named_test_resource will be created
  + resource "aws_route53_record" "named_test_resource" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "www.turbottest83679.com"
      + records         = (known after apply)
      + set_identifier  = "live"
      + ttl             = 300
      + type            = "A"
      + zone_id         = (known after apply)

      + weighted_routing_policy {
          + weight = 90
        }
    }

  # aws_route53_zone.named_test_resource will be created
  + resource "aws_route53_zone" "named_test_resource" {
      + arn           = (known after apply)
      + comment       = "Managed by Terraform"
      + force_destroy = true
      + id            = (known after apply)
      + name          = "turbottest83679.com"
      + name_servers  = (known after apply)
      + tags_all      = (known after apply)
      + zone_id       = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + public_ip     = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest83679"
  + zone_id       = (known after apply)
aws_eip.named_test_resource: Creating...
aws_route53_zone.named_test_resource: Creating...
aws_eip.named_test_resource: Creation complete after 1s [id=eipalloc-079e08757df3814c3]
aws_route53_zone.named_test_resource: Still creating... [10s elapsed]
aws_route53_zone.named_test_resource: Still creating... [20s elapsed]
aws_route53_zone.named_test_resource: Still creating... [30s elapsed]
aws_route53_zone.named_test_resource: Still creating... [40s elapsed]
aws_route53_zone.named_test_resource: Still creating... [50s elapsed]
aws_route53_zone.named_test_resource: Creation complete after 59s [id=Z04080802ADCHHKKXAQ7W]
aws_route53_record.named_test_resource: Creating...
aws_route53_record.named_test_resource: Still creating... [10s elapsed]
aws_route53_record.named_test_resource: Still creating... [20s elapsed]
aws_route53_record.named_test_resource: Still creating... [30s elapsed]
aws_route53_record.named_test_resource: Still creating... [40s elapsed]
aws_route53_record.named_test_resource: Creation complete after 42s [id=Z04080802ADCHHKKXAQ7W_www.turbottest83679.com_A_live]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
public_ip = "44.206.136.217"
resource_aka = "arn:aws:route53:::hostedzone/Z04080802ADCHHKKXAQ7W/recordset/www.turbottest83679.com./A/live"
resource_name = "turbottest83679"
zone_id = "Z04080802ADCHHKKXAQ7W"

Running SQL query: test-list-query.sql
[
  {
    "name": "www.turbottest83679.com.",
    "records": [
      "44.206.136.217"
    ],
    "set_identifier": "live",
    "ttl": "300",
    "type": "A",
    "weight": 90,
    "zone_id": "Z04080802ADCHHKKXAQ7W"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:route53:::hostedzone/Z04080802ADCHHKKXAQ7W/recordset/www.turbottest83679.com./A/live"
    ],
    "title": "www.turbottest83679.com."
  }
]
✔ PASSED

POSTTEST: tests/aws_route53_record

TEARDOWN: tests/aws_route53_record

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_resolver_endpoint []

PRETEST: tests/aws_route53_resolver_endpoint

TEST: tests/aws_route53_resolver_endpoint
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_route53_resolver_endpoint.named_test_resource will be created
  + resource "aws_route53_resolver_endpoint" "named_test_resource" {
      + arn                = (known after apply)
      + direction          = "INBOUND"
      + host_vpc_id        = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest87033"
      + security_group_ids = (known after apply)
      + tags               = {
          + "name" = "turbottest87033"
        }
      + tags_all           = {
          + "name" = "turbottest87033"
        }

      + ip_address {
          + ip        = "10.1.2.4"
          + ip_id     = (known after apply)
          + subnet_id = (known after apply)
        }
      + ip_address {
          + ip        = (known after apply)
          + ip_id     = (known after apply)
          + subnet_id = (known after apply)
        }
      + ip_address {
          + ip        = (known after apply)
          + ip_id     = (known after apply)
          + subnet_id = (known after apply)
        }
    }

  # aws_security_group.my_security_group_1 will be created
  + resource "aws_security_group" "my_security_group_1" {
      + arn                    = (known after apply)
      + description            = "used for creating R53 endpoint"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = "create-endpoint-001"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.my_security_group_2 will be created
  + resource "aws_security_group" "my_security_group_2" {
      + arn                    = (known after apply)
      + description            = "used for creating R53 endpoint"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = "create-endpoint-002"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.my_security_group_3 will be created
  + resource "aws_security_group" "my_security_group_3" {
      + arn                    = (known after apply)
      + description            = "used for creating R53 endpoint"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = "create-endpoint-003"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.my_subnet1 will be created
  + resource "aws_subnet" "my_subnet1" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet2 will be created
  + resource "aws_subnet" "my_subnet2" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.my_subnet3 will be created
  + resource "aws_subnet" "my_subnet3" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.1.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id         = "632902152528"
  + aws_region         = "us-east-1"
  + resource_aka       = (known after apply)
  + resource_direction = "INBOUND"
  + resource_id        = (known after apply)
  + resource_name      = "turbottest87033"
aws_vpc.my_vpc: Creating...
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0600a9f5fc6049da3]
aws_security_group.my_security_group_2: Creating...
aws_subnet.my_subnet1: Creating...
aws_security_group.my_security_group_1: Creating...
aws_security_group.my_security_group_3: Creating...
aws_subnet.my_subnet3: Creating...
aws_subnet.my_subnet2: Creating...
aws_subnet.my_subnet1: Creation complete after 1s [id=subnet-0fa73f44295dd37ba]
aws_subnet.my_subnet3: Creation complete after 1s [id=subnet-04c69a94af60b36e6]
aws_subnet.my_subnet2: Creation complete after 1s [id=subnet-01e421a1031f5d8b8]
aws_security_group.my_security_group_1: Creation complete after 3s [id=sg-096fa66967cec1c20]
aws_security_group.my_security_group_3: Creation complete after 3s [id=sg-0c6b85709853dd266]
aws_security_group.my_security_group_2: Creation complete after 3s [id=sg-0ba454a81e90dc672]
aws_route53_resolver_endpoint.named_test_resource: Creating...
aws_route53_resolver_endpoint.named_test_resource: Still creating... [10s elapsed]
aws_route53_resolver_endpoint.named_test_resource: Still creating... [20s elapsed]
aws_route53_resolver_endpoint.named_test_resource: Still creating... [30s elapsed]
aws_route53_resolver_endpoint.named_test_resource: Still creating... [40s elapsed]
aws_route53_resolver_endpoint.named_test_resource: Creation complete after 48s [id=rslvr-in-197cd7c5e6e84519a]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
resource_aka = "arn:aws:route53resolver:us-east-1:632902152528:resolver-endpoint/rslvr-in-197cd7c5e6e84519a"
resource_direction = "INBOUND"
resource_id = "rslvr-in-197cd7c5e6e84519a"
resource_name = "turbottest87033"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:route53resolver:us-east-1:632902152528:resolver-endpoint/rslvr-in-197cd7c5e6e84519a"
    ],
    "direction": "INBOUND",
    "tags": {
      "name": "turbottest87033"
    },
    "title": "turbottest87033"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:route53resolver:us-east-1:632902152528:resolver-endpoint/rslvr-in-197cd7c5e6e84519a"
    ],
    "id": "rslvr-in-197cd7c5e6e84519a",
    "ip_address_count": 3,
    "name": "turbottest87033"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:route53resolver:us-east-1:632902152528:resolver-endpoint/rslvr-in-197cd7c5e6e84519a"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest87033"
    },
    "title": "turbottest87033"
  }
]
✔ PASSED

POSTTEST: tests/aws_route53_resolver_endpoint

TEARDOWN: tests/aws_route53_resolver_endpoint

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_resolver_rule []

PRETEST: tests/aws_route53_resolver_rule

TEST: tests/aws_route53_resolver_rule
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_route53_resolver_rule.named_test_resource will be created
  + resource "aws_route53_resolver_rule" "named_test_resource" {
      + arn          = (known after apply)
      + domain_name  = "turbot.com"
      + id           = (known after apply)
      + name         = "turbottest533"
      + owner_id     = (known after apply)
      + rule_type    = "SYSTEM"
      + share_status = (known after apply)
      + tags         = {
          + "name" = "turbottest533"
        }
      + tags_all     = {
          + "name" = "turbottest533"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest533"
aws_route53_resolver_rule.named_test_resource: Creating...
aws_route53_resolver_rule.named_test_resource: Still creating... [10s elapsed]
aws_route53_resolver_rule.named_test_resource: Creation complete after 12s [id=rslvr-rr-73786430f2864f88a]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
resource_aka = "arn:aws:route53resolver:us-east-1:632902152528:resolver-rule/rslvr-rr-73786430f2864f88a"
resource_id = "rslvr-rr-73786430f2864f88a"
resource_name = "turbottest533"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:route53resolver:us-east-1:632902152528:resolver-rule/rslvr-rr-73786430f2864f88a"
    ],
    "name": "turbottest533",
    "tags": {
      "name": "turbottest533"
    },
    "title": "turbottest533"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "id": "rslvr-rr-73786430f2864f88a",
    "name": "turbottest533",
    "share_status": "NOT_SHARED",
    "status": "COMPLETE",
    "tags": {
      "name": "turbottest533"
    }
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:route53resolver:us-east-1:632902152528:resolver-rule/rslvr-rr-73786430f2864f88a"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest533"
    },
    "title": "turbottest533"
  }
]
✔ PASSED

POSTTEST: tests/aws_route53_resolver_rule

TEARDOWN: tests/aws_route53_resolver_rule

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_traffic_policy []

PRETEST: tests/aws_route53_traffic_policy

TEST: tests/aws_route53_traffic_policy
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_route53_traffic_policy.named_test_resource will be created
  + resource "aws_route53_traffic_policy" "named_test_resource" {
      + comment  = "turbottest24230 comment"
      + document = jsonencode(
            {
              + AWSPolicyFormatVersion = "2015-10-01"
              + Endpoints              = {
                  + endpoint-start-NkPh = {
                      + Type  = "value"
                      + Value = "10.0.0.2"
                    }
                }
              + RecordType             = "A"
              + StartEndpoint          = "endpoint-start-NkPh"
            }
        )
      + id       = (known after apply)
      + name     = "turbottest24230"
      + type     = (known after apply)
      + version  = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + id            = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest24230"
  + type          = (known after apply)
  + version       = (known after apply)
aws_route53_traffic_policy.named_test_resource: Creating...
aws_route53_traffic_policy.named_test_resource: Creation complete after 1s [id=5b570298-9e7d-4708-b53a-c95c9198d04e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
id = "5b570298-9e7d-4708-b53a-c95c9198d04e"
resource_aka = "arn:aws:route53::632902152528:trafficpolicy/5b570298-9e7d-4708-b53a-c95c9198d04e/1"
resource_name = "turbottest24230"
type = "A"
version = 1

Running SQL query: test-get-query.sql
[
  {
    "id": "5b570298-9e7d-4708-b53a-c95c9198d04e",
    "name": "turbottest24230",
    "type": "A",
    "version": "1"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "id": "5b570298-9e7d-4708-b53a-c95c9198d04e",
    "name": "turbottest24230",
    "type": "A",
    "version": "1"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:route53::632902152528:trafficpolicy/5b570298-9e7d-4708-b53a-c95c9198d04e/1"
    ],
    "title": "turbottest24230"
  }
]
✔ PASSED

POSTTEST: tests/aws_route53_traffic_policy

TEARDOWN: tests/aws_route53_traffic_policy

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_traffic_policy_instance []

PRETEST: tests/aws_route53_traffic_policy_instance

TEST: tests/aws_route53_traffic_policy_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_route53_traffic_policy.named_test_resource will be created
  + resource "aws_route53_traffic_policy" "named_test_resource" {
      + comment  = "turbottest99897 comment"
      + document = jsonencode(
            {
              + AWSPolicyFormatVersion = "2015-10-01"
              + Endpoints              = {
                  + endpoint-start-NkPh = {
                      + Type  = "value"
                      + Value = "10.0.0.2"
                    }
                }
              + RecordType             = "A"
              + StartEndpoint          = "endpoint-start-NkPh"
            }
        )
      + id       = (known after apply)
      + name     = "turbottest99897"
      + type     = (known after apply)
      + version  = (known after apply)
    }

  # aws_route53_traffic_policy_instance.named_test_resource will be created
  + resource "aws_route53_traffic_policy_instance" "named_test_resource" {
      + hosted_zone_id         = (known after apply)
      + id                     = (known after apply)
      + name                   = "turbottest99897.turbottest99897.com"
      + traffic_policy_id      = (known after apply)
      + traffic_policy_version = 1
      + ttl                    = 60
    }

  # aws_route53_zone.named_test_resource will be created
  + resource "aws_route53_zone" "named_test_resource" {
      + arn           = (known after apply)
      + comment       = "Managed by Terraform"
      + force_destroy = false
      + id            = (known after apply)
      + name          = "turbottest99897.com"
      + name_servers  = (known after apply)
      + tags_all      = (known after apply)
      + zone_id       = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_region             = "us-east-1"
  + hosted_zone_id         = (known after apply)
  + id                     = (known after apply)
  + resource_aka           = (known after apply)
  + resource_name          = "turbottest99897"
  + traffic_policy_id      = (known after apply)
  + traffic_policy_version = (known after apply)
  + ttl                    = 60
aws_route53_zone.named_test_resource: Creating...
aws_route53_traffic_policy.named_test_resource: Creating...
aws_route53_traffic_policy.named_test_resource: Creation complete after 1s [id=8b10d023-4398-4115-8c38-c64fc0c692fc]
aws_route53_zone.named_test_resource: Still creating... [10s elapsed]
aws_route53_zone.named_test_resource: Still creating... [20s elapsed]
aws_route53_zone.named_test_resource: Still creating... [30s elapsed]
aws_route53_zone.named_test_resource: Still creating... [40s elapsed]
aws_route53_zone.named_test_resource: Creation complete after 47s [id=Z04058103FTJDIHDO4EC9]
aws_route53_traffic_policy_instance.named_test_resource: Creating...
aws_route53_traffic_policy_instance.named_test_resource: Still creating... [10s elapsed]
aws_route53_traffic_policy_instance.named_test_resource: Still creating... [20s elapsed]
aws_route53_traffic_policy_instance.named_test_resource: Still creating... [30s elapsed]
aws_route53_traffic_policy_instance.named_test_resource: Still creating... [40s elapsed]
aws_route53_traffic_policy_instance.named_test_resource: Creation complete after 48s [id=7a94796d-b199-4328-a4f5-4f97b7bd13dd]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 56, in data "null_data_source" "resource":
  56: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
hosted_zone_id = "Z04058103FTJDIHDO4EC9"
id = "7a94796d-b199-4328-a4f5-4f97b7bd13dd"
resource_aka = "arn:aws:route53::632902152528:trafficpolicyinstance/7a94796d-b199-4328-a4f5-4f97b7bd13dd"
resource_name = "turbottest99897"
traffic_policy_id = "8b10d023-4398-4115-8c38-c64fc0c692fc"
traffic_policy_version = 1
ttl = 60

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_route53_traffic_policy_instance" does not exist (SQLSTATE 42P01)
{}
[
  {
    "hosted_zone_id": "Z04058103FTJDIHDO4EC9",
    "id": "7a94796d-b199-4328-a4f5-4f97b7bd13dd",
    "name": "turbottest99897.turbottest99897.com.",
    "traffic_policy_id": "8b10d023-4398-4115-8c38-c64fc0c692fc",
    "traffic_policy_version": "1",
    "ttl": "60"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_route53_traffic_policy_instance" does not exist (SQLSTATE 42P01)
{}
[
  {
    "hosted_zone_id": "Z04058103FTJDIHDO4EC9",
    "id": "7a94796d-b199-4328-a4f5-4f97b7bd13dd",
    "name": "turbottest99897.turbottest99897.com.",
    "traffic_policy_id": "8b10d023-4398-4115-8c38-c64fc0c692fc",
    "traffic_policy_version": "1",
    "ttl": "60"
  }
]

✘ FAILED

Running SQL query: test-not-found-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_route53_traffic_policy_instance" does not exist (SQLSTATE 42P01)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws.aws_route53_traffic_policy_instance" does not exist (SQLSTATE 42P01)
{}
[
  {
    "akas": [
      "arn:aws:route53::632902152528:trafficpolicyinstance/7a94796d-b199-4328-a4f5-4f97b7bd13dd"
    ],
    "title": "turbottest99897.turbottest99897.com."
  }
]

✘ FAILED

TEARDOWN: tests/aws_route53_traffic_policy_instance

SUMMARY:

✘ tests/aws_route53_traffic_policy_instance failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_route53_zone []

PRETEST: tests/aws_route53_zone

TEST: tests/aws_route53_zone
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.aws_route53_example_com will be created
  + resource "aws_cloudwatch_log_group" "aws_route53_example_com" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "/aws/route53/turbottest82201.com"
      + retention_in_days = 30
      + tags_all          = (known after apply)
    }

  # aws_cloudwatch_log_resource_policy.route53-query-logging-policy will be created
  + resource "aws_cloudwatch_log_resource_policy" "route53-query-logging-policy" {
      + id              = (known after apply)
      + policy_document = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "logs:PutLogEvents",
                          + "logs:CreateLogStream",
                        ]
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "route53.amazonaws.com"
                        }
                      + Resource  = "arn:aws:logs:*:*:log-group:/aws/route53/*"
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_name     = "route53-query-logging-policy"
    }

  # aws_kms_key.example will be created
  + resource "aws_kms_key" "example" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "ECC_NIST_P256"
      + deletion_window_in_days            = 7
      + description                        = (known after apply)
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "SIGN_VERIFY"
      + multi_region                       = (known after apply)
      + policy                             = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "kms:DescribeKey",
                          + "kms:GetPublicKey",
                          + "kms:Sign",
                        ]
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "api-service.dnssec.route53.aws.internal"
                        }
                      + Sid       = "Route 53 DNSSEC Permissions"
                    },
                  + {
                      + Action    = "kms:*"
                      + Effect    = "Allow"
                      + Principal = {
                          + AWS = "*"
                        }
                      + Resource  = "*"
                      + Sid       = "IAM User Permissions"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + tags_all                           = (known after apply)
    }

  # aws_route53_hosted_zone_dnssec.example will be created
  + resource "aws_route53_hosted_zone_dnssec" "example" {
      + hosted_zone_id = (known after apply)
      + id             = (known after apply)
      + signing_status = "SIGNING"
    }

  # aws_route53_key_signing_key.example will be created
  + resource "aws_route53_key_signing_key" "example" {
      + digest_algorithm_mnemonic  = (known after apply)
      + digest_algorithm_type      = (known after apply)
      + digest_value               = (known after apply)
      + dnskey_record              = (known after apply)
      + ds_record                  = (known after apply)
      + flag                       = (known after apply)
      + hosted_zone_id             = (known after apply)
      + id                         = (known after apply)
      + key_management_service_arn = (known after apply)
      + key_tag                    = (known after apply)
      + name                       = "turbottest82201"
      + public_key                 = (known after apply)
      + signing_algorithm_mnemonic = (known after apply)
      + signing_algorithm_type     = (known after apply)
      + status                     = "ACTIVE"
    }

  # aws_route53_query_log.example_com will be created
  + resource "aws_route53_query_log" "example_com" {
      + arn                      = (known after apply)
      + cloudwatch_log_group_arn = (known after apply)
      + id                       = (known after apply)
      + zone_id                  = (known after apply)
    }

  # aws_route53_zone.named_test_resource will be created
  + resource "aws_route53_zone" "named_test_resource" {
      + arn           = (known after apply)
      + comment       = "Test zone"
      + force_destroy = true
      + id            = (known after apply)
      + name          = "turbottest82201.com"
      + name_servers  = (known after apply)
      + tags          = {
          + "name" = "turbottest82201"
        }
      + tags_all      = {
          + "name" = "turbottest82201"
        }
      + zone_id       = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id                 = "632902152528"
  + aws_region                 = "us-east-1"
  + cloudwatch_log_group_arn   = (known after apply)
  + digest_algorithm_mnemonic  = (known after apply)
  + kms_arn                    = (known after apply)
  + logging_configuration_id   = (known after apply)
  + resource_aka               = (known after apply)
  + resource_name              = "turbottest82201"
  + signing_algorithm_mnemonic = (known after apply)
  + zone_id                    = (known after apply)
aws_route53_zone.named_test_resource: Creating...
aws_cloudwatch_log_resource_policy.route53-query-logging-policy: Creating...
aws_kms_key.example: Creating...
aws_cloudwatch_log_resource_policy.route53-query-logging-policy: Creation complete after 1s [id=route53-query-logging-policy]
aws_kms_key.example: Creation complete after 6s [id=1afd8617-11d9-481f-8635-a9d0e455372b]
aws_route53_zone.named_test_resource: Still creating... [10s elapsed]
aws_route53_zone.named_test_resource: Still creating... [20s elapsed]
aws_route53_zone.named_test_resource: Creation complete after 25s [id=Z09811272RYXX7KA03EZK]
aws_cloudwatch_log_group.aws_route53_example_com: Creating...
aws_route53_key_signing_key.example: Creating...
aws_cloudwatch_log_group.aws_route53_example_com: Creation complete after 1s [id=/aws/route53/turbottest82201.com]
aws_route53_query_log.example_com: Creating...
aws_route53_query_log.example_com: Creation complete after 1s [id=95a4121a-3ab7-4a01-99b6-a1a548c77a66]
aws_route53_key_signing_key.example: Still creating... [10s elapsed]
aws_route53_key_signing_key.example: Still creating... [20s elapsed]
aws_route53_key_signing_key.example: Still creating... [30s elapsed]
aws_route53_key_signing_key.example: Creation complete after 39s [id=Z09811272RYXX7KA03EZK,turbottest82201]
aws_route53_hosted_zone_dnssec.example: Creating...
aws_route53_hosted_zone_dnssec.example: Still creating... [10s elapsed]
aws_route53_hosted_zone_dnssec.example: Still creating... [20s elapsed]
aws_route53_hosted_zone_dnssec.example: Still creating... [30s elapsed]
aws_route53_hosted_zone_dnssec.example: Still creating... [40s elapsed]
aws_route53_hosted_zone_dnssec.example: Creation complete after 45s [id=Z09811272RYXX7KA03EZK]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
cloudwatch_log_group_arn = "arn:aws:logs:us-east-1:632902152528:log-group:/aws/route53/turbottest82201.com"
digest_algorithm_mnemonic = "SHA-256"
kms_arn = "arn:aws:kms:us-east-1:632902152528:key/1afd8617-11d9-481f-8635-a9d0e455372b"
logging_configuration_id = "95a4121a-3ab7-4a01-99b6-a1a548c77a66"
resource_aka = "arn:aws:route53:::hostedzone/Z09811272RYXX7KA03EZK"
resource_name = "turbottest82201"
signing_algorithm_mnemonic = "ECDSAP256SHA256"
zone_id = "Z09811272RYXX7KA03EZK"

Running SQL query: test-get-query.sql
[
  {
    "comment": "Test zone",
    "id": "Z09811272RYXX7KA03EZK",
    "name": "turbottest82201.com.",
    "private_zone": false,
    "resource_record_set_count": 2
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "digest_algorithm_mnemonic": "SHA-256",
    "kms_arn": "arn:aws:kms:us-east-1:632902152528:key/1afd8617-11d9-481f-8635-a9d0e455372b",
    "name": "turbottest82201.com.",
    "query_logging_configs": [
      {
        "CloudWatchLogsLogGroupArn": "arn:aws:logs:us-east-1:632902152528:log-group:/aws/route53/turbottest82201.com",
        "HostedZoneId": "Z09811272RYXX7KA03EZK",
        "Id": "95a4121a-3ab7-4a01-99b6-a1a548c77a66"
      }
    ],
    "signing_algorithm_mnemonic": "ECDSAP256SHA256",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest82201"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-invalid-id-query.sql
null
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "comment": "Test zone",
    "id": "Z09811272RYXX7KA03EZK",
    "name": "turbottest82201.com."
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:route53:::hostedzone/Z09811272RYXX7KA03EZK"
    ],
    "tags": {
      "name": "turbottest82201"
    },
    "title": "turbottest82201.com."
  }
]
✔ PASSED

POSTTEST: tests/aws_route53_zone

TEARDOWN: tests/aws_route53_zone

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_s3_access_point []

PRETEST: tests/aws_s3_access_point

TEST: tests/aws_s3_access_point
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_access_point.named_test_resource will be created
  + resource "aws_s3_access_point" "named_test_resource" {
      + account_id               = (known after apply)
      + alias                    = (known after apply)
      + arn                      = (known after apply)
      + bucket                   = (known after apply)
      + domain_name              = (known after apply)
      + endpoints                = (known after apply)
      + has_public_access_policy = (known after apply)
      + id                       = (known after apply)
      + name                     = "turbottest2873"
      + network_origin           = (known after apply)
      + policy                   = (known after apply)

      + vpc_configuration {
          + vpc_id = (known after apply)
        }
    }

  # aws_s3_bucket.named_test_resource will be created
  + resource "aws_s3_bucket" "named_test_resource" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest2873"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id               = "632902152528"
  + arn                      = (known after apply)
  + aws_partition            = "aws"
  + has_public_access_policy = (known after apply)
  + network_origin           = (known after apply)
  + region_id                = (known after apply)
  + resource_id              = (known after apply)
  + resource_name            = "turbottest2873"
  + vpc_id                   = (known after apply)
aws_vpc.named_test_resource: Creating...
aws_s3_bucket.named_test_resource: Creating...
aws_vpc.named_test_resource: Creation complete after 3s [id=vpc-05aaade7e4631ddcd]
aws_s3_bucket.named_test_resource: Creation complete after 4s [id=turbottest2873]
aws_s3_access_point.named_test_resource: Creating...
aws_s3_access_point.named_test_resource: Creation complete after 1s [id=632902152528:turbottest2873]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
arn = "arn:aws:s3:us-east-1:632902152528:accesspoint/turbottest2873"
aws_partition = "aws"
has_public_access_policy = false
network_origin = "VPC"
region_id = "us-east-1"
resource_id = "632902152528:turbottest2873"
resource_name = "turbottest2873"
vpc_id = "vpc-05aaade7e4631ddcd"

Running SQL query: test-get-query.sql
[
  {
    "access_point_arn": "arn:aws:s3:us-east-1:632902152528:accesspoint/turbottest2873",
    "account_id": "632902152528",
    "block_public_acls": true,
    "block_public_policy": true,
    "bucket_name": "turbottest2873",
    "ignore_public_acls": true,
    "name": "turbottest2873",
    "network_origin": "VPC",
    "partition": "aws",
    "region": "us-east-1",
    "restrict_public_buckets": true,
    "vpc_id": "vpc-05aaade7e4631ddcd"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "access_point_policy_is_public": false,
    "name": "turbottest2873"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "access_point_arn": "arn:aws:s3:us-east-1:632902152528:accesspoint/turbottest2873",
    "name": "turbottest2873"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:s3:us-east-1:632902152528:accesspoint/turbottest2873"
    ],
    "title": "turbottest2873"
  }
]
✔ PASSED

POSTTEST: tests/aws_s3_access_point

TEARDOWN: tests/aws_s3_access_point

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_s3_bucket []

PRETEST: tests/aws_s3_bucket

TEST: tests/aws_s3_bucket
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_kms_key.mykey will be created
  + resource "aws_kms_key" "mykey" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + deletion_window_in_days            = 10
      + description                        = "This key is used to encrypt bucket objects"
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = (known after apply)
      + policy                             = (known after apply)
      + tags_all                           = (known after apply)
    }

  # aws_s3_bucket.named_test_resource will be created
  + resource "aws_s3_bucket" "named_test_resource" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest28172"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "name" = "turbottest28172"
        }
      + tags_all                    = {
          + "name" = "turbottest28172"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = [
              + "*",
            ]
          + allowed_methods = [
              + "PUT",
              + "POST",
            ]
          + allowed_origins = [
              + "https://s3-website-test.hashicorp.com",
            ]
          + expose_headers  = [
              + "ETag",
            ]
          + max_age_seconds = 3000
        }

      + grant {
          + id          = "d1a8fb36ce85e6f4a77eec13f53958565ce292fb0c7f8fce671bb0a9eb25dd40"
          + permissions = [
              + "FULL_CONTROL",
            ]
          + type        = "CanonicalUser"
        }

      + lifecycle_rule {
          + enabled = true
          + id      = "log"
          + prefix  = "log/"
          + tags    = {
              + "autoclean" = "true"
              + "rule"      = "log"
            }

          + expiration {
              + days = 90
            }

          + transition {
              + days          = 30
              + storage_class = "STANDARD_IA"
            }
          + transition {
              + days          = 60
              + storage_class = "GLACIER"
            }
        }
      + lifecycle_rule {
          + enabled = true
          + id      = "tmp"
          + prefix  = "tmp/"

          + expiration {
              + date = "2022-01-12"
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = "Enabled"
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_s3_bucket_policy.b will be created
  + resource "aws_s3_bucket_policy" "b" {
      + bucket = (known after apply)
      + id     = (known after apply)
      + policy = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id        = "632902152528"
  + aws_partition     = "aws"
  + canonical_user_id = "d1a8fb36ce85e6f4a77eec13f53958565ce292fb0c7f8fce671bb0a9eb25dd40"
  + kms_key_id        = (known after apply)
  + resource_aka      = (known after apply)
  + resource_name     = "turbottest28172"
aws_kms_key.mykey: Creating...
aws_s3_bucket.named_test_resource: Creating...
aws_kms_key.mykey: Creation complete after 2s [id=a510c71d-7e77-4a3d-98ee-5fe6a5ff22d4]
aws_s3_bucket.named_test_resource: Creation complete after 7s [id=turbottest28172]
aws_s3_bucket_policy.b: Creating...
aws_s3_bucket_policy.b: Creation complete after 0s [id=turbottest28172]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 48, in data "null_data_source" "resource":
  48: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_s3_bucket.named_test_resource,
  on variables.tf line 59, in resource "aws_s3_bucket" "named_test_resource":
  59: resource "aws_s3_bucket" "named_test_resource" {

Use the aws_s3_bucket_lifecycle_configuration resource instead

(and 17 more similar warnings elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
canonical_user_id = "d1a8fb36ce85e6f4a77eec13f53958565ce292fb0c7f8fce671bb0a9eb25dd40"
kms_key_id = "arn:aws:kms:us-east-2:632902152528:key/a510c71d-7e77-4a3d-98ee-5fe6a5ff22d4"
resource_aka = "arn:aws:s3:::turbottest28172"
resource_name = "turbottest28172"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:s3:::turbottest28172"
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "acl": {
      "Grants": [
        {
          "Grantee": {
            "DisplayName": null,
            "EmailAddress": null,
            "ID": "d1a8fb36ce85e6f4a77eec13f53958565ce292fb0c7f8fce671bb0a9eb25dd40",
            "Type": "CanonicalUser",
            "URI": null
          },
          "Permission": "FULL_CONTROL"
        }
      ],
      "Owner": {
        "DisplayName": null,
        "ID": "d1a8fb36ce85e6f4a77eec13f53958565ce292fb0c7f8fce671bb0a9eb25dd40"
      }
    },
    "bucket_policy_is_public": false,
    "lifecycle_rules": [
      {
        "AbortIncompleteMultipartUpload": null,
        "Expiration": {
          "Date": null,
          "Days": 90,
          "ExpiredObjectDeleteMarker": null
        },
        "Filter": {
          "And": {
            "ObjectSizeGreaterThan": null,
            "ObjectSizeLessThan": null,
            "Prefix": "log/",
            "Tags": [
              {
                "Key": "autoclean",
                "Value": "true"
              },
              {
                "Key": "rule",
                "Value": "log"
              },
              {
                "Key": "autoclean",
                "Value": "true"
              }
            ]
          },
          "ObjectSizeGreaterThan": null,
          "ObjectSizeLessThan": null,
          "Prefix": null,
          "Tag": null
        },
        "ID": "log",
        "NoncurrentVersionExpiration": null,
        "NoncurrentVersionTransitions": null,
        "Prefix": null,
        "Status": "Enabled",
        "Transitions": [
          {
            "Date": null,
            "Days": 60,
            "StorageClass": "GLACIER"
            "Days": 30,
            "StorageClass": "STANDARD_IA"
          },
          {
            "Date": null,
            "Days": 30,
            "StorageClass": "STANDARD_IA"
            "Days": 60,
            "StorageClass": "GLACIER"
          }
        ]
      },
      {
        "AbortIncompleteMultipartUpload": null,
        "Expiration": {
          "Date": "2022-01-12T00:00:00Z",
          "Days": null,
          "ExpiredObjectDeleteMarker": null
        },
        "Filter": {
          "And": null,
          "ObjectSizeGreaterThan": null,
          "ObjectSizeLessThan": null,
          "Prefix": "tmp/",
          "Tag": null
        },
        "ID": "tmp",
        "NoncurrentVersionExpiration": null,
        "NoncurrentVersionTransitions": null,
        "Prefix": null,
        "Status": "Enabled",
        "Transitions": null
      }
    ],
    "logging": null,
    "name": "turbottest28172",
    "object_lock_configuration": {
      "ObjectLockEnabled": "Enabled",
      "Rule": null
    },
    "policy": {
      "Id": "MYBUCKETPOLICY",
      "Statement": [
        {
          "Action": "s3:*",
          "Condition": {
            "IpAddress": {
              "aws:SourceIp": "8.8.8.8/32"
            }
          },
          "Effect": "Deny",
          "Principal": "*",
          "Resource": "arn:aws:s3:::turbottest28172/*",
          "Sid": "IPAllow"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Id": "MYBUCKETPOLICY",
      "Statement": [
        {
          "Action": [
            "s3:*"
          ],
          "Condition": {
            "IpAddress": {
              "aws:sourceip": [
                "8.8.8.8/32"
              ]
            }
          },
          "Effect": "Deny",
          "Principal": {
            "AWS": [
              "*"
            ]
          },
          "Resource": [
            "arn:aws:s3:::turbottest28172/*"
          ],
          "Sid": "IPAllow"
        }
      ],
      "Version": "2012-10-17"
    },
    "replication": null,
    "server_side_encryption_configuration": null,
    "server_side_encryption_configuration": {
      "Rules": [
        {
          "ApplyServerSideEncryptionByDefault": {
            "KMSMasterKeyID": "arn:aws:kms:us-east-2:632902152528:key/a510c71d-7e77-4a3d-98ee-5fe6a5ff22d4",
            "SSEAlgorithm": "aws:kms"
          },
          "BucketKeyEnabled": false
        }
      ]
    },
    "versioning_enabled": true,
    "versioning_mfa_delete": false
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:s3:::turbottest28172"
    ],
    "block_public_acls": false,
    "block_public_policy": false,
    "bucket_policy_is_public": false,
    "ignore_public_acls": false,
    "lifecycle_rules": [
      {
        "AbortIncompleteMultipartUpload": null,
        "Expiration": {
          "Date": null,
          "Days": 90,
          "ExpiredObjectDeleteMarker": null
        },
        "Filter": {
          "And": {
            "ObjectSizeGreaterThan": null,
            "ObjectSizeLessThan": null,
            "Prefix": "log/",
            "Tags": [
              {
                "Key": "autoclean",
                "Value": "true"
              },
              {
                "Key": "rule",
                "Value": "log"
              },
              {
                "Key": "autoclean",
                "Value": "true"
              }
            ]
          },
          "ObjectSizeGreaterThan": null,
          "ObjectSizeLessThan": null,
          "Prefix": null,
          "Tag": null
        },
        "ID": "log",
        "NoncurrentVersionExpiration": null,
        "NoncurrentVersionTransitions": null,
        "Prefix": null,
        "Status": "Enabled",
        "Transitions": [
          {
            "Date": null,
            "Days": 60,
            "StorageClass": "GLACIER"
            "Days": 30,
            "StorageClass": "STANDARD_IA"
          },
          {
            "Date": null,
            "Days": 30,
            "StorageClass": "STANDARD_IA"
            "Days": 60,
            "StorageClass": "GLACIER"
          }
        ]
      },
      {
        "AbortIncompleteMultipartUpload": null,
        "Expiration": {
          "Date": "2022-01-12T00:00:00Z",
          "Days": null,
          "ExpiredObjectDeleteMarker": null
        },
        "Filter": {
          "And": null,
          "ObjectSizeGreaterThan": null,
          "ObjectSizeLessThan": null,
          "Prefix": "tmp/",
          "Tag": null
        },
        "ID": "tmp",
        "NoncurrentVersionExpiration": null,
        "NoncurrentVersionTransitions": null,
        "Prefix": null,
        "Status": "Enabled",
        "Transitions": null
      }
    ],
    "logging": null,
    "name": "turbottest28172",
    "partition": "aws",
    "restrict_public_buckets": false,
    "server_side_encryption_configuration": null,
    "server_side_encryption_configuration": {
      "Rules": [
        {
          "ApplyServerSideEncryptionByDefault": {
            "KMSMasterKeyID": "arn:aws:kms:us-east-2:632902152528:key/a510c71d-7e77-4a3d-98ee-5fe6a5ff22d4",
            "SSEAlgorithm": "aws:kms"
          },
          "BucketKeyEnabled": false
        }
      ]
    },
    "tags": {
      "name": "turbottest28172"
    },
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest28172"
      }
    ],
    "title": "turbottest28172",
    "versioning_enabled": true,
    "versioning_mfa_delete": false
  }
]

✘ FAILED

TEARDOWN: tests/aws_s3_bucket

SUMMARY:

✘ tests/aws_s3_bucket failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sagemaker_app []

PRETEST: tests/aws_sagemaker_app

TEST: tests/aws_sagemaker_app
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.my_role will be created
  + resource "aws_iam_role" "my_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "sagemaker.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest11464"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sagemaker_app.named_test_resource will be created
  + resource "aws_sagemaker_app" "named_test_resource" {
      + app_name          = "turbottest11464"
      + app_type          = "JupyterServer"
      + arn               = (known after apply)
      + domain_id         = (known after apply)
      + id                = (known after apply)
      + tags              = {
          + "name" = "turbottest11464"
        }
      + tags_all          = {
          + "name" = "turbottest11464"
        }
      + user_profile_name = "turbottest11464"

      + resource_spec {
          + instance_type               = (known after apply)
          + lifecycle_config_arn        = (known after apply)
          + sagemaker_image_arn         = (known after apply)
          + sagemaker_image_version_arn = (known after apply)
        }
    }

  # aws_sagemaker_domain.named_test_resource will be created
  + resource "aws_sagemaker_domain" "named_test_resource" {
      + app_network_access_type                        = "PublicInternetOnly"
      + arn                                            = (known after apply)
      + auth_mode                                      = "IAM"
      + domain_name                                    = "turbottest11464"
      + home_efs_file_system_id                        = (known after apply)
      + id                                             = (known after apply)
      + single_sign_on_managed_application_instance_id = (known after apply)
      + subnet_ids                                     = (known after apply)
      + tags_all                                       = (known after apply)
      + url                                            = (known after apply)
      + vpc_id                                         = (known after apply)

      + default_user_settings {
          + execution_role = (known after apply)
        }
    }

  # aws_sagemaker_user_profile.named_test_resource will be created
  + resource "aws_sagemaker_user_profile" "named_test_resource" {
      + arn                      = (known after apply)
      + domain_id                = (known after apply)
      + home_efs_file_system_uid = (known after apply)
      + id                       = (known after apply)
      + tags_all                 = (known after apply)
      + user_profile_name        = "turbottest11464"
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id        = "632902152528"
  + aws_partition     = "aws"
  + aws_region        = "us-east-1"
  + resource_aka      = (known after apply)
  + resource_id       = (known after apply)
  + resource_name     = "turbottest11464"
  + tags              = "turbottest11464"
  + user_profile_name = "turbottest11464"
aws_iam_role.my_role: Creating...
aws_vpc.named_test_resource: Creating...
aws_iam_role.my_role: Creation complete after 1s [id=turbottest11464]
aws_vpc.named_test_resource: Creation complete after 2s [id=vpc-0c3cef679adaaf0ac]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 2s [id=subnet-0eaf51c1e9cb0524d]
aws_sagemaker_domain.named_test_resource: Creating...
aws_sagemaker_domain.named_test_resource: Still creating... [10s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [20s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [30s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [40s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [50s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m0s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m10s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m20s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m30s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m40s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m50s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m0s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m10s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m20s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m30s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m40s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m50s elapsed]
aws_sagemaker_domain.named_test_resource: Creation complete after 2m58s [id=d-qzmcoyeob89p]
aws_sagemaker_user_profile.named_test_resource: Creating...
aws_sagemaker_user_profile.named_test_resource: Still creating... [10s elapsed]
aws_sagemaker_user_profile.named_test_resource: Still creating... [20s elapsed]
aws_sagemaker_user_profile.named_test_resource: Still creating... [30s elapsed]
aws_sagemaker_user_profile.named_test_resource: Creation complete after 37s [id=arn:aws:sagemaker:us-east-1:632902152528:user-profile/d-qzmcoyeob89p/turbottest11464]
aws_sagemaker_app.named_test_resource: Creating...
aws_sagemaker_app.named_test_resource: Still creating... [10s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [20s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [30s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [40s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [50s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [1m0s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [1m10s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [1m20s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [1m30s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [1m40s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [1m50s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [2m0s elapsed]
aws_sagemaker_app.named_test_resource: Still creating... [2m10s elapsed]
aws_sagemaker_app.named_test_resource: Creation complete after 2m15s [id=arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 50, in data "null_data_source" "resource":
  50: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 6 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464"
resource_id = "arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464"
resource_name = "turbottest11464"
tags = "turbottest11464"
user_profile_name = "turbottest11464"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464",
    "name": "turbottest11464",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464"
    ],
    "name": "turbottest11464"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464",
    "name": "turbottest11464",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: column "tags" does not exist (SQLSTATE 42703)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:app/d-qzmcoyeob89p/turbottest11464/jupyterserver/turbottest11464"
    ],
    "region": "us-east-1",
    "title": "turbottest11464"
  }
]
✔ PASSED

TEARDOWN: tests/aws_sagemaker_app


Error: error deleting EC2 Subnet (subnet-0eaf51c1e9cb0524d): DependencyViolation: The subnet 'subnet-0eaf51c1e9cb0524d' has dependencies and cannot be deleted.
	status code: 400, request id: f82b8e62-450c-4252-9308-7473f26009c5

SUMMARY:

✘ tests/aws_sagemaker_app failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sagemaker_domain []

PRETEST: tests/aws_sagemaker_domain

TEST: tests/aws_sagemaker_domain
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.my_role will be created
  + resource "aws_iam_role" "my_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "sagemaker.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest13450"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sagemaker_domain.named_test_resource will be created
  + resource "aws_sagemaker_domain" "named_test_resource" {
      + app_network_access_type                        = "PublicInternetOnly"
      + arn                                            = (known after apply)
      + auth_mode                                      = "IAM"
      + domain_name                                    = "turbottest13450"
      + home_efs_file_system_id                        = (known after apply)
      + id                                             = (known after apply)
      + single_sign_on_managed_application_instance_id = (known after apply)
      + subnet_ids                                     = (known after apply)
      + tags_all                                       = (known after apply)
      + url                                            = (known after apply)
      + vpc_id                                         = (known after apply)

      + default_user_settings {
          + execution_role = (known after apply)
        }
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest13450"
aws_iam_role.my_role: Creating...
aws_vpc.named_test_resource: Creating...
aws_iam_role.my_role: Creation complete after 2s [id=turbottest13450]
aws_vpc.named_test_resource: Creation complete after 3s [id=vpc-098f6779437de7892]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-07d1f42f04f183d83]
aws_sagemaker_domain.named_test_resource: Creating...
aws_sagemaker_domain.named_test_resource: Still creating... [10s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [20s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [30s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [40s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [50s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m0s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m10s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m20s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m30s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m40s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [1m50s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m0s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m10s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m20s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m30s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m40s elapsed]
aws_sagemaker_domain.named_test_resource: Still creating... [2m50s elapsed]
aws_sagemaker_domain.named_test_resource: Creation complete after 2m58s [id=d-mlw8qa9obvmn]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 50, in data "null_data_source" "resource":
  50: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:sagemaker:us-east-1:632902152528:domain/d-mlw8qa9obvmn"
resource_id = "d-mlw8qa9obvmn"
resource_name = "turbottest13450"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:domain/d-mlw8qa9obvmn",
    "name": "turbottest13450",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:domain/d-mlw8qa9obvmn"
    ],
    "name": "turbottest13450"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:domain/d-mlw8qa9obvmn",
    "name": "turbottest13450",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:domain/d-mlw8qa9obvmn"
    ],
    "region": "us-east-1",
    "title": "turbottest13450"
  }
]
✔ PASSED

POSTTEST: tests/aws_sagemaker_domain

TEARDOWN: tests/aws_sagemaker_domain


Error: error deleting EC2 Subnet (subnet-07d1f42f04f183d83): DependencyViolation: The subnet 'subnet-07d1f42f04f183d83' has dependencies and cannot be deleted.
	status code: 400, request id: a26d3f93-fe76-4b01-a63e-a6b4d6d52132

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sagemaker_endpoint_configuration []

PRETEST: tests/aws_sagemaker_endpoint_configuration

TEST: tests/aws_sagemaker_endpoint_configuration
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecr_repository.named_test_resource will be created
  + resource "aws_ecr_repository" "named_test_resource" {
      + arn                  = (known after apply)
      + id                   = (known after apply)
      + image_tag_mutability = "MUTABLE"
      + name                 = "turbottest37221"
      + registry_id          = (known after apply)
      + repository_url       = (known after apply)
      + tags_all             = (known after apply)

      + image_scanning_configuration {
          + scan_on_push = true
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "sagemaker.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest37221"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sagemaker_endpoint_configuration.named_test_resource will be created
  + resource "aws_sagemaker_endpoint_configuration" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "turbottest37221"
      + tags     = {
          + "name" = "turbottest37221"
        }
      + tags_all = {
          + "name" = "turbottest37221"
        }

      + production_variants {
          + initial_instance_count = 1
          + initial_variant_weight = 1
          + instance_type          = "ml.t2.medium"
          + model_name             = "turbottest37221"
          + variant_name           = "variant-1"
        }
    }

  # aws_sagemaker_model.m will be created
  + resource "aws_sagemaker_model" "m" {
      + arn                = (known after apply)
      + execution_role_arn = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest37221"
      + tags_all           = (known after apply)

      + inference_execution_config {
          + mode = (known after apply)
        }

      + primary_container {
          + image = (known after apply)
          + mode  = "SingleModel"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest37221"
aws_iam_role.named_test_resource: Creating...
aws_ecr_repository.named_test_resource: Creating...
aws_ecr_repository.named_test_resource: Creation complete after 1s [id=turbottest37221]
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest37221]
aws_sagemaker_model.m: Creating...
aws_sagemaker_model.m: Still creating... [10s elapsed]
aws_sagemaker_model.m: Creation complete after 12s [id=turbottest37221]
aws_sagemaker_endpoint_configuration.named_test_resource: Creating...
aws_sagemaker_endpoint_configuration.named_test_resource: Creation complete after 1s [id=turbottest37221]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variable.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:sagemaker:us-east-1:632902152528:endpoint-config/turbottest37221"
resource_name = "turbottest37221"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:endpoint-config/turbottest37221",
    "name": "turbottest37221",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest37221",
    "tags": {
      "name": "turbottest37221"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:endpoint-config/turbottest37221",
    "name": "turbottest37221",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:endpoint-config/turbottest37221"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest37221"
    },
    "title": "turbottest37221"
  }
]
✔ PASSED

POSTTEST: tests/aws_sagemaker_endpoint_configuration

TEARDOWN: tests/aws_sagemaker_endpoint_configuration

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sagemaker_model []

PRETEST: tests/aws_sagemaker_model

TEST: tests/aws_sagemaker_model
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ecr_repository.named_test_resource will be created
  + resource "aws_ecr_repository" "named_test_resource" {
      + arn                  = (known after apply)
      + id                   = (known after apply)
      + image_tag_mutability = "MUTABLE"
      + name                 = "turbottest58377"
      + registry_id          = (known after apply)
      + repository_url       = (known after apply)
      + tags_all             = (known after apply)

      + image_scanning_configuration {
          + scan_on_push = true
        }
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "sagemaker.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest58377"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sagemaker_model.named_test_resource will be created
  + resource "aws_sagemaker_model" "named_test_resource" {
      + arn                = (known after apply)
      + execution_role_arn = (known after apply)
      + id                 = (known after apply)
      + name               = "turbottest58377"
      + tags_all           = (known after apply)

      + inference_execution_config {
          + mode = (known after apply)
        }

      + primary_container {
          + image = (known after apply)
          + mode  = "SingleModel"
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest58377"
aws_ecr_repository.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creating...
aws_ecr_repository.named_test_resource: Creation complete after 1s [id=turbottest58377]
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest58377]
aws_sagemaker_model.named_test_resource: Creating...
aws_sagemaker_model.named_test_resource: Still creating... [10s elapsed]
aws_sagemaker_model.named_test_resource: Creation complete after 12s [id=turbottest58377]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:sagemaker:us-east-1:632902152528:model/turbottest58377"
resource_name = "turbottest58377"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:model/turbottest58377",
    "name": "turbottest58377",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:model/turbottest58377"
    ],
    "name": "turbottest58377"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:model/turbottest58377",
    "name": "turbottest58377",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:model/turbottest58377"
    ],
    "region": "us-east-1",
    "title": "turbottest58377"
  }
]
✔ PASSED

POSTTEST: tests/aws_sagemaker_model

TEARDOWN: tests/aws_sagemaker_model

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sagemaker_notebook_instance []

PRETEST: tests/aws_sagemaker_notebook_instance

TEST: tests/aws_sagemaker_notebook_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.my_role will be created
  + resource "aws_iam_role" "my_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "sagemaker.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest44434"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sagemaker_notebook_instance.named_test_resource will be created
  + resource "aws_sagemaker_notebook_instance" "named_test_resource" {
      + arn                    = (known after apply)
      + direct_internet_access = "Enabled"
      + id                     = (known after apply)
      + instance_type          = "ml.t2.medium"
      + name                   = "turbottest44434"
      + network_interface_id   = (known after apply)
      + platform_identifier    = (known after apply)
      + role_arn               = (known after apply)
      + root_access            = "Enabled"
      + security_groups        = (known after apply)
      + tags                   = {
          + "name" = "turbottest44434"
        }
      + tags_all               = {
          + "name" = "turbottest44434"
        }
      + url                    = (known after apply)
      + volume_size            = 5
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest44434"
aws_iam_role.my_role: Creating...
aws_iam_role.my_role: Creation complete after 2s [id=turbottest44434]
aws_sagemaker_notebook_instance.named_test_resource: Creating...
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [30s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [40s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [50s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [1m0s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [1m10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [1m20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [1m30s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [1m40s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [1m50s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [2m0s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [2m10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [2m20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [2m30s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [2m40s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [2m50s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [3m0s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [3m10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [3m20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [3m30s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [3m40s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [3m50s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [4m0s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [4m10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [4m20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [4m30s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [4m40s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [4m50s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [5m0s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [5m10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [5m20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [5m30s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [5m40s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [5m50s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [6m0s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [6m10s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Still creating... [6m20s elapsed]
aws_sagemaker_notebook_instance.named_test_resource: Creation complete after 6m22s [id=turbottest44434]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:sagemaker:us-east-1:632902152528:notebook-instance/turbottest44434"
resource_id = "turbottest44434"
resource_name = "turbottest44434"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:notebook-instance/turbottest44434",
    "name": "turbottest44434",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest44434"
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:notebook-instance/turbottest44434"
    ],
    "name": "turbottest44434",
    "tags": {
      "name": "turbottest44434"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:sagemaker:us-east-1:632902152528:notebook-instance/turbottest44434",
    "name": "turbottest44434",
    "partition": "aws",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sagemaker:us-east-1:632902152528:notebook-instance/turbottest44434"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest44434"
    },
    "title": "turbottest44434"
  }
]
✔ PASSED

POSTTEST: tests/aws_sagemaker_notebook_instance

TEARDOWN: tests/aws_sagemaker_notebook_instance

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_secretsmanager_secret []

PRETEST: tests/aws_secretsmanager_secret

TEST: tests/aws_secretsmanager_secret
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_secretsmanager_secret.named_test_resource will be created
  + resource "aws_secretsmanager_secret" "named_test_resource" {
      + arn                            = (known after apply)
      + description                    = "Test secret."
      + force_overwrite_replica_secret = false
      + id                             = (known after apply)
      + name                           = "turbottest80942"
      + name_prefix                    = (known after apply)
      + policy                         = (known after apply)
      + recovery_window_in_days        = 30
      + rotation_enabled               = (known after apply)
      + rotation_lambda_arn            = (known after apply)
      + tags                           = {
          + "foo" = "bar"
        }
      + tags_all                       = {
          + "foo" = "bar"
        }

      + replica {
          + kms_key_id         = (known after apply)
          + last_accessed_date = (known after apply)
          + region             = (known after apply)
          + status             = (known after apply)
          + status_message     = (known after apply)
        }

      + rotation_rules {
          + automatically_after_days = 7
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest80942"
aws_secretsmanager_secret.named_test_resource: Creating...
aws_secretsmanager_secret.named_test_resource: Creation complete after 2s [id=arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Warning: Argument is deprecated

  with aws_secretsmanager_secret.named_test_resource,
  on variables.tf line 49, in resource "aws_secretsmanager_secret" "named_test_resource":
  49: resource "aws_secretsmanager_secret" "named_test_resource" {

Use the aws_secretsmanager_secret_rotation resource instead

(and 2 more similar warnings elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv"
resource_name = "turbottest80942"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv"
    ],
    "arn": "arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv",
    "deleted_date": null,
    "description": "Test secret.",
    "kms_key_id": null,
    "last_accessed_date": null,
    "last_rotated_date": null,
    "name": "turbottest80942",
    "owning_service": null,
    "partition": "aws",
    "primary_region": null,
    "region": "us-east-1",
    "replication_status": null,
    "rotation_enabled": null,
    "rotation_lambda_arn": null,
    "rotation_rules": null,
    "secret_versions_to_stages": null,
    "tags": {
      "foo": "bar"
    },
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      }
    ],
    "title": "turbottest80942"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv",
    "name": "turbottest80942",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv"
    ],
    "arn": "arn:aws:secretsmanager:us-east-1:632902152528:secret:turbottest80942-BsHXTv",
    "name": "turbottest80942",
    "region": "us-east-1",
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest80942"
  }
]
✔ PASSED

POSTTEST: tests/aws_secretsmanager_secret

TEARDOWN: tests/aws_secretsmanager_secret

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_action_target []

PRETEST: tests/aws_securityhub_action_target

TEST: tests/aws_securityhub_action_target
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_securityhub_action_target.named_test_resource will be created
  + resource "aws_securityhub_action_target" "named_test_resource" {
      + arn         = (known after apply)
      + description = "This is custom action sends selected findings to chat"
      + id          = (known after apply)
      + identifier  = "SendToChat"
      + name        = "Send notification"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id = "632902152528"
  + arn        = (known after apply)
  + aws_region = "us-east-1"
  + name       = "Send notification"
aws_securityhub_action_target.named_test_resource: Creating...

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Error creating Security Hub custom action target SendToChat: InvalidAccessException: Account 632902152528 is not subscribed to AWS Security Hub
{
  RespMetadata: {
    StatusCode: 401,
    RequestID: "577adc5d-977e-47fc-9af5-b80a6d7483cd"
  },
  Code_: "InvalidAccessException",
  Message_: "Account 632902152528 is not subscribed to AWS Security Hub"
}

  with aws_securityhub_action_target.named_test_resource,
  on variables.tf line 49, in resource "aws_securityhub_action_target" "named_test_resource":
  49: resource "aws_securityhub_action_target" "named_test_resource" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_securityhub_action_target

SUMMARY:

✘ tests/aws_securityhub_action_target failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_hub []

PRETEST: tests/aws_securityhub_hub

TEST: tests/aws_securityhub_hub
Running terraform

Changes to Outputs:
  + aws_account = "632902152528"
  + aws_region  = "us-east-1"

You can apply this plan to save these new output values to the Terraform
state, without changing any real infrastructure.

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_region = "us-east-1"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = ResourceNotFoundException: The HubArn provided is not found for this Account/Region or is malformed
{
  RespMetadata: {
    StatusCode: 401,
    RequestID: "2bb54308-4b84-4e50-851a-5833d95ddf1e"
  },
  Code_: "ResourceNotFoundException",
  Message_: "The HubArn provided is not found for this Account/Region or is malformed"
} (SQLSTATE HV000)
{}
[
  {
    "akas": [
      "arn:aws:securityhub:us-east-1:352685002396:hub/default"
    ],
    "auto_enable_controls": false,
    "hub_arn": "arn:aws:securityhub:us-east-1:352685002396:hub/default",
    "region": "us-east-1"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
null
[
  {
    "akas": [
      "arn:aws:securityhub:us-east-1:352685002396:hub/default"
    ],
    "auto_enable_controls": false,
    "hub_arn": "arn:aws:securityhub:us-east-1:352685002396:hub/default",
    "region": "us-east-1"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = ResourceNotFoundException: The HubArn provided is not found for this Account/Region or is malformed
{
  RespMetadata: {
    StatusCode: 401,
    RequestID: "a8c68618-f44e-4440-9ec2-c1ed78e33374"
  },
  Code_: "ResourceNotFoundException",
  Message_: "The HubArn provided is not found for this Account/Region or is malformed"
} (SQLSTATE HV000)
{}
null

✘ FAILED

Running SQL query: test-turbot-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = ResourceNotFoundException: The HubArn provided is not found for this Account/Region or is malformed
{
  RespMetadata: {
    StatusCode: 401,
    RequestID: "f41300f3-b319-467c-93c7-251b632cc972"
  },
  Code_: "ResourceNotFoundException",
  Message_: "The HubArn provided is not found for this Account/Region or is malformed"
} (SQLSTATE HV000)
{}
[
  {
    "account_id": "352685002396",
    "akas": [
      "arn:aws:securityhub:us-east-1:352685002396:hub/default"
    ],
    "partition": "aws",
    "region": "us-east-1"
  }
]

✘ FAILED

TEARDOWN: tests/aws_securityhub_hub

SUMMARY:

✘ tests/aws_securityhub_hub failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_insight []

PRETEST: tests/aws_securityhub_insight

TEST: tests/aws_securityhub_insight
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.insights will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "insights"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_securityhub_insight/terraform/test/list-insights.json"
      + id             = (known after apply)
    }

  # null_resource.list_insights will be created
  + resource "null_resource" "list_insights" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "ap-south-1"
  + group_by_att  = (known after apply)
  + insight_arn   = (known after apply)
  + name          = (known after apply)
  + resource_name = "turbottest43510"
null_resource.list_insights: Creating...
null_resource.list_insights: Provisioning with 'local-exec'...
null_resource.list_insights (local-exec): Executing: ["/bin/sh" "-c" "aws securityhub get-insights --output json --profile default --region ap-south-1 > /tmp/tests/aws_securityhub_insight/terraform/test/list-insights.json"]
null_resource.list_insights: Creation complete after 1s [id=211006076256496861]
data.local_file.insights: Reading...
data.local_file.insights: Read complete after 0s [id=4a79842822074a0eb5ea5976e2339538f851fb16]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Invalid index

  on variables.tf line 67, in output "insight_arn":
  67:   value = jsondecode(data.local_file.insights.content).Insights[0].InsightArn
    ├────────────────
    │ data.local_file.insights.content is "{\n    \"Insights\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 71, in output "group_by_att":
  71:   value = jsondecode(data.local_file.insights.content).Insights[0].GroupByAttribute
    ├────────────────
    │ data.local_file.insights.content is "{\n    \"Insights\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 75, in output "name":
  75:   value = jsondecode(data.local_file.insights.content).Insights[0].Name
    ├────────────────
    │ data.local_file.insights.content is "{\n    \"Insights\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_securityhub_insight


Error: Invalid index

  on variables.tf line 67, in output "insight_arn":
  67:   value = jsondecode(data.local_file.insights.content).Insights[0].InsightArn
    ├────────────────
    │ data.local_file.insights.content is "{\n    \"Insights\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 71, in output "group_by_att":
  71:   value = jsondecode(data.local_file.insights.content).Insights[0].GroupByAttribute
    ├────────────────
    │ data.local_file.insights.content is "{\n    \"Insights\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 75, in output "name":
  75:   value = jsondecode(data.local_file.insights.content).Insights[0].Name
    ├────────────────
    │ data.local_file.insights.content is "{\n    \"Insights\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.
SUMMARY:

✘ tests/aws_securityhub_insight failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_member []

PRETEST: tests/aws_securityhub_member

TEST: tests/aws_securityhub_member
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_securityhub_account.example1 will be created
  + resource "aws_securityhub_account" "example1" {
      + id = (known after apply)
    }

  # aws_securityhub_member.example1 will be created
  + resource "aws_securityhub_member" "example1" {
      + account_id    = "023456789011"
      + email         = "example@example.com"
      + id            = (known after apply)
      + invite        = true
      + master_id     = (known after apply)
      + member_status = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + administrator_id  = (known after apply)
  + aws_partition     = "aws"
  + aws_region        = "us-west-1"
  + member_account_id = (known after apply)
  + member_status     = (known after apply)
  + resource_name     = "turbottest96993"
aws_securityhub_account.example1: Creating...
aws_securityhub_account.example1: Creation complete after 2s [id=632902152528]
aws_securityhub_member.example1: Creating...
aws_securityhub_member.example1: Creation complete after 1s [id=023456789011]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

administrator_id = "632902152528"
aws_partition = "aws"
aws_region = "us-west-1"
member_account_id = "023456789011"
member_status = "Invited"
resource_name = "turbottest96993"

Running SQL query: test-list-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: relation "aws_securityhub_member" does not exist (SQLSTATE 42P01)
{}
[
  {
    "administrator_id": "632902152528",
    "email": "example@example.com",
    "member_account_id": "023456789011",
    "member_status": "Invited"
  }
]

✘ FAILED

TEARDOWN: tests/aws_securityhub_member

SUMMARY:

✘ tests/aws_securityhub_member failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_product []

PRETEST: tests/aws_securityhub_product

TEST: tests/aws_securityhub_product
Running terraform

Changes to Outputs:
  + aws_account = "632902152528"
  + aws_region  = "us-east-1"

You can apply this plan to save these new output values to the Terraform
state, without changing any real infrastructure.

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

aws_account = "632902152528"
aws_region = "us-east-1"

Running SQL query: test-get-query.sql
Warning: executeQueries: query 1 of 1 failed: ERROR: rpc error: code = Unknown desc = InvalidInputException: productArn: "arn:aws:securityhub:us-east-1::product/aws/guardduty"
{
  RespMetadata: {
    StatusCode: 401,
    RequestID: "39af42e3-b12d-4aa6-b4b5-67a3bab1bc49"
  },
  Code_: "InvalidInputException",
  Message_: "productArn: \"arn:aws:securityhub:us-east-1::product/aws/guardduty\""
} (SQLSTATE HV000)
{}
[
  {
    "activation_url": "https://docs.aws.amazon.com/guardduty/latest/ug/securityhub-integration.html",
    "categories": [
      "User and Entity Behavior Analytics (UEBA)",
      "Network Intrusion Detection Systems (IDS)"
    ],
    "company_name": "Amazon",
    "description": "A threat detection service that continuously monitors for malicious or unauthorized behavior to help you protect your AWS accounts and workloads.",
    "name": "GuardDuty",
    "product_arn": "arn:aws:securityhub:us-east-1::product/aws/guardduty"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "company_name": "Aqua Security",
    "name": "Aqua Security",
    "product_arn": "arn:aws:securityhub:ap-south-1::product/aquasecurity/aquasecurity"
    "product_arn": "arn:aws:securityhub:us-east-1::product/aquasecurity/aquasecurity"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "account_id": "352685002396",
    "akas": [
      "arn:aws:securityhub:ap-south-1::product/aquasecurity/aquasecurity"
      "arn:aws:securityhub:us-east-1::product/aquasecurity/aquasecurity"
    ],
    "name": "Aqua Security",
    "region": "ap-south-1",
    "region": "us-east-1",
    "title": "Aqua Security"
  }
]

✘ FAILED

TEARDOWN: tests/aws_securityhub_product

SUMMARY:

✘ tests/aws_securityhub_product failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_standards_control []

PRETEST: tests/aws_securityhub_standards_control

TEST: tests/aws_securityhub_standards_control
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.control will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "control"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_securityhub_standards_control/terraform/test/control.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id            = "632902152528"
  + aws_region            = "us-east-1"
  + standards_control_arn = (known after apply)
  + title                 = (known after apply)
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "      aws securityhub describe-standards-controls --standards-subscription-arn \"arn:aws:securityhub:us-east-1:632902152528:subscription/aws-foundational-security-best-practices/v/1.0.0\" > /tmp/tests/aws_securityhub_standards_control/terraform/test/control.json;\n"]

null_resource.named_test_resource (local-exec): An error occurred (InvalidAccessException) when calling the DescribeStandardsControls operation: Account 632902152528 is not subscribed to AWS Security Hub

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: local-exec provisioner error

  with null_resource.named_test_resource,
  on variables.tf line 50, in resource "null_resource" "named_test_resource":
  50:   provisioner "local-exec" {

Error running command '      aws securityhub describe-standards-controls
--standards-subscription-arn
"arn:aws:securityhub:us-east-1:632902152528:subscription/aws-foundational-security-best-practices/v/1.0.0"
> /tmp/tests/aws_securityhub_standards_control/terraform/test/control.json;
': exit status 254. Output: 
An error occurred (InvalidAccessException) when calling the
DescribeStandardsControls operation: Account 632902152528 is not subscribed
to AWS Security Hub

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_securityhub_standards_control

SUMMARY:

✘ tests/aws_securityhub_standards_control failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_securityhub_standards_subscription []

PRETEST: tests/aws_securityhub_standards_subscription

TEST: tests/aws_securityhub_standards_subscription
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_securityhub_account.named_test_resource will be created
  + resource "aws_securityhub_account" "named_test_resource" {
      + id = (known after apply)
    }

  # aws_securityhub_standards_subscription.cis will be created
  + resource "aws_securityhub_standards_subscription" "cis" {
      + id            = (known after apply)
      + standards_arn = "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0"
    }

  # aws_securityhub_standards_subscription.pci_321 will be created
  + resource "aws_securityhub_standards_subscription" "pci_321" {
      + id            = (known after apply)
      + standards_arn = "arn:aws:securityhub:us-east-1::standards/pci-dss/v/3.2.1"
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + cis_arn       = (known after apply)
  + pci_321_arn   = (known after apply)
aws_securityhub_account.named_test_resource: Creating...
aws_securityhub_account.named_test_resource: Creation complete after 1s [id=632902152528]
aws_securityhub_standards_subscription.cis: Creating...
aws_securityhub_standards_subscription.pci_321: Creating...
aws_securityhub_standards_subscription.cis: Creation complete after 3s [id=arn:aws:securityhub:us-east-1:632902152528:subscription/cis-aws-foundations-benchmark/v/1.2.0]
aws_securityhub_standards_subscription.pci_321: Creation complete after 9s [id=arn:aws:securityhub:us-east-1:632902152528:subscription/pci-dss/v/3.2.1]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
cis_arn = "arn:aws:securityhub:us-east-1:632902152528:subscription/cis-aws-foundations-benchmark/v/1.2.0"
pci_321_arn = "arn:aws:securityhub:us-east-1:632902152528:subscription/pci-dss/v/3.2.1"

Running SQL query: test-get-query.sql
[
  {
    "enabled_by_default": true,
    "name": "CIS AWS Foundations Benchmark v1.2.0",
    "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    "standards_subscription_arn": null
  },
  {
    "enabled_by_default": true,
    "name": "CIS AWS Foundations Benchmark v1.2.0",
    "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    "standards_subscription_arn": null
  },
  {
    "enabled_by_default": true,
    "name": "CIS AWS Foundations Benchmark v1.2.0",
    "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    "standards_subscription_arn": "arn:aws:securityhub:us-east-1:632902152528:subscription/cis-aws-foundations-benchmark/v/1.2.0"
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
[
  {
    "standards_input": null,
    "standards_status": null,
    "standards_subscription_arn": null
  },
  {
    "standards_input": null,
    "standards_status": null,
    "standards_subscription_arn": null
  },
  {
    "standards_input": null,
    "standards_input": {},
    "standards_status": "INCOMPLETE",
    "standards_subscription_arn": "arn:aws:securityhub:us-east-1:632902152528:subscription/cis-aws-foundations-benchmark/v/1.2.0"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "enabled_by_default": true,
    "name": "CIS AWS Foundations Benchmark v1.2.0",
    "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    "standards_status": null,
    "standards_subscription_arn": null
  },
  {
    "enabled_by_default": true,
    "name": "CIS AWS Foundations Benchmark v1.2.0",
    "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    "standards_status": null,
    "standards_subscription_arn": null
  },
  {
    "enabled_by_default": true,
    "name": "CIS AWS Foundations Benchmark v1.2.0",
    "standards_arn": "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    "standards_status": "INCOMPLETE",
    "standards_subscription_arn": "arn:aws:securityhub:us-east-1:632902152528:subscription/cis-aws-foundations-benchmark/v/1.2.0"
  }
]

✘ FAILED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:securityhub:us-east-1::standards/pci-dss/v/3.2.1"
    ],
    "name": "PCI DSS v3.2.1",
    "region": "us-east-1",
    "title": "PCI DSS v3.2.1"
  },
  {
    "akas": [
      "arn:aws:securityhub:ap-south-1::standards/pci-dss/v/3.2.1"
    ],
    "name": "PCI DSS v3.2.1",
    "region": "ap-south-1",
    "title": "PCI DSS v3.2.1"
  },
  {
    "akas": [
      "arn:aws:securityhub:us-east-2::standards/pci-dss/v/3.2.1"
    ],
    "name": "PCI DSS v3.2.1",
    "region": "us-east-2",
    "title": "PCI DSS v3.2.1"
  }
]

✘ FAILED

TEARDOWN: tests/aws_securityhub_standards_subscription

SUMMARY:

✘ tests/aws_securityhub_standards_subscription failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_serverlessapplicationrepository_application []

PRETEST: tests/aws_serverlessapplicationrepository_application

TEST: tests/aws_serverlessapplicationrepository_application
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_serverlessapplicationrepository_application/terraform/test/output.json"
      + id             = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + arn         = (known after apply)
  + author      = (known after apply)
  + description = (known after apply)
  + name        = (known after apply)
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws serverlessrepo create-application --author testAuthor --description testDescription --name turbottest73683 --output json > /tmp/tests/aws_serverlessapplicationrepository_application/terraform/test/output.json"]
null_resource.named_test_resource: Creation complete after 1s [id=2845905175511709223]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=b12572d375bacb6d2800367c3afc998123845e39]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

arn = "arn:aws:serverlessrepo:us-east-1:632902152528:applications/turbottest73683"
author = "testAuthor"
description = "testDescription"
name = "turbottest73683"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:serverlessrepo:us-east-1:632902152528:applications/turbottest73683",
    "author": "testAuthor",
    "description": "testDescription",
    "name": "turbottest73683"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "arn": "arn:aws:serverlessrepo:us-east-1:632902152528:applications/turbottest73683",
    "author": "testAuthor",
    "description": "testDescription",
    "name": "turbottest73683"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:serverlessrepo:us-east-1:632902152528:applications/turbottest73683"
    ],
    "title": "turbottest73683"
  }
]
✔ PASSED

POSTTEST: tests/aws_serverlessapplicationrepository_application
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # null_resource.destroy_test_resource will be created
  + resource "null_resource" "destroy_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
null_resource.destroy_test_resource: Creating...
null_resource.destroy_test_resource: Provisioning with 'local-exec'...
null_resource.destroy_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws serverlessrepo delete-application --application-id arn:aws:serverlessrepo:us-east-1:632902152528:applications/turbottest73683"]
null_resource.destroy_test_resource: Creation complete after 1s [id=6254702153154542450]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

TEARDOWN: tests/aws_serverlessapplicationrepository_application


SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_servicequotas_default_service_quota []

PRETEST: tests/aws_servicequotas_default_service_quota

TEST: tests/aws_servicequotas_default_service_quota
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.service_quota will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "service_quota"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_servicequotas_default_service_quota/terraform/test/quota.json"
      + id             = (known after apply)
    }

  # null_resource.service_quota will be created
  + resource "null_resource" "service_quota" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + quota_code   = (known after apply)
  + quota_name   = (known after apply)
  + resource_aka = (known after apply)
  + service_code = (known after apply)
  + service_name = (known after apply)
null_resource.service_quota: Creating...
null_resource.service_quota: Provisioning with 'local-exec'...
null_resource.service_quota (local-exec): Executing: ["/bin/sh" "-c" "aws service-quotas get-aws-default-service-quota --service-code account --quota-code L-77A32B3F > /tmp/tests/aws_servicequotas_default_service_quota/terraform/test/quota.json"]
null_resource.service_quota: Creation complete after 1s [id=5203898414842287639]
data.local_file.service_quota: Reading...
data.local_file.service_quota: Read complete after 0s [id=7991eb4d6e8d660075b51a4f78f99a9c4fda05e9]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

quota_code = "L-77A32B3F"
quota_name = "Rate of PutAlternateContact requests per account"
resource_aka = "arn:aws:servicequotas:::account/L-77A32B3F"
service_code = "account"
service_name = "AWS Account Management"

Running SQL query: test-get-query.sql
[
  {
    "quota_arn": "arn:aws:servicequotas:::account/L-77A32B3F",
    "quota_name": "Rate of PutAlternateContact requests per account"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "quota_arn": "arn:aws:servicequotas:::account/L-77A32B3F",
    "quota_name": "Rate of PutAlternateContact requests per account"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:servicequotas:::account/L-77A32B3F"
    ],
    "title": "Rate of PutAlternateContact requests per account"
  }
]
✔ PASSED

POSTTEST: tests/aws_servicequotas_default_service_quota

TEARDOWN: tests/aws_servicequotas_default_service_quota

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_servicequotas_service_quota []

PRETEST: tests/aws_servicequotas_service_quota

TEST: tests/aws_servicequotas_service_quota
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.service_quota will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "service_quota"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_servicequotas_service_quota/terraform/test/quota.json"
      + id             = (known after apply)
    }

  # null_resource.service_quota will be created
  + resource "null_resource" "service_quota" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + quota_code   = (known after apply)
  + quota_name   = (known after apply)
  + resource_aka = (known after apply)
  + service_code = (known after apply)
  + service_name = (known after apply)
null_resource.service_quota: Creating...
null_resource.service_quota: Provisioning with 'local-exec'...
null_resource.service_quota (local-exec): Executing: ["/bin/sh" "-c" "aws service-quotas get-service-quota --service-code account --quota-code L-77A32B3F > /tmp/tests/aws_servicequotas_service_quota/terraform/test/quota.json"]
null_resource.service_quota: Creation complete after 2s [id=187687303745184247]
data.local_file.service_quota: Reading...
data.local_file.service_quota: Read complete after 0s [id=da47393ff4da93e1c653eb4e532305c01cb5030c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

quota_code = "L-77A32B3F"
quota_name = "Rate of PutAlternateContact requests per account"
resource_aka = "arn:aws:servicequotas::632902152528:account/L-77A32B3F"
service_code = "account"
service_name = "AWS Account Management"

Running SQL query: test-get-query.sql
[
  {
    "quota_arn": "arn:aws:servicequotas::632902152528:account/L-77A32B3F",
    "quota_name": "Rate of PutAlternateContact requests per account"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "quota_arn": "arn:aws:servicequotas::632902152528:account/L-77A32B3F",
    "quota_name": "Rate of PutAlternateContact requests per account"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:servicequotas::632902152528:account/L-77A32B3F"
    ],
    "title": "Rate of PutAlternateContact requests per account"
  }
]
✔ PASSED

POSTTEST: tests/aws_servicequotas_service_quota

TEARDOWN: tests/aws_servicequotas_service_quota

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ses_email_identity []

PRETEST: tests/aws_ses_email_identity

TEST: tests/aws_ses_email_identity
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ses_email_identity.named_test_resource will be created
  + resource "aws_ses_email_identity" "named_test_resource" {
      + arn   = (known after apply)
      + email = "turbottest36763@domain.com"
      + id    = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest36763@domain.com"
aws_ses_email_identity.named_test_resource: Creating...
aws_ses_email_identity.named_test_resource: Creation complete after 1s [id=turbottest36763@domain.com]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com"
resource_name = "turbottest36763@domain.com"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com"
    ],
    "arn": "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com",
    "identity": "turbottest36763@domain.com",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com"
    ],
    "arn": "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com",
    "identity": "turbottest36763@domain.com",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com"
    ],
    "arn": "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com",
    "identity": "turbottest36763@domain.com",
    "region": "us-east-1"
  }
]
✔ PASSED

Running SQL query: test-turbot-fields-query.sql
[
  {
    "akas": [
      "arn:aws:ses:us-east-1:632902152528:identity/turbottest36763@domain.com"
    ],
    "region": "us-east-1",
    "title": "turbottest36763@domain.com"
  }
]
✔ PASSED

POSTTEST: tests/aws_ses_email_identity

TEARDOWN: tests/aws_ses_email_identity

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sfn_state_machine []

PRETEST: tests/aws_sfn_state_machine

TEST: tests/aws_sfn_state_machine
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.sfn_role will be created
  + resource "aws_iam_role" "sfn_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "states.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest33624"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sfn_state_machine.named_test_resource will be created
  + resource "aws_sfn_state_machine" "named_test_resource" {
      + arn           = (known after apply)
      + creation_date = (known after apply)
      + definition    = jsonencode(
            {
              + Comment = "A Hello World example of the Amazon States Language using Pass states"
              + StartAt = "Hello"
              + States  = {
                  + Hello = {
                      + Next   = "World"
                      + Result = "Hello"
                      + Type   = "Pass"
                    }
                  + World = {
                      + End    = true
                      + Result = "World"
                      + Type   = "Pass"
                    }
                }
            }
        )
      + id            = (known after apply)
      + name          = "turbottest33624"
      + role_arn      = (known after apply)
      + status        = (known after apply)
      + tags          = {
          + "name" = "turbottest33624"
        }
      + tags_all      = {
          + "name" = "turbottest33624"
        }
      + type          = "STANDARD"

      + logging_configuration {
          + include_execution_data = (known after apply)
          + level                  = (known after apply)
          + log_destination        = (known after apply)
        }

      + tracing_configuration {
          + enabled = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + creation_date   = (known after apply)
  + resource_aka    = (known after apply)
  + resource_name   = "turbottest33624"
  + resource_status = (known after apply)
aws_iam_role.sfn_role: Creating...
aws_iam_role.sfn_role: Creation complete after 2s [id=turbottest33624]
aws_sfn_state_machine.named_test_resource: Creating...
aws_sfn_state_machine.named_test_resource: Creation complete after 1s [id=arn:aws:states:us-east-1:632902152528:stateMachine:turbottest33624]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

creation_date = "2022-06-20 16:05:02"
resource_aka = "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest33624"
resource_name = "turbottest33624"
resource_status = "ACTIVE"

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest33624"
    ],
    "name": "turbottest33624",
    "status": "ACTIVE"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest33624"
    ],
    "name": "turbottest33624",
    "title": "turbottest33624"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest33624"
    ],
    "title": "turbottest33624"
  }
]
✔ PASSED

POSTTEST: tests/aws_sfn_state_machine

TEARDOWN: tests/aws_sfn_state_machine

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sfn_state_machine_execution []

PRETEST: tests/aws_sfn_state_machine_execution

TEST: tests/aws_sfn_state_machine_execution
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_sfn_state_machine_execution/terraform/test/output.json"
      + id             = (known after apply)
    }

  # aws_iam_role.sfn_role will be created
  + resource "aws_iam_role" "sfn_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "states.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest54364"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sfn_state_machine.named_test_resource will be created
  + resource "aws_sfn_state_machine" "named_test_resource" {
      + arn           = (known after apply)
      + creation_date = (known after apply)
      + definition    = jsonencode(
            {
              + Comment = "A Hello World example of the Amazon States Language using Pass states"
              + StartAt = "Hello"
              + States  = {
                  + Hello = {
                      + Next   = "World"
                      + Result = "Hello"
                      + Type   = "Pass"
                    }
                  + World = {
                      + End    = true
                      + Result = "World"
                      + Type   = "Pass"
                    }
                }
            }
        )
      + id            = (known after apply)
      + name          = "turbottest54364"
      + role_arn      = (known after apply)
      + status        = (known after apply)
      + tags          = {
          + "name" = "turbottest54364"
        }
      + tags_all      = {
          + "name" = "turbottest54364"
        }
      + type          = "STANDARD"

      + logging_configuration {
          + include_execution_data = (known after apply)
          + level                  = (known after apply)
          + log_destination        = (known after apply)
        }

      + tracing_configuration {
          + enabled = (known after apply)
        }
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + execution_arn     = (known after apply)
  + state_machine_arn = (known after apply)
aws_iam_role.sfn_role: Creating...
aws_iam_role.sfn_role: Creation complete after 2s [id=turbottest54364]
aws_sfn_state_machine.named_test_resource: Creating...
aws_sfn_state_machine.named_test_resource: Creation complete after 1s [id=arn:aws:states:us-east-1:632902152528:stateMachine:turbottest54364]
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws stepfunctions start-execution --state-machine-arn arn:aws:states:us-east-1:632902152528:stateMachine:turbottest54364  --output json > /tmp/tests/aws_sfn_state_machine_execution/terraform/test/output.json"]
null_resource.named_test_resource: Creation complete after 2s [id=6513577611488996856]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=ad5b69a99003dc66bbf951d1e077226b9a5908f3]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

execution_arn = "arn:aws:states:us-east-1:632902152528:execution:turbottest54364:bc29ef55-c6c4-4fa1-be9e-da5e9274d581"
state_machine_arn = "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest54364"

Running SQL query: test-get-call-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:execution:turbottest54364:bc29ef55-c6c4-4fa1-be9e-da5e9274d581"
    ],
    "execution_arn": "arn:aws:states:us-east-1:632902152528:execution:turbottest54364:bc29ef55-c6c4-4fa1-be9e-da5e9274d581",
    "state_machine_arn": "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest54364"
  }
]
✔ PASSED

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:execution:turbottest54364:bc29ef55-c6c4-4fa1-be9e-da5e9274d581"
    ],
    "execution_arn": "arn:aws:states:us-east-1:632902152528:execution:turbottest54364:bc29ef55-c6c4-4fa1-be9e-da5e9274d581",
    "state_machine_arn": "arn:aws:states:us-east-1:632902152528:stateMachine:turbottest54364"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:execution:turbottest54364:bc29ef55-c6c4-4fa1-be9e-da5e9274d581"
    ]
  }
]
✔ PASSED

POSTTEST: tests/aws_sfn_state_machine_execution

TEARDOWN: tests/aws_sfn_state_machine_execution

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sfn_state_machine_execution_history []

PRETEST: tests/aws_sfn_state_machine_execution_history

TEST: tests/aws_sfn_state_machine_execution_history
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.execution will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "execution"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_sfn_state_machine_execution_history/terraform/test/execution_path.json"
      + id             = (known after apply)
    }

  # data.local_file.execution_history will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "execution_history"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_sfn_state_machine_execution_history/terraform/test/execution_history_path.json"
      + id             = (known after apply)
    }

  # aws_iam_role.sfn_role will be created
  + resource "aws_iam_role" "sfn_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "states.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest11793"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_sfn_state_machine.named_test_resource will be created
  + resource "aws_sfn_state_machine" "named_test_resource" {
      + arn           = (known after apply)
      + creation_date = (known after apply)
      + definition    = jsonencode(
            {
              + Comment = "A Hello World example of the Amazon States Language using Pass states"
              + StartAt = "Hello"
              + States  = {
                  + Hello = {
                      + Next   = "World"
                      + Result = "Hello"
                      + Type   = "Pass"
                    }
                  + World = {
                      + End    = true
                      + Result = "World"
                      + Type   = "Pass"
                    }
                }
            }
        )
      + id            = (known after apply)
      + name          = "turbottest11793"
      + role_arn      = (known after apply)
      + status        = (known after apply)
      + tags          = {
          + "name" = "turbottest11793"
        }
      + tags_all      = {
          + "name" = "turbottest11793"
        }
      + type          = "STANDARD"

      + logging_configuration {
          + include_execution_data = (known after apply)
          + level                  = (known after apply)
          + log_destination        = (known after apply)
        }

      + tracing_configuration {
          + enabled = (known after apply)
        }
    }

  # null_resource.execution will be created
  + resource "null_resource" "execution" {
      + id = (known after apply)
    }

  # null_resource.execution_history will be created
  + resource "null_resource" "execution_history" {
      + id = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + akas          = (known after apply)
  + execution_arn = (known after apply)
  + id            = (known after apply)
  + type          = (known after apply)
aws_iam_role.sfn_role: Creating...
aws_iam_role.sfn_role: Creation complete after 2s [id=turbottest11793]
aws_sfn_state_machine.named_test_resource: Creating...
aws_sfn_state_machine.named_test_resource: Creation complete after 1s [id=arn:aws:states:us-east-1:632902152528:stateMachine:turbottest11793]
null_resource.execution: Creating...
null_resource.execution: Provisioning with 'local-exec'...
null_resource.execution (local-exec): Executing: ["/bin/sh" "-c" "aws stepfunctions start-execution --state-machine-arn arn:aws:states:us-east-1:632902152528:stateMachine:turbottest11793  --output json > /tmp/tests/aws_sfn_state_machine_execution_history/terraform/test/execution_path.json"]
null_resource.execution: Creation complete after 2s [id=7125721166599102009]
data.local_file.execution: Reading...
data.local_file.execution: Read complete after 0s [id=5579fdac88191091602799cd14cb7ae552edd09b]
null_resource.execution_history: Creating...
null_resource.execution_history: Provisioning with 'local-exec'...
null_resource.execution_history (local-exec): Executing: ["/bin/sh" "-c" "aws stepfunctions get-execution-history --execution-arn arn:aws:states:us-east-1:632902152528:execution:turbottest11793:7f89718b-5057-493f-baa2-b46fb75c5974  --output json > /tmp/tests/aws_sfn_state_machine_execution_history/terraform/test/execution_history_path.json"]
null_resource.execution_history: Creation complete after 1s [id=3130765532802075193]
data.local_file.execution_history: Reading...
data.local_file.execution_history: Read complete after 0s [id=d0da9befade511129e73a3dd48efeedf5d17c9b0]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

akas = "arn:aws:states:us-east-1:632902152528:executionHistory:turbottest11793:7f89718b-5057-493f-baa2-b46fb75c5974:1"
execution_arn = "arn:aws:states:us-east-1:632902152528:execution:turbottest11793:7f89718b-5057-493f-baa2-b46fb75c5974"
id = 1
type = "ExecutionStarted"

Running SQL query: test-list-call-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:executionHistory:turbottest11793:7f89718b-5057-493f-baa2-b46fb75c5974:1"
    ],
    "execution_arn": "arn:aws:states:us-east-1:632902152528:execution:turbottest11793:7f89718b-5057-493f-baa2-b46fb75c5974",
    "id": "1",
    "type": "ExecutionStarted"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:states:us-east-1:632902152528:executionHistory:turbottest11793:7f89718b-5057-493f-baa2-b46fb75c5974:1"
    ],
    "title": "1"
  }
]
✔ PASSED

POSTTEST: tests/aws_sfn_state_machine_execution_history

TEARDOWN: tests/aws_sfn_state_machine_execution_history

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sns_topic []

PRETEST: tests/aws_sns_topic

TEST: tests/aws_sns_topic
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_iam_policy_document.sns_topic_policy will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "sns_topic_policy"  {
      + id        = (known after apply)
      + json      = (known after apply)
      + policy_id = "__default_policy_ID"
      + version   = "2012-10-17"

      + statement {
          + actions   = [
              + "SNS:AddPermission",
              + "SNS:DeleteTopic",
              + "SNS:GetTopicAttributes",
              + "SNS:ListSubscriptionsByTopic",
              + "SNS:Publish",
              + "SNS:Receive",
              + "SNS:RemovePermission",
              + "SNS:SetTopicAttributes",
              + "SNS:Subscribe",
            ]
          + effect    = "Allow"
          + resources = [
              + (known after apply),
            ]
          + sid       = "__default_statement_ID"

          + condition {
              + test     = "StringEquals"
              + values   = [
                  + "632902152528",
                ]
              + variable = "AWS:SourceOwner"
            }

          + principals {
              + identifiers = [
                  + "*",
                ]
              + type        = "AWS"
            }
        }
    }

  # aws_sns_topic.named_test_resource will be created
  + resource "aws_sns_topic" "named_test_resource" {
      + arn                         = (known after apply)
      + content_based_deduplication = false
      + display_name                = "turbottest30473"
      + fifo_topic                  = false
      + id                          = (known after apply)
      + name                        = "turbottest30473"
      + name_prefix                 = (known after apply)
      + owner                       = (known after apply)
      + policy                      = (known after apply)
      + tags                        = {
          + "name" = "turbottest30473"
        }
      + tags_all                    = {
          + "name" = "turbottest30473"
        }
    }

  # aws_sns_topic_policy.default will be created
  + resource "aws_sns_topic_policy" "default" {
      + arn    = (known after apply)
      + id     = (known after apply)
      + owner  = (known after apply)
      + policy = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest30473"
aws_sns_topic.named_test_resource: Creating...
aws_sns_topic.named_test_resource: Creation complete after 3s [id=arn:aws:sns:us-east-1:632902152528:turbottest30473]
data.aws_iam_policy_document.sns_topic_policy: Reading...
data.aws_iam_policy_document.sns_topic_policy: Read complete after 0s [id=3636358695]
aws_sns_topic_policy.default: Creating...
aws_sns_topic_policy.default: Creation complete after 0s [id=arn:aws:sns:us-east-1:632902152528:turbottest30473]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
resource_aka = "arn:aws:sns:us-east-1:632902152528:turbottest30473"
resource_name = "turbottest30473"

Running SQL query: test-get-query.sql
[
  {
    "display_name": "turbottest30473"
  }
]
✔ PASSED

Running SQL query: test-get-tags-query.sql
[
  {
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest30473"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "display_name": "turbottest30473",
    "effective_delivery_policy": {
      "http": {
        "defaultHealthyRetryPolicy": {
          "backoffFunction": "linear",
          "maxDelayTarget": 20,
          "minDelayTarget": 20,
          "numMaxDelayRetries": 0,
          "numMinDelayRetries": 0,
          "numNoDelayRetries": 0,
          "numRetries": 3
        },
        "disableSubscriptionOverrides": false
      }
    },
    "owner": "632902152528",
    "policy": {
      "Id": "__default_policy_ID",
      "Statement": [
        {
          "Action": [
            "SNS:Subscribe",
            "SNS:SetTopicAttributes",
            "SNS:RemovePermission",
            "SNS:Receive",
            "SNS:Publish",
            "SNS:ListSubscriptionsByTopic",
            "SNS:GetTopicAttributes",
            "SNS:DeleteTopic",
            "SNS:AddPermission"
          ],
          "Condition": {
            "StringEquals": {
              "AWS:SourceOwner": "632902152528"
            }
          },
          "Effect": "Allow",
          "Principal": {
            "AWS": "*"
          },
          "Resource": "arn:aws:sns:us-east-1:632902152528:turbottest30473",
          "Sid": "__default_statement_ID"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Id": "__default_policy_ID",
      "Statement": [
        {
          "Action": [
            "sns:addpermission",
            "sns:deletetopic",
            "sns:gettopicattributes",
            "sns:listsubscriptionsbytopic",
            "sns:publish",
            "sns:receive",
            "sns:removepermission",
            "sns:settopicattributes",
            "sns:subscribe"
          ],
          "Condition": {
            "StringEquals": {
              "aws:sourceowner": [
                "632902152528"
              ]
            }
          },
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "*"
            ]
          },
          "Resource": [
            "arn:aws:sns:us-east-1:632902152528:turbottest30473"
          ],
          "Sid": "__default_statement_ID"
        }
      ],
      "Version": "2012-10-17"
    },
    "subscriptions_confirmed": 0,
    "subscriptions_deleted": 0,
    "subscriptions_pending": 0,
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest30473"
      }
    ],
    "topic_arn": "arn:aws:sns:us-east-1:632902152528:turbottest30473"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sns:us-east-1:632902152528:turbottest30473"
    ],
    "region": "us-east-1",
    "title": "turbottest30473"
  }
]
✔ PASSED

POSTTEST: tests/aws_sns_topic

TEARDOWN: tests/aws_sns_topic

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sns_topic_subscription []

PRETEST: tests/aws_sns_topic_subscription

TEST: tests/aws_sns_topic_subscription
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_sns_topic.aws_sns_subscription will be created
  + resource "aws_sns_topic" "aws_sns_subscription" {
      + arn                         = (known after apply)
      + content_based_deduplication = false
      + fifo_topic                  = false
      + id                          = (known after apply)
      + name                        = "turbottest66842"
      + name_prefix                 = (known after apply)
      + owner                       = (known after apply)
      + policy                      = (known after apply)
      + tags_all                    = (known after apply)
    }

  # aws_sns_topic_subscription.named_test_resource will be created
  + resource "aws_sns_topic_subscription" "named_test_resource" {
      + arn                             = (known after apply)
      + confirmation_timeout_in_minutes = 1
      + confirmation_was_authenticated  = (known after apply)
      + endpoint                        = (known after apply)
      + endpoint_auto_confirms          = false
      + id                              = (known after apply)
      + owner_id                        = (known after apply)
      + pending_confirmation            = (known after apply)
      + protocol                        = "sqs"
      + raw_message_delivery            = false
      + topic_arn                       = (known after apply)
    }

  # aws_sqs_queue.aws_sns_subscription will be created
  + resource "aws_sqs_queue" "aws_sns_subscription" {
      + arn                               = (known after apply)
      + content_based_deduplication       = false
      + deduplication_scope               = (known after apply)
      + delay_seconds                     = 0
      + fifo_queue                        = false
      + fifo_throughput_limit             = (known after apply)
      + id                                = (known after apply)
      + kms_data_key_reuse_period_seconds = (known after apply)
      + max_message_size                  = 262144
      + message_retention_seconds         = 345600
      + name                              = "turbottest66842"
      + name_prefix                       = (known after apply)
      + policy                            = (known after apply)
      + receive_wait_time_seconds         = 0
      + tags_all                          = (known after apply)
      + url                               = (known after apply)
      + visibility_timeout_seconds        = 30
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + endpoint      = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest66842"
  + topic_arn     = (known after apply)
aws_sns_topic.aws_sns_subscription: Creating...
aws_sqs_queue.aws_sns_subscription: Creating...
aws_sns_topic.aws_sns_subscription: Creation complete after 2s [id=arn:aws:sns:us-east-1:632902152528:turbottest66842]
aws_sqs_queue.aws_sns_subscription: Still creating... [10s elapsed]
aws_sqs_queue.aws_sns_subscription: Still creating... [20s elapsed]
aws_sqs_queue.aws_sns_subscription: Creation complete after 27s [id=https://sqs.us-east-1.amazonaws.com/632902152528/turbottest66842]
aws_sns_topic_subscription.named_test_resource: Creating...
aws_sns_topic_subscription.named_test_resource: Creation complete after 1s [id=arn:aws:sns:us-east-1:632902152528:turbottest66842:fbe90be5-ec44-4689-ae70-f08cc0c65b41]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
endpoint = "arn:aws:sqs:us-east-1:632902152528:turbottest66842"
resource_aka = "arn:aws:sns:us-east-1:632902152528:turbottest66842:fbe90be5-ec44-4689-ae70-f08cc0c65b41"
resource_name = "turbottest66842"
topic_arn = "arn:aws:sns:us-east-1:632902152528:turbottest66842"

Running SQL query: test-get-query.sql
[
  {
    "endpoint": "arn:aws:sqs:us-east-1:632902152528:turbottest66842",
    "protocol": "sqs",
    "topic_arn": "arn:aws:sns:us-east-1:632902152528:turbottest66842"
  }
]
✔ PASSED

Running SQL query: test-get-subscription-attributes-query.sql
[
  {
    "confirmation_was_authenticated": true,
    "delivery_policy": null,
    "effective_delivery_policy": null,
    "filter_policy": null,
    "pending_confirmation": false,
    "raw_message_delivery": false,
    "redrive_policy": null
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "endpoint": "arn:aws:sqs:us-east-1:632902152528:turbottest66842",
    "owner": "632902152528",
    "protocol": "sqs",
    "subscription_arn": "arn:aws:sns:us-east-1:632902152528:turbottest66842:fbe90be5-ec44-4689-ae70-f08cc0c65b41",
    "topic_arn": "arn:aws:sns:us-east-1:632902152528:turbottest66842"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sns:us-east-1:632902152528:turbottest66842:fbe90be5-ec44-4689-ae70-f08cc0c65b41"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "title": "fbe90be5-ec44-4689-ae70-f08cc0c65b41"
  }
]
✔ PASSED

POSTTEST: tests/aws_sns_topic_subscription

TEARDOWN: tests/aws_sns_topic_subscription

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_sqs_queue []

PRETEST: tests/aws_sqs_queue

TEST: tests/aws_sqs_queue
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_sns_topic.named_test_resource will be created
  + resource "aws_sns_topic" "named_test_resource" {
      + arn                         = (known after apply)
      + content_based_deduplication = false
      + display_name                = "turbottest37185"
      + fifo_topic                  = false
      + id                          = (known after apply)
      + name                        = "turbottest37185"
      + name_prefix                 = (known after apply)
      + owner                       = (known after apply)
      + policy                      = (known after apply)
      + tags_all                    = (known after apply)
    }

  # aws_sqs_queue.named_test_resource will be created
  + resource "aws_sqs_queue" "named_test_resource" {
      + arn                               = (known after apply)
      + content_based_deduplication       = false
      + deduplication_scope               = (known after apply)
      + delay_seconds                     = 0
      + fifo_queue                        = false
      + fifo_throughput_limit             = (known after apply)
      + id                                = (known after apply)
      + kms_data_key_reuse_period_seconds = (known after apply)
      + max_message_size                  = 262144
      + message_retention_seconds         = 345600
      + name                              = "turbottest37185"
      + name_prefix                       = (known after apply)
      + policy                            = (known after apply)
      + receive_wait_time_seconds         = 0
      + tags                              = {
          + "name" = "turbottest37185"
        }
      + tags_all                          = {
          + "name" = "turbottest37185"
        }
      + url                               = (known after apply)
      + visibility_timeout_seconds        = 30
    }

  # aws_sqs_queue_policy.test will be created
  + resource "aws_sqs_queue_policy" "test" {
      + id        = (known after apply)
      + policy    = (known after apply)
      + queue_url = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + queue_url     = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest37185"
  + sns_topic_arn = (known after apply)
aws_sqs_queue.named_test_resource: Creating...
aws_sns_topic.named_test_resource: Creating...
aws_sns_topic.named_test_resource: Creation complete after 3s [id=arn:aws:sns:us-east-1:632902152528:turbottest37185]
aws_sqs_queue.named_test_resource: Still creating... [10s elapsed]
aws_sqs_queue.named_test_resource: Still creating... [20s elapsed]
aws_sqs_queue.named_test_resource: Creation complete after 28s [id=https://sqs.us-east-1.amazonaws.com/632902152528/turbottest37185]
aws_sqs_queue_policy.test: Creating...
aws_sqs_queue_policy.test: Still creating... [10s elapsed]
aws_sqs_queue_policy.test: Still creating... [20s elapsed]
aws_sqs_queue_policy.test: Creation complete after 26s [id=https://sqs.us-east-1.amazonaws.com/632902152528/turbottest37185]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 47, in data "null_data_source" "resource":
  47: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
queue_url = "https://sqs.us-east-1.amazonaws.com/632902152528/turbottest37185"
resource_aka = "arn:aws:sqs:us-east-1:632902152528:turbottest37185"
resource_name = "turbottest37185"
sns_topic_arn = "arn:aws:sns:us-east-1:632902152528:turbottest37185"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:sqs:us-east-1:632902152528:turbottest37185"
    ],
    "tags": {
      "name": "turbottest37185"
    },
    "title": "turbottest37185"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "delay_seconds": "0",
    "max_message_size": "262144",
    "message_retention_seconds": "345600",
    "partition": "aws",
    "policy": {
      "Id": "sqspolicy",
      "Statement": [
        {
          "Action": "sqs:SendMessage",
          "Condition": {
            "ArnEquals": {
              "aws:SourceArn": "arn:aws:sns:us-east-1:632902152528:turbottest37185"
            }
          },
          "Effect": "Allow",
          "Principal": "*",
          "Resource": "arn:aws:sqs:us-east-1:632902152528:turbottest37185",
          "Sid": "First"
        }
      ],
      "Version": "2012-10-17"
    },
    "policy_std": {
      "Id": "sqspolicy",
      "Statement": [
        {
          "Action": [
            "sqs:sendmessage"
          ],
          "Condition": {
            "ArnEquals": {
              "aws:sourcearn": [
                "arn:aws:sns:us-east-1:632902152528:turbottest37185"
              ]
            }
          },
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "*"
            ]
          },
          "Resource": [
            "arn:aws:sqs:us-east-1:632902152528:turbottest37185"
          ],
          "Sid": "First"
        }
      ],
      "Version": "2012-10-17"
    },
    "queue_arn": "arn:aws:sqs:us-east-1:632902152528:turbottest37185",
    "queue_url": "https://sqs.us-east-1.amazonaws.com/632902152528/turbottest37185",
    "receive_wait_time_seconds": "0",
    "tags": {
      "name": "turbottest37185"
    }
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:sqs:us-east-1:632902152528:turbottest37185"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest37185"
    },
    "title": "turbottest37185"
  }
]
✔ PASSED

POSTTEST: tests/aws_sqs_queue

TEARDOWN: tests/aws_sqs_queue

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_association []

PRETEST: tests/aws_ssm_association

TEST: tests/aws_ssm_association
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance will be created
  + resource "aws_instance" "instance" {
      + ami                                  = "ami-0e081ed4ce61c1fb2"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = false
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "name" = "turbottest19317"
        }
      + tags_all                             = {
          + "name" = "turbottest19317"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_security_group.security_group will be created
  + resource "aws_security_group" "security_group" {
      + arn                    = (known after apply)
      + description            = "Allow TLS inbound traffic"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = []
              + description      = ""
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_ssm_association.named_test_resource will be created
  + resource "aws_ssm_association" "named_test_resource" {
      + apply_only_at_cron_interval = false
      + arn                         = (known after apply)
      + association_id              = (known after apply)
      + association_name            = "turbottest19317"
      + document_version            = (known after apply)
      + id                          = (known after apply)
      + name                        = (known after apply)
      + parameters                  = (known after apply)

      + targets {
          + key    = "InstanceIds"
          + values = (known after apply)
        }
    }

  # aws_ssm_document.test_resource will be created
  + resource "aws_ssm_document" "test_resource" {
      + arn              = (known after apply)
      + content          = jsonencode(
            {
              + description   = "Check ip configuration of a Linux instance."
              + parameters    = {}
              + runtimeConfig = {
                  + aws:runShellScript = {
                      + properties = [
                          + {
                              + id         = "0.aws:runShellScript"
                              + runCommand = [
                                  + "ifconfig",
                                ]
                            },
                        ]
                    }
                }
              + schemaVersion = "1.2"
            }
        )
      + created_date     = (known after apply)
      + default_version  = (known after apply)
      + description      = (known after apply)
      + document_format  = "JSON"
      + document_type    = "Command"
      + document_version = (known after apply)
      + hash             = (known after apply)
      + hash_type        = (known after apply)
      + id               = (known after apply)
      + latest_version   = (known after apply)
      + name             = "turbottest19317"
      + owner            = (known after apply)
      + parameter        = (known after apply)
      + platform_types   = (known after apply)
      + schema_version   = (known after apply)
      + status           = (known after apply)
      + tags             = {
          + "name" = "turbottest19317"
        }
      + tags_all         = {
          + "name" = "turbottest19317"
        }
    }

  # aws_subnet.my_subnet will be created
  + resource "aws_subnet" "my_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.my_vpc will be created
  + resource "aws_vpc" "my_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + instance_id   = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest19317"
aws_vpc.my_vpc: Creating...
aws_ssm_document.test_resource: Creating...
aws_ssm_document.test_resource: Creation complete after 2s [id=turbottest19317]
aws_vpc.my_vpc: Creation complete after 3s [id=vpc-0be0afd556760b154]
aws_internet_gateway.igw: Creating...
aws_security_group.security_group: Creating...
aws_internet_gateway.igw: Creation complete after 1s [id=igw-03ca7fe1f9d2753b0]
aws_subnet.my_subnet: Creating...
aws_subnet.my_subnet: Creation complete after 1s [id=subnet-018cbe0c97829b539]
aws_instance.instance: Creating...
aws_security_group.security_group: Creation complete after 3s [id=sg-0d3421589d7e6666f]
aws_instance.instance: Still creating... [10s elapsed]
aws_instance.instance: Still creating... [20s elapsed]
aws_instance.instance: Still creating... [30s elapsed]
aws_instance.instance: Creation complete after 34s [id=i-0afb6850abe4b9648]
aws_ssm_association.named_test_resource: Creating...
aws_ssm_association.named_test_resource: Creation complete after 1s [id=7a460d08-070f-402f-9043-00f8c792d207]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
instance_id = "i-0afb6850abe4b9648"
resource_aka = "arn:aws:ssm:us-east-1:632902152528:association/7a460d08-070f-402f-9043-00f8c792d207"
resource_id = "7a460d08-070f-402f-9043-00f8c792d207"
resource_name = "turbottest19317"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "association_id": "7a460d08-070f-402f-9043-00f8c792d207",
    "association_name": "turbottest19317",
    "association_version": "1",
    "document_name": "turbottest19317",
    "document_version": "$DEFAULT",
    "partition": "aws",
    "region": "us-east-1",
    "targets": [
      {
        "Key": "InstanceIds",
        "Values": [
          "i-0afb6850abe4b9648"
        ]
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "arn": "arn:aws:ssm:us-east-1:632902152528:association/7a460d08-070f-402f-9043-00f8c792d207",
    "association_id": "7a460d08-070f-402f-9043-00f8c792d207",
    "association_name": "turbottest19317",
    "association_version": "1",
    "compliance_severity": null,
    "overview": {
      "AssociationStatusAggregatedCount": {},
      "DetailedStatus": "Success",
      "Status": "Success"
    },
    "partition": "aws",
    "region": "us-east-1",
    "schedule_expression": null
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:association/7a460d08-070f-402f-9043-00f8c792d207"
    ],
    "region": "us-east-1",
    "title": "turbottest19317"
  }
]
✔ PASSED

POSTTEST: tests/aws_ssm_association

TEARDOWN: tests/aws_ssm_association

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_document []

PRETEST: tests/aws_ssm_document

TEST: tests/aws_ssm_document
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ssm_document.named_test_resource will be created
  + resource "aws_ssm_document" "named_test_resource" {
      + arn              = (known after apply)
      + content          = <<-EOT
            schemaVersion: '1.2'
            description: Check ip configuration of a Linux instance.
            parameters: {}
            runtimeConfig:
              'aws:runShellScript':
                properties:
                  - id: '0.aws:runShellScript'
                    runCommand:
                      - ifconfig
        EOT
      + created_date     = (known after apply)
      + default_version  = (known after apply)
      + description      = (known after apply)
      + document_format  = "YAML"
      + document_type    = "Command"
      + document_version = (known after apply)
      + hash             = (known after apply)
      + hash_type        = (known after apply)
      + id               = (known after apply)
      + latest_version   = (known after apply)
      + name             = "turbottest34500"
      + owner            = (known after apply)
      + parameter        = (known after apply)
      + platform_types   = (known after apply)
      + schema_version   = (known after apply)
      + status           = (known after apply)
      + tags             = {
          + "name" = "turbottest34500"
        }
      + tags_all         = {
          + "name" = "turbottest34500"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest34500"
aws_ssm_document.named_test_resource: Creating...
aws_ssm_document.named_test_resource: Creation complete after 2s [id=turbottest34500]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 45, in data "null_data_source" "resource":
  45: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:ssm:us-east-1:632902152528:document/turbottest34500"
resource_name = "turbottest34500"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:document/turbottest34500"
    ],
    "name": "turbottest34500",
    "tags": {
      "name": "turbottest34500"
    },
    "title": "turbottest34500"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:document/turbottest34500"
    ],
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest34500"
      }
    ],
    "title": "turbottest34500"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "document_format": "YAML",
    "document_type": "Command",
    "document_version": "1",
    "name": "turbottest34500",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest34500"
    },
    "title": "turbottest34500"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:document/turbottest34500"
    ],
    "name": "turbottest34500",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest34500"
    },
    "title": "turbottest34500"
  }
]
✔ PASSED

POSTTEST: tests/aws_ssm_document

TEARDOWN: tests/aws_ssm_document

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_maintenance_window []

PRETEST: tests/aws_ssm_maintenance_window

TEST: tests/aws_ssm_maintenance_window
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ssm_maintenance_window.named_test_resource will be created
  + resource "aws_ssm_maintenance_window" "named_test_resource" {
      + allow_unassociated_targets = false
      + cutoff                     = 1
      + duration                   = 3
      + enabled                    = true
      + id                         = (known after apply)
      + name                       = "turbottest66590"
      + schedule                   = "cron(0 16 ? * TUE *)"
      + tags                       = {
          + "name" = "turbottest66590"
        }
      + tags_all                   = {
          + "name" = "turbottest66590"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest66590"
aws_ssm_maintenance_window.named_test_resource: Creating...
aws_ssm_maintenance_window.named_test_resource: Creation complete after 1s [id=mw-026904f92135d8ac7]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
resource_aka = "arn:aws:ssm:us-east-1:632902152528:maintenancewindow/mw-026904f92135d8ac7"
resource_id = "mw-026904f92135d8ac7"
resource_name = "turbottest66590"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:maintenancewindow/mw-026904f92135d8ac7"
    ],
    "name": "turbottest66590",
    "tags": {
      "name": "turbottest66590"
    },
    "title": "turbottest66590"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "turbottest66590",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "name": "turbottest66590"
    },
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest66590"
      }
    ],
    "targets": [],
    "tasks": [],
    "window_id": "mw-026904f92135d8ac7"
  }
]
✔ PASSED

Running SQL query: test-not-found-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:maintenancewindow/mw-026904f92135d8ac7"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "turbottest66590"
    },
    "title": "turbottest66590"
  }
]
✔ PASSED

POSTTEST: tests/aws_ssm_maintenance_window

TEARDOWN: tests/aws_ssm_maintenance_window

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_managed_instance []

PRETEST: tests/aws_ssm_managed_instance

TEST: tests/aws_ssm_managed_instance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_instance_profile.named_test_resource will be created
  + resource "aws_iam_instance_profile" "named_test_resource" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = "turbottest89720"
      + path        = "/"
      + role        = "turbottest89720"
      + tags_all    = (known after apply)
      + unique_id   = (known after apply)
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "test"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "Test Role"
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest89720"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags                  = {
          + "name" = "turbottest89720"
        }
      + tags_all              = {
          + "name" = "turbottest89720"
        }
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.test-attach will be created
  + resource "aws_iam_role_policy_attachment" "test-attach" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      + role       = "turbottest89720"
    }

  # aws_instance.named_test_resource will be created
  + resource "aws_instance" "named_test_resource" {
      + ami                                  = "ami-0d5eff06f840b45e9"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + iam_instance_profile                 = "turbottest89720"
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest89720"
        }
      + tags_all                             = {
          + "Name" = "turbottest89720"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest89720"
        }
      + tags_all                                       = {
          + "Name" = "turbottest89720"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest89720"
        }
      + tags_all                             = {
          + "name" = "turbottest89720"
        }
    }

  # null_resource.delay will be created
  + resource "null_resource" "delay" {
      + id = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id           = "632902152528"
  + arn                  = (known after apply)
  + aws_partition        = "aws"
  + instance_private_dns = (known after apply)
  + region_name          = "us-east-1"
  + resource_id          = (known after apply)
  + resource_name        = "turbottest89720"
aws_vpc.main: Creating...
aws_iam_role.named_test_resource: Creating...
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest89720]
aws_iam_role_policy_attachment.test-attach: Creating...
aws_iam_role_policy_attachment.test-attach: Creation complete after 0s [id=turbottest89720-20220620161659172000000001]
aws_iam_instance_profile.named_test_resource: Creating...
aws_iam_instance_profile.named_test_resource: Creation complete after 1s [id=turbottest89720]
aws_vpc.main: Creation complete after 3s [id=vpc-024c6c1a51da3c181]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-0e9cd8215c0ed2dff]
aws_instance.named_test_resource: Creating...
aws_instance.named_test_resource: Still creating... [10s elapsed]
aws_instance.named_test_resource: Still creating... [20s elapsed]
aws_instance.named_test_resource: Still creating... [30s elapsed]
aws_instance.named_test_resource: Still creating... [40s elapsed]
aws_instance.named_test_resource: Still creating... [50s elapsed]
aws_instance.named_test_resource: Creation complete after 52s [id=i-0590884e8226d8773]
null_resource.delay: Creating...
null_resource.delay: Provisioning with 'local-exec'...
null_resource.delay (local-exec): Executing: ["/bin/sh" "-c" "sleep 300"]
null_resource.delay: Still creating... [10s elapsed]
null_resource.delay: Still creating... [20s elapsed]
null_resource.delay: Still creating... [30s elapsed]
null_resource.delay: Still creating... [40s elapsed]
null_resource.delay: Still creating... [50s elapsed]
null_resource.delay: Still creating... [1m0s elapsed]
null_resource.delay: Still creating... [1m10s elapsed]
null_resource.delay: Still creating... [1m20s elapsed]
null_resource.delay: Still creating... [1m30s elapsed]
null_resource.delay: Still creating... [1m40s elapsed]
null_resource.delay: Still creating... [1m50s elapsed]
null_resource.delay: Still creating... [2m0s elapsed]
null_resource.delay: Still creating... [2m10s elapsed]
null_resource.delay: Still creating... [2m20s elapsed]
null_resource.delay: Still creating... [2m30s elapsed]
null_resource.delay: Still creating... [2m40s elapsed]
null_resource.delay: Still creating... [2m50s elapsed]
null_resource.delay: Still creating... [3m0s elapsed]
null_resource.delay: Still creating... [3m10s elapsed]
null_resource.delay: Still creating... [3m20s elapsed]
null_resource.delay: Still creating... [3m30s elapsed]
null_resource.delay: Still creating... [3m40s elapsed]
null_resource.delay: Still creating... [3m50s elapsed]
null_resource.delay: Still creating... [4m0s elapsed]
null_resource.delay: Still creating... [4m10s elapsed]
null_resource.delay: Still creating... [4m20s elapsed]
null_resource.delay: Still creating... [4m30s elapsed]
null_resource.delay: Still creating... [4m40s elapsed]
null_resource.delay: Still creating... [4m50s elapsed]
null_resource.delay: Creation complete after 5m0s [id=5529781825633661888]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
arn = "arn:aws:ssm:us-east-1:632902152528:managed-instance/i-0590884e8226d8773"
aws_partition = "aws"
instance_private_dns = "ip-10-0-1-117.ec2.internal"
region_name = "us-east-1"
resource_id = "i-0590884e8226d8773"
resource_name = "turbottest89720"

Running SQL query: test-list-query.sql
null
[
  {
    "arn": "arn:aws:ssm:us-east-1:632902152528:managed-instance/i-0590884e8226d8773",
    "computer_name": "ip-10-0-1-117.ec2.internal",
    "instance_id": "i-0590884e8226d8773",
    "platform_name": "Amazon Linux",
    "platform_type": "Linux",
    "platform_version": "2",
    "resource_type": "EC2Instance"
  }
]

✘ FAILED

Running SQL query: test-turbot-query.sql
null
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:managed-instance/i-0590884e8226d8773"
    ],
    "instance_id": "i-0590884e8226d8773",
    "title": "i-0590884e8226d8773"
  }
]

✘ FAILED

TEARDOWN: tests/aws_ssm_managed_instance

SUMMARY:

✘ tests/aws_ssm_managed_instance failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_managed_instance_compliance []

PRETEST: tests/aws_ssm_managed_instance_compliance

TEST: tests/aws_ssm_managed_instance_compliance
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_ssm_managed_instance_compliance/terraform/test/compliance.json"
      + id             = (known after apply)
    }

  # aws_default_subnet.default_subnet will be created
  + resource "aws_default_subnet" "default_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = (known after apply)
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + existing_default_subnet                        = (known after apply)
      + force_destroy                                  = false
      + id                                             = (known after apply)
      + ipv6_cidr_block                                = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + outpost_arn                                    = (known after apply)
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_default_vpc.default will be created
  + resource "aws_default_vpc" "default" {
      + arn                                  = (known after apply)
      + cidr_block                           = (known after apply)
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + existing_default_vpc                 = (known after apply)
      + force_destroy                        = false
      + id                                   = (known after apply)
      + instance_tenancy                     = (known after apply)
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

  # aws_iam_instance_profile.named_test_resource will be created
  + resource "aws_iam_instance_profile" "named_test_resource" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = "turbottest1145"
      + path        = "/"
      + role        = "turbottest1145"
      + tags_all    = (known after apply)
      + unique_id   = (known after apply)
    }

  # aws_iam_role.named_test_resource will be created
  + resource "aws_iam_role" "named_test_resource" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "test"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "Test Role"
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest1145"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags                  = {
          + "name" = "turbottest1145"
        }
      + tags_all              = {
          + "name" = "turbottest1145"
        }
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy_attachment.test-attach will be created
  + resource "aws_iam_role_policy_attachment" "test-attach" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      + role       = "turbottest1145"
    }

  # aws_instance.named_test_resource will be created
  + resource "aws_instance" "named_test_resource" {
      + ami                                  = "ami-0d5eff06f840b45e9"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + iam_instance_profile                 = "turbottest1145"
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest1145"
        }
      + tags_all                             = {
          + "Name" = "turbottest1145"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # null_resource.delay will be created
  + resource "null_resource" "delay" {
      + id = (known after apply)
    }

  # null_resource.list_compliance will be created
  + resource "null_resource" "list_compliance" {
      + id = (known after apply)
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + arn           = (known after apply)
  + compliance_id = (known after apply)
  + resource_id   = (known after apply)
  + status        = (known after apply)
aws_iam_role.named_test_resource: Creating...
aws_default_subnet.default_subnet: Creating...
aws_default_vpc.default: Creating...
aws_default_subnet.default_subnet: Creation complete after 1s [id=subnet-0a7aeb623bc0e8809]
aws_iam_role.named_test_resource: Creation complete after 2s [id=turbottest1145]
aws_iam_role_policy_attachment.test-attach: Creating...
aws_iam_role_policy_attachment.test-attach: Creation complete after 0s [id=turbottest1145-20220620162404032100000001]
aws_iam_instance_profile.named_test_resource: Creating...
aws_iam_instance_profile.named_test_resource: Creation complete after 1s [id=turbottest1145]
aws_instance.named_test_resource: Creating...
aws_default_vpc.default: Creation complete after 4s [id=vpc-097ed715748293054]
aws_instance.named_test_resource: Still creating... [10s elapsed]
aws_instance.named_test_resource: Still creating... [20s elapsed]
aws_instance.named_test_resource: Still creating... [30s elapsed]
aws_instance.named_test_resource: Still creating... [40s elapsed]
aws_instance.named_test_resource: Creation complete after 46s [id=i-068546fec907919cf]
null_resource.delay: Creating...
null_resource.delay: Provisioning with 'local-exec'...
null_resource.delay (local-exec): Executing: ["/bin/sh" "-c" "sleep 300"]
null_resource.delay: Still creating... [10s elapsed]
null_resource.delay: Still creating... [20s elapsed]
null_resource.delay: Still creating... [30s elapsed]
null_resource.delay: Still creating... [40s elapsed]
null_resource.delay: Still creating... [50s elapsed]
null_resource.delay: Still creating... [1m0s elapsed]
null_resource.delay: Still creating... [1m10s elapsed]
null_resource.delay: Still creating... [1m20s elapsed]
null_resource.delay: Still creating... [1m30s elapsed]
null_resource.delay: Still creating... [1m40s elapsed]
null_resource.delay: Still creating... [1m50s elapsed]
null_resource.delay: Still creating... [2m0s elapsed]
null_resource.delay: Still creating... [2m10s elapsed]
null_resource.delay: Still creating... [2m20s elapsed]
null_resource.delay: Still creating... [2m30s elapsed]
null_resource.delay: Still creating... [2m40s elapsed]
null_resource.delay: Still creating... [2m50s elapsed]
null_resource.delay: Still creating... [3m0s elapsed]
null_resource.delay: Still creating... [3m10s elapsed]
null_resource.delay: Still creating... [3m20s elapsed]
null_resource.delay: Still creating... [3m30s elapsed]
null_resource.delay: Still creating... [3m40s elapsed]
null_resource.delay: Still creating... [3m50s elapsed]
null_resource.delay: Still creating... [4m0s elapsed]
null_resource.delay: Still creating... [4m10s elapsed]
null_resource.delay: Still creating... [4m20s elapsed]
null_resource.delay: Still creating... [4m30s elapsed]
null_resource.delay: Still creating... [4m40s elapsed]
null_resource.delay: Still creating... [4m50s elapsed]
null_resource.delay: Creation complete after 5m0s [id=5773978843155079922]
null_resource.list_compliance: Creating...
null_resource.list_compliance: Provisioning with 'local-exec'...
null_resource.list_compliance (local-exec): Executing: ["/bin/sh" "-c" "aws ssm list-compliance-items --resource-ids i-068546fec907919cf --resource-types ManagedInstance --output json --profile default --region us-east-1 > /tmp/tests/aws_ssm_managed_instance_compliance/terraform/test/compliance.json"]
null_resource.list_compliance: Creation complete after 1s [id=1289597448421581972]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=5b0f9553613c94cb1a31539b398b5e7f98a05a4a]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: Invalid index

  on variables.tf line 128, in output "arn":
 128:   value      = "arn:${data.aws_partition.current.partition}:ssm:${data.aws_region.primary.name}:${data.aws_caller_identity.current.account_id}:managed-instance/${aws_instance.named_test_resource.id}/compliance-item/${jsondecode(data.local_file.input.content).ComplianceItems[0].Id}:${jsondecode(data.local_file.input.content).ComplianceItems[0].ComplianceType}"
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 128, in output "arn":
 128:   value      = "arn:${data.aws_partition.current.partition}:ssm:${data.aws_region.primary.name}:${data.aws_caller_identity.current.account_id}:managed-instance/${aws_instance.named_test_resource.id}/compliance-item/${jsondecode(data.local_file.input.content).ComplianceItems[0].Id}:${jsondecode(data.local_file.input.content).ComplianceItems[0].ComplianceType}"
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 137, in output "compliance_id":
 137:   value      = jsondecode(data.local_file.input.content).ComplianceItems[0].Id
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 142, in output "status":
 142:   value      = jsondecode(data.local_file.input.content).ComplianceItems[0].Status
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_ssm_managed_instance_compliance


Error: Invalid index

  on variables.tf line 128, in output "arn":
 128:   value      = "arn:${data.aws_partition.current.partition}:ssm:${data.aws_region.primary.name}:${data.aws_caller_identity.current.account_id}:managed-instance/${aws_instance.named_test_resource.id}/compliance-item/${jsondecode(data.local_file.input.content).ComplianceItems[0].Id}:${jsondecode(data.local_file.input.content).ComplianceItems[0].ComplianceType}"
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 128, in output "arn":
 128:   value      = "arn:${data.aws_partition.current.partition}:ssm:${data.aws_region.primary.name}:${data.aws_caller_identity.current.account_id}:managed-instance/${aws_instance.named_test_resource.id}/compliance-item/${jsondecode(data.local_file.input.content).ComplianceItems[0].Id}:${jsondecode(data.local_file.input.content).ComplianceItems[0].ComplianceType}"
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 137, in output "compliance_id":
 137:   value      = jsondecode(data.local_file.input.content).ComplianceItems[0].Id
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.

Error: Invalid index

  on variables.tf line 142, in output "status":
 142:   value      = jsondecode(data.local_file.input.content).ComplianceItems[0].Status
    ├────────────────
    │ data.local_file.input.content is "{\n    \"ComplianceItems\": []\n}\n"

The given key does not identify an element in this collection value: the
collection has no elements.
SUMMARY:

✘ tests/aws_ssm_managed_instance_compliance failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_parameter []

PRETEST: tests/aws_ssm_parameter

TEST: tests/aws_ssm_parameter
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ssm_parameter.named_test_resource will be created
  + resource "aws_ssm_parameter" "named_test_resource" {
      + arn         = (known after apply)
      + data_type   = (known after apply)
      + description = "The parameter description"
      + id          = (known after apply)
      + key_id      = "alias/aws/ssm"
      + name        = "turbottest68965"
      + tags        = {
          + "name" = "test"
        }
      + tags_all    = {
          + "name" = "test"
        }
      + tier        = "Advanced"
      + type        = "SecureString"
      + value       = (sensitive value)
      + version     = (known after apply)
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + date_time     = (known after apply)
  + resource_aka  = (known after apply)
  + resource_name = "turbottest68965"
aws_ssm_parameter.named_test_resource: Creating...
aws_ssm_parameter.named_test_resource: Creation complete after 2s [id=turbottest68965]
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws ssm put-parameter --name turbottest68965 --value \"P@sSwW)rd\" --overwrite --policies '[{\"Type\":\"Expiration\",\"Version\":\"1.0\",\"Attributes\":{\"Timestamp\":\"2022-08-11T18:30:15Z\"}}]' --profile default --region  us-east-1"]
null_resource.named_test_resource (local-exec): {
null_resource.named_test_resource (local-exec):     "Version": 2,
null_resource.named_test_resource (local-exec):     "Tier": "Advanced"
null_resource.named_test_resource (local-exec): }
null_resource.named_test_resource: Creation complete after 1s [id=3526549446557361632]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 47, in data "null_data_source" "resource":
  47: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
date_time = "2022-08-11T18:30:15Z"
resource_aka = "arn:aws:ssm:us-east-1:632902152528:parameter/turbottest68965"
resource_name = "turbottest68965"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:parameter/turbottest68965"
    ],
    "name": "turbottest68965",
    "tags": {
      "name": "test"
    },
    "title": "turbottest68965"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "data_type": "text",
    "key_id": "alias/aws/ssm",
    "name": "turbottest68965",
    "partition": "aws",
    "policies": [
      {
        "PolicyStatus": "Pending",
        "PolicyText": "{\"Type\":\"Expiration\",\"Version\":\"1.0\",\"Attributes\":{\"Timestamp\":\"2022-08-11T18:30:15Z\"}}",
        "PolicyType": "Expiration"
      }
    ],
    "region": "us-east-1",
    "tags": {
      "name": "test"
    },
    "tags_src": [
      {
        "Key": "name",
        "Value": "test"
      }
    ],
    "tier": "Advanced"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:parameter/turbottest68965"
    ],
    "region": "us-east-1",
    "tags": {
      "name": "test"
    },
    "title": "turbottest68965"
  }
]
✔ PASSED

POSTTEST: tests/aws_ssm_parameter

TEARDOWN: tests/aws_ssm_parameter

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssm_patch_baseline []

PRETEST: tests/aws_ssm_patch_baseline

TEST: tests/aws_ssm_patch_baseline
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_ssm_patch_baseline.named_test_resource will be created
  + resource "aws_ssm_patch_baseline" "named_test_resource" {
      + approved_patches                  = [
          + "KB123456",
        ]
      + approved_patches_compliance_level = "UNSPECIFIED"
      + arn                               = (known after apply)
      + description                       = "Test resource"
      + id                                = (known after apply)
      + name                              = "turbottest41061"
      + operating_system                  = "WINDOWS"
      + rejected_patches_action           = (known after apply)
      + tags                              = {
          + "foo" = "bar"
        }
      + tags_all                          = {
          + "foo" = "bar"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + date_time     = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest41061"
aws_ssm_patch_baseline.named_test_resource: Creating...
aws_ssm_patch_baseline.named_test_resource: Creation complete after 1s [id=pb-004b0da0071251ee9]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
date_time = "2022-08-11T18:30:53Z"
resource_aka = "arn:aws:ssm:us-east-1:632902152528:patchbaseline/pb-004b0da0071251ee9"
resource_id = "pb-004b0da0071251ee9"
resource_name = "turbottest41061"

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:patchbaseline/pb-004b0da0071251ee9"
    ],
    "baseline_id": "pb-004b0da0071251ee9",
    "description": "Test resource",
    "name": "turbottest41061",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "foo": "bar"
    },
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:patchbaseline/pb-004b0da0071251ee9"
    ],
    "baseline_id": "pb-004b0da0071251ee9",
    "description": "Test resource",
    "name": "turbottest41061",
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "foo": "bar"
    },
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ssm:us-east-1:632902152528:patchbaseline/pb-004b0da0071251ee9"
    ],
    "region": "us-east-1",
    "tags": {
      "foo": "bar"
    },
    "title": "turbottest41061"
  }
]
✔ PASSED

POSTTEST: tests/aws_ssm_patch_baseline

TEARDOWN: tests/aws_ssm_patch_baseline

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssoadmin_instance []

PRETEST: tests/aws_ssoadmin_instance

TEST: tests/aws_ssoadmin_instance
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_ssoadmin_instance


Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

SUMMARY:

✘ tests/aws_ssoadmin_instance failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssoadmin_managed_policy_attachment []

PRETEST: tests/aws_ssoadmin_managed_policy_attachment

TEST: tests/aws_ssoadmin_managed_policy_attachment
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_ssoadmin_managed_policy_attachment


Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

SUMMARY:

✘ tests/aws_ssoadmin_managed_policy_attachment failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_ssoadmin_permission_set []

PRETEST: tests/aws_ssoadmin_permission_set

TEST: tests/aws_ssoadmin_permission_set
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_ssoadmin_permission_set


Error: error reading SSO Instances: AccessDeniedException: User: arn:aws:sts::632902152528:assumed-role/steampipe-intg-test/i-0665a65b1a1c2b64f is not authorized to perform: sso:ListInstances

  with data.aws_ssoadmin_instances.main,
  on variables.tf line 49, in data "aws_ssoadmin_instances" "main":
  49: data "aws_ssoadmin_instances" "main" {}

SUMMARY:

✘ tests/aws_ssoadmin_permission_set failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_tagging_resource []

PRETEST: tests/aws_tagging_resource

TEST: tests/aws_tagging_resource
Running terraform

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variable.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

Error: error configuring Terraform AWS Provider: failed to get shared config profile, nagraj

  with provider["registry.terraform.io/hashicorp/aws"],
  on variable.tf line 25, in provider "aws":
  25: provider "aws" {


Error: error configuring Terraform AWS Provider: failed to get shared config profile, nagraj

  with provider["registry.terraform.io/hashicorp/aws"].alternate,
  on variable.tf line 30, in provider "aws":
  30: provider "aws" {

Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED
Terraform run failed, skipping SQL queries

✘ FAILED

TEARDOWN: tests/aws_tagging_resource


Error: error configuring Terraform AWS Provider: failed to get shared config profile, nagraj

  with provider["registry.terraform.io/hashicorp/aws"],
  on variable.tf line 25, in provider "aws":
  25: provider "aws" {


Error: error configuring Terraform AWS Provider: failed to get shared config profile, nagraj

  with provider["registry.terraform.io/hashicorp/aws"].alternate,
  on variable.tf line 30, in provider "aws":
  30: provider "aws" {

SUMMARY:

✘ tests/aws_tagging_resource failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc []

PRETEST: tests/aws_vpc

TEST: tests/aws_vpc
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "turbottest85262"
        }
      + tags_all                             = {
          + "Name" = "turbottest85262"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest85262"
aws_vpc.named_test_resource: Creating...
aws_vpc.named_test_resource: Creation complete after 2s [id=vpc-02059b4e12b2e0673]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:vpc/vpc-02059b4e12b2e0673"
resource_id = "vpc-02059b4e12b2e0673"
resource_name = "turbottest85262"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:vpc/vpc-02059b4e12b2e0673",
    "cidr_block": "10.0.0.0/16",
    "is_default": false,
    "owner_id": "632902152528",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest85262"
      }
    ],
    "vpc_id": "vpc-02059b4e12b2e0673"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc/vpc-02059b4e12b2e0673"
    ],
    "tags": {
      "Name": "turbottest85262"
    },
    "title": "turbottest85262",
    "vpc_id": "vpc-02059b4e12b2e0673"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "cidr_block": "10.0.0.0/16",
    "vpc_id": "vpc-02059b4e12b2e0673"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_vpc

TEARDOWN: tests/aws_vpc

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_customer_gateway []

PRETEST: tests/aws_vpc_customer_gateway

TEST: tests/aws_vpc_customer_gateway
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_customer_gateway.named_test_resource will be created
  + resource "aws_customer_gateway" "named_test_resource" {
      + arn        = (known after apply)
      + bgp_asn    = "65000"
      + id         = (known after apply)
      + ip_address = "172.83.124.10"
      + tags       = {
          + "Name" = "turbottest48539"
        }
      + tags_all   = {
          + "Name" = "turbottest48539"
        }
      + type       = "ipsec.1"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest48539"
aws_customer_gateway.named_test_resource: Creating...
aws_customer_gateway.named_test_resource: Still creating... [10s elapsed]
aws_customer_gateway.named_test_resource: Creation complete after 11s [id=cgw-0208df31f96843073]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:ec2:us-east-1:632902152528:customer-gateway/cgw-0208df31f96843073"
resource_id = "cgw-0208df31f96843073"
resource_name = "turbottest48539"

Running SQL query: test-get-query.sql
[
  {
    "bgp_asn": "65000",
    "customer_gateway_id": "cgw-0208df31f96843073",
    "ip_address": "172.83.124.10",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest48539"
      }
    ],
    "type": "ipsec.1"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:customer-gateway/cgw-0208df31f96843073"
    ],
    "customer_gateway_id": "cgw-0208df31f96843073",
    "tags": {
      "Name": "turbottest48539"
    },
    "title": "turbottest48539"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "customer_gateway_id": "cgw-0208df31f96843073",
    "type": "ipsec.1"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_customer_gateway

TEARDOWN: tests/aws_vpc_customer_gateway

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_dhcp_options []

PRETEST: tests/aws_vpc_dhcp_options

TEST: tests/aws_vpc_dhcp_options
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_vpc_dhcp_options.named_test_resource will be created
  + resource "aws_vpc_dhcp_options" "named_test_resource" {
      + arn                 = (known after apply)
      + domain_name_servers = [
          + "8.8.8.8",
          + "8.8.4.4",
        ]
      + id                  = (known after apply)
      + owner_id            = (known after apply)
      + tags                = {
          + "Name" = "turbottest85006"
        }
      + tags_all            = {
          + "Name" = "turbottest85006"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + partition     = "aws"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest85006"
aws_vpc_dhcp_options.named_test_resource: Creating...
aws_vpc_dhcp_options.named_test_resource: Creation complete after 1s [id=dopt-0f5c06045a3547783]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
partition = "aws"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:dhcp-options/dopt-0f5c06045a3547783"
resource_id = "dopt-0f5c06045a3547783"
resource_name = "turbottest85006"

Running SQL query: test-get-query.sql
[
  {
    "dhcp_options_id": "dopt-0f5c06045a3547783",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest85006"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:dhcp-options/dopt-0f5c06045a3547783"
    ],
    "dhcp_options_id": "dopt-0f5c06045a3547783",
    "tags": {
      "Name": "turbottest85006"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest85006"
      }
    ],
    "title": "turbottest85006"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:dhcp-options/dopt-0f5c06045a3547783"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "Name": "turbottest85006"
    },
    "title": "turbottest85006"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_dhcp_options

TEARDOWN: tests/aws_vpc_dhcp_options

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_egress_only_internet_gateway []

PRETEST: tests/aws_vpc_egress_only_internet_gateway

TEST: tests/aws_vpc_egress_only_internet_gateway
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_egress_only_internet_gateway.named_test_resource will be created
  + resource "aws_egress_only_internet_gateway" "named_test_resource" {
      + id       = (known after apply)
      + tags     = {
          + "Name" = "turbottest90815"
        }
      + tags_all = {
          + "Name" = "turbottest90815"
        }
      + vpc_id   = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest90815"
        }
      + tags_all                             = {
          + "name" = "turbottest90815"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest90815"
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-0c36c7e49f574de10]
aws_egress_only_internet_gateway.named_test_resource: Creating...
aws_egress_only_internet_gateway.named_test_resource: Creation complete after 1s [id=eigw-06e83c190e6ffba6b]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=3d933b92e840cd5e218c3acbd1a7d888648d58b17f40fad31dad76d9fef9f214]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

resource_aka = "arn:aws:ec2:us-east-1:632902152528:egress-only-internet-gateway/eigw-06e83c190e6ffba6b"
resource_id = "eigw-06e83c190e6ffba6b"
resource_name = "turbottest90815"
vpc_id = "vpc-0c36c7e49f574de10"

Running SQL query: test-get-query.sql
[
  {
    "attachments": [
      {
        "State": "attached",
        "VpcId": "vpc-0c36c7e49f574de10"
      }
    ],
    "id": "eigw-06e83c190e6ffba6b",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest90815"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:egress-only-internet-gateway/eigw-06e83c190e6ffba6b"
    ],
    "id": "eigw-06e83c190e6ffba6b",
    "tags": {
      "Name": "turbottest90815"
    },
    "title": "turbottest90815"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "id": "eigw-06e83c190e6ffba6b",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest90815"
      }
    ],
    "title": "turbottest90815"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_egress_only_internet_gateway

TEARDOWN: tests/aws_vpc_egress_only_internet_gateway

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_eip []

PRETEST: tests/aws_vpc_eip

TEST: tests/aws_vpc_eip
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_eip.named_test_resource will be created
  + resource "aws_eip" "named_test_resource" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "turbottest28671"
        }
      + tags_all             = {
          + "Name" = "turbottest28671"
        }
      + vpc                  = true
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + public_ip     = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest28671"
aws_eip.named_test_resource: Creating...
aws_eip.named_test_resource: Creation complete after 1s [id=eipalloc-076917e8b435a3b16]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=8b5913f5b61c512a626a37da44768eb44722c96721062aafd01b01a221ef8b7e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

public_ip = "52.1.115.220"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:eip/eipalloc-076917e8b435a3b16"
resource_id = "eipalloc-076917e8b435a3b16"
resource_name = "turbottest28671"

Running SQL query: test-get-query.sql
[
  {
    "allocation_id": "eipalloc-076917e8b435a3b16",
    "arn": "arn:aws:ec2:us-east-1:632902152528:eip/eipalloc-076917e8b435a3b16",
    "domain": "vpc",
    "public_ip": "52.1.115.220",
    "public_ipv4_pool": "amazon",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest28671"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:eip/eipalloc-076917e8b435a3b16"
    ],
    "allocation_id": "eipalloc-076917e8b435a3b16",
    "tags": {
      "Name": "turbottest28671"
    },
    "title": "eipalloc-076917e8b435a3b16"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "allocation_id": "eipalloc-076917e8b435a3b16",
    "public_ip": "52.1.115.220"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_eip

TEARDOWN: tests/aws_vpc_eip

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_endpoint []

PRETEST: tests/aws_vpc_endpoint

TEST: tests/aws_vpc_endpoint
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest37414"
        }
      + tags_all                             = {
          + "name" = "turbottest37414"
        }
    }

  # aws_vpc_endpoint.named_test_resource will be created
  + resource "aws_vpc_endpoint" "named_test_resource" {
      + arn                   = (known after apply)
      + cidr_blocks           = (known after apply)
      + dns_entry             = (known after apply)
      + id                    = (known after apply)
      + network_interface_ids = (known after apply)
      + owner_id              = (known after apply)
      + policy                = (known after apply)
      + prefix_list_id        = (known after apply)
      + private_dns_enabled   = false
      + requester_managed     = (known after apply)
      + route_table_ids       = (known after apply)
      + security_group_ids    = (known after apply)
      + service_name          = "com.amazonaws.us-east-1.s3"
      + state                 = (known after apply)
      + subnet_ids            = (known after apply)
      + tags                  = {
          + "Name" = "turbottest37414"
        }
      + tags_all              = {
          + "Name" = "turbottest37414"
        }
      + vpc_endpoint_type     = "Gateway"
      + vpc_id                = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_region    = "us-east-1"
  + partition     = "aws"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest37414"
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-08ab981686e79f398]
aws_vpc_endpoint.named_test_resource: Creating...
aws_vpc_endpoint.named_test_resource: Creation complete after 6s [id=vpce-05f00f2ef0ba88e57]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_region = "us-east-1"
partition = "aws"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:vpc-endpoint/vpce-05f00f2ef0ba88e57"
resource_id = "vpce-05f00f2ef0ba88e57"
resource_name = "turbottest37414"
vpc_id = "vpc-08ab981686e79f398"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-endpoint/vpce-05f00f2ef0ba88e57"
    ],
    "tags": {
      "Name": "turbottest37414"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest37414"
      }
    ],
    "title": "turbottest37414",
    "vpc_endpoint_id": "vpce-05f00f2ef0ba88e57"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-endpoint/vpce-05f00f2ef0ba88e57"
    ],
    "tags": {
      "Name": "turbottest37414"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest37414"
      }
    ],
    "title": "turbottest37414",
    "vpc_endpoint_id": "vpce-05f00f2ef0ba88e57",
    "vpc_id": "vpc-08ab981686e79f398"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-endpoint/vpce-05f00f2ef0ba88e57"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "tags": {
      "Name": "turbottest37414"
    },
    "title": "turbottest37414"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_endpoint

TEARDOWN: tests/aws_vpc_endpoint

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_endpoint_service []

PRETEST: tests/aws_vpc_endpoint_service

TEST: tests/aws_vpc_endpoint_service
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.gw will be created
  + resource "aws_internet_gateway" "gw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_lb.test will be created
  + resource "aws_lb" "test" {
      + arn                              = (known after apply)
      + arn_suffix                       = (known after apply)
      + dns_name                         = (known after apply)
      + enable_cross_zone_load_balancing = false
      + enable_deletion_protection       = false
      + id                               = (known after apply)
      + internal                         = false
      + ip_address_type                  = (known after apply)
      + load_balancer_type               = "network"
      + name                             = "turbottest21960"
      + security_groups                  = (known after apply)
      + subnets                          = (known after apply)
      + tags                             = {
          + "name" = "turbottest21960"
        }
      + tags_all                         = {
          + "name" = "turbottest21960"
        }
      + vpc_id                           = (known after apply)
      + zone_id                          = (known after apply)

      + subnet_mapping {
          + allocation_id        = (known after apply)
          + ipv6_address         = (known after apply)
          + outpost_id           = (known after apply)
          + private_ipv4_address = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # aws_subnet.public will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest21960"
        }
      + tags_all                             = {
          + "name" = "turbottest21960"
        }
    }

  # aws_vpc_endpoint_service.named_test_resource will be created
  + resource "aws_vpc_endpoint_service" "named_test_resource" {
      + acceptance_required            = false
      + allowed_principals             = (known after apply)
      + arn                            = (known after apply)
      + availability_zones             = (known after apply)
      + base_endpoint_dns_names        = (known after apply)
      + id                             = (known after apply)
      + manages_vpc_endpoints          = (known after apply)
      + network_load_balancer_arns     = (known after apply)
      + private_dns_name               = (known after apply)
      + private_dns_name_configuration = (known after apply)
      + service_name                   = (known after apply)
      + service_type                   = (known after apply)
      + state                          = (known after apply)
      + tags                           = {
          + "Name" = "turbottest21960"
        }
      + tags_all                       = {
          + "Name" = "turbottest21960"
        }
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest21960"
  + service_name  = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-08b70bd7b5dea52e7]
aws_internet_gateway.gw: Creating...
aws_subnet.public: Creating...
aws_subnet.public: Creation complete after 1s [id=subnet-0947038a0dd8d6d3c]
aws_internet_gateway.gw: Creation complete after 1s [id=igw-03e7fbabd076cb036]
aws_lb.test: Creating...
aws_lb.test: Still creating... [10s elapsed]
aws_lb.test: Still creating... [20s elapsed]
aws_lb.test: Still creating... [30s elapsed]
aws_lb.test: Still creating... [40s elapsed]
aws_lb.test: Still creating... [50s elapsed]
aws_lb.test: Still creating... [1m0s elapsed]
aws_lb.test: Still creating... [1m10s elapsed]
aws_lb.test: Still creating... [1m20s elapsed]
aws_lb.test: Still creating... [1m30s elapsed]
aws_lb.test: Still creating... [1m40s elapsed]
aws_lb.test: Still creating... [1m50s elapsed]
aws_lb.test: Still creating... [2m0s elapsed]
aws_lb.test: Still creating... [2m10s elapsed]
aws_lb.test: Still creating... [2m20s elapsed]
aws_lb.test: Creation complete after 2m25s [id=arn:aws:elasticloadbalancing:us-east-1:632902152528:loadbalancer/net/turbottest21960/69e3bca1f6bb77ed]
aws_vpc_endpoint_service.named_test_resource: Creating...
aws_vpc_endpoint_service.named_test_resource: Creation complete after 7s [id=vpce-svc-0964276ee19d0fa8c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:vpc-endpoint-service/vpce-svc-0964276ee19d0fa8c"
resource_id = "vpce-svc-0964276ee19d0fa8c"
resource_name = "turbottest21960"
service_name = "com.amazonaws.vpce.us-east-1.vpce-svc-0964276ee19d0fa8c"

Running SQL query: test-get-query.sql
[
  {
    "acceptance_required": false,
    "manages_vpc_endpoints": false,
    "owner": "632902152528",
    "service_id": "vpce-svc-0964276ee19d0fa8c",
    "service_name": "com.amazonaws.vpce.us-east-1.vpce-svc-0964276ee19d0fa8c",
    "service_type": [
      {
        "ServiceType": "Interface"
      }
    ],
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest21960"
      }
    ],
    "vpc_endpoint_policy_supported": false
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-endpoint-service/vpce-svc-0964276ee19d0fa8c"
    ],
    "service_name": "com.amazonaws.vpce.us-east-1.vpce-svc-0964276ee19d0fa8c",
    "tags": {
      "Name": "turbottest21960"
    },
    "title": "com.amazonaws.vpce.us-east-1.vpce-svc-0964276ee19d0fa8c"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "service_id": "vpce-svc-0964276ee19d0fa8c",
    "service_name": "com.amazonaws.vpce.us-east-1.vpce-svc-0964276ee19d0fa8c"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_endpoint_service

TEARDOWN: tests/aws_vpc_endpoint_service

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_flow_log []

PRETEST: tests/aws_vpc_flow_log

TEST: tests/aws_vpc_flow_log
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.example will be created
  + resource "aws_cloudwatch_log_group" "example" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "turbottest78075"
      + retention_in_days = 0
      + tags_all          = (known after apply)
    }

  # aws_flow_log.named_test_resource will be created
  + resource "aws_flow_log" "named_test_resource" {
      + arn                      = (known after apply)
      + iam_role_arn             = (known after apply)
      + id                       = (known after apply)
      + log_destination          = (known after apply)
      + log_destination_type     = "cloud-watch-logs"
      + log_format               = (known after apply)
      + log_group_name           = (known after apply)
      + max_aggregation_interval = 600
      + tags                     = {
          + "Name" = "turbottest78075"
        }
      + tags_all                 = {
          + "Name" = "turbottest78075"
        }
      + traffic_type             = "ALL"
      + vpc_id                   = (known after apply)
    }

  # aws_iam_role.example will be created
  + resource "aws_iam_role" "example" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "vpc-flow-logs.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest78075"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_iam_role_policy.example will be created
  + resource "aws_iam_role_policy" "example" {
      + id     = (known after apply)
      + name   = "turbottest78075"
      + policy = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "logs:CreateLogGroup",
                          + "logs:CreateLogStream",
                          + "logs:PutLogEvents",
                          + "logs:DescribeLogGroups",
                          + "logs:DescribeLogStreams",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + role   = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest78075"
        }
      + tags_all                             = {
          + "name" = "turbottest78075"
        }
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + log_group_arn = (known after apply)
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest78075"
  + role_arn      = (known after apply)
aws_vpc.main: Creating...
aws_cloudwatch_log_group.example: Creating...
aws_iam_role.example: Creating...
aws_cloudwatch_log_group.example: Creation complete after 1s [id=turbottest78075]
aws_iam_role.example: Creation complete after 2s [id=turbottest78075]
aws_iam_role_policy.example: Creating...
aws_iam_role_policy.example: Creation complete after 0s [id=turbottest78075:turbottest78075]
aws_vpc.main: Creation complete after 3s [id=vpc-06ad1143a3603b88f]
aws_flow_log.named_test_resource: Creating...
aws_flow_log.named_test_resource: Creation complete after 1s [id=fl-0ef1184e006c65d7c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
log_group_arn = "arn:aws:logs:us-east-1:632902152528:log-group:turbottest78075"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:vpc-flow-log/fl-0ef1184e006c65d7c"
resource_id = "fl-0ef1184e006c65d7c"
resource_name = "turbottest78075"
role_arn = "arn:aws:iam::632902152528:role/turbottest78075"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-flow-log/fl-0ef1184e006c65d7c"
    ],
    "deliver_logs_permission_arn": "arn:aws:iam::632902152528:role/turbottest78075",
    "flow_log_id": "fl-0ef1184e006c65d7c",
    "log_destination": "arn:aws:logs:us-east-1:632902152528:log-group:turbottest78075",
    "log_destination_type": "cloud-watch-logs",
    "log_format": "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}",
    "log_group_name": "turbottest78075",
    "tags": {
      "Name": "turbottest78075"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest78075"
      }
    ],
    "title": "turbottest78075",
    "traffic_type": "ALL"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-flow-log/fl-0ef1184e006c65d7c"
    ],
    "flow_log_id": "fl-0ef1184e006c65d7c",
    "tags": {
      "Name": "turbottest78075"
    },
    "title": "turbottest78075"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpc-flow-log/fl-0ef1184e006c65d7c"
    ],
    "flow_log_id": "fl-0ef1184e006c65d7c",
    "tags": {
      "Name": "turbottest78075"
    },
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest78075"
      }
    ],
    "title": "turbottest78075",
    "traffic_type": "ALL"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_vpc_flow_log

TEARDOWN: tests/aws_vpc_flow_log

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_internet_gateway []

PRETEST: tests/aws_vpc_internet_gateway

TEST: tests/aws_vpc_internet_gateway
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_internet_gateway.named_test_resource will be created
  + resource "aws_internet_gateway" "named_test_resource" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "turbottest24390"
        }
      + tags_all = {
          + "Name" = "turbottest24390"
        }
      + vpc_id   = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest24390"
        }
      + tags_all                             = {
          + "name" = "turbottest24390"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest24390"
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-0dc1c0416e25d243d]
aws_internet_gateway.named_test_resource: Creating...
aws_internet_gateway.named_test_resource: Creation complete after 2s [id=igw-0d643782b6adee0e8]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:internet-gateway/igw-0d643782b6adee0e8"
resource_id = "igw-0d643782b6adee0e8"
resource_name = "turbottest24390"
vpc_id = "vpc-0dc1c0416e25d243d"

Running SQL query: test-get-query.sql
[
  {
    "attachments": [
      {
        "State": "available",
        "VpcId": "vpc-0dc1c0416e25d243d"
      }
    ],
    "internet_gateway_id": "igw-0d643782b6adee0e8",
    "owner_id": "632902152528",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest24390"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:internet-gateway/igw-0d643782b6adee0e8"
    ],
    "internet_gateway_id": "igw-0d643782b6adee0e8",
    "tags": {
      "Name": "turbottest24390"
    },
    "title": "turbottest24390"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "internet_gateway_id": "igw-0d643782b6adee0e8",
    "owner_id": "632902152528",
    "tags": {
      "Name": "turbottest24390"
    },
    "title": "turbottest24390"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_internet_gateway

TEARDOWN: tests/aws_vpc_internet_gateway

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_nat_gateway []

PRETEST: tests/aws_vpc_nat_gateway

TEST: tests/aws_vpc_nat_gateway
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_eip.example will be created
  + resource "aws_eip" "example" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "turbottest71223"
        }
      + tags_all             = {
          + "Name" = "turbottest71223"
        }
      + vpc                  = true
    }

  # aws_internet_gateway.gw will be created
  + resource "aws_internet_gateway" "gw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.named_test_resource will be created
  + resource "aws_nat_gateway" "named_test_resource" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "turbottest71223"
        }
      + tags_all             = {
          + "Name" = "turbottest71223"
        }
    }

  # aws_subnet.example will be created
  + resource "aws_subnet" "example" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "name" = "turbottest71223"
        }
      + tags_all                                       = {
          + "name" = "turbottest71223"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest71223"
        }
      + tags_all                             = {
          + "name" = "turbottest71223"
        }
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + allocation_id        = (known after apply)
  + network_interface_id = (known after apply)
  + private_ip           = (known after apply)
  + public_ip            = (known after apply)
  + resource_aka         = (known after apply)
  + resource_id          = (known after apply)
  + resource_name        = "turbottest71223"
  + subnet_id            = (known after apply)
  + vpc_id               = (known after apply)
aws_eip.example: Creating...
aws_vpc.main: Creating...
aws_eip.example: Creation complete after 1s [id=eipalloc-07cb02ed0e1c4f89d]
aws_vpc.main: Creation complete after 4s [id=vpc-089036e5835d21827]
aws_internet_gateway.gw: Creating...
aws_subnet.example: Creating...
aws_subnet.example: Creation complete after 1s [id=subnet-042e18eac73644614]
aws_internet_gateway.gw: Creation complete after 1s [id=igw-047210a0b867a1e73]
aws_nat_gateway.named_test_resource: Creating...
aws_nat_gateway.named_test_resource: Still creating... [10s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [20s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [30s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [40s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [50s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [1m0s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [1m10s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [1m20s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [1m30s elapsed]
aws_nat_gateway.named_test_resource: Still creating... [1m40s elapsed]
aws_nat_gateway.named_test_resource: Creation complete after 1m48s [id=nat-0c76e546b50b989c4]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=81857152d69ce3fe0629b4c87cf471919d232c0f67b94c3a547b6812c916f3ab]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

allocation_id = "eipalloc-07cb02ed0e1c4f89d"
network_interface_id = "eni-0f57f9d716db6dd36"
private_ip = "10.0.1.95"
public_ip = "44.207.153.51"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:natgateway/nat-0c76e546b50b989c4"
resource_id = "nat-0c76e546b50b989c4"
resource_name = "turbottest71223"
subnet_id = "subnet-042e18eac73644614"
vpc_id = "vpc-089036e5835d21827"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:natgateway/nat-0c76e546b50b989c4",
    "nat_gateway_addresses": [
      {
        "AllocationId": "eipalloc-07cb02ed0e1c4f89d",
        "NetworkInterfaceId": "eni-0f57f9d716db6dd36",
        "PrivateIp": "10.0.1.95",
        "PublicIp": "44.207.153.51"
      }
    ],
    "nat_gateway_id": "nat-0c76e546b50b989c4",
    "subnet_id": "subnet-042e18eac73644614",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest71223"
      }
    ],
    "vpc_id": "vpc-089036e5835d21827"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:natgateway/nat-0c76e546b50b989c4"
    ],
    "nat_gateway_id": "nat-0c76e546b50b989c4",
    "tags": {
      "Name": "turbottest71223"
    },
    "title": "turbottest71223"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:natgateway/nat-0c76e546b50b989c4"
    ],
    "nat_gateway_id": "nat-0c76e546b50b989c4",
    "tags": {
      "Name": "turbottest71223"
    },
    "title": "turbottest71223",
    "vpc_id": "vpc-089036e5835d21827"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_nat_gateway

TEARDOWN: tests/aws_vpc_nat_gateway

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_network_acl []

PRETEST: tests/aws_vpc_network_acl

TEST: tests/aws_vpc_network_acl
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_network_acl.named_test_resource will be created
  + resource "aws_network_acl" "named_test_resource" {
      + arn        = (known after apply)
      + egress     = [
          + {
              + action          = "allow"
              + cidr_block      = "10.3.0.0/18"
              + from_port       = 443
              + icmp_code       = null
              + icmp_type       = null
              + ipv6_cidr_block = ""
              + protocol        = "tcp"
              + rule_no         = 200
              + to_port         = 443
            },
        ]
      + id         = (known after apply)
      + ingress    = [
          + {
              + action          = "allow"
              + cidr_block      = "10.3.0.0/18"
              + from_port       = 80
              + icmp_code       = null
              + icmp_type       = null
              + ipv6_cidr_block = ""
              + protocol        = "tcp"
              + rule_no         = 100
              + to_port         = 80
            },
        ]
      + owner_id   = (known after apply)
      + subnet_ids = (known after apply)
      + tags       = {
          + "Name" = "turbottest73030"
        }
      + tags_all   = {
          + "Name" = "turbottest73030"
        }
      + vpc_id     = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest73030"
        }
      + tags_all                             = {
          + "name" = "turbottest73030"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest73030"
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 4s [id=vpc-0e5557ef43c2304a4]
aws_network_acl.named_test_resource: Creating...
aws_network_acl.named_test_resource: Creation complete after 1s [id=acl-0d8baf7a8216e9813]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:network-acl/acl-0d8baf7a8216e9813"
resource_id = "acl-0d8baf7a8216e9813"
resource_name = "turbottest73030"
vpc_id = "vpc-0e5557ef43c2304a4"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:network-acl/acl-0d8baf7a8216e9813",
    "entries": [
      {
        "CidrBlock": "10.3.0.0/18",
        "Egress": true,
        "IcmpTypeCode": null,
        "Ipv6CidrBlock": null,
        "PortRange": {
          "From": 443,
          "To": 443
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": 200
      },
      {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "IcmpTypeCode": null,
        "Ipv6CidrBlock": null,
        "PortRange": null,
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": 32767
      },
      {
        "CidrBlock": "10.3.0.0/18",
        "Egress": false,
        "IcmpTypeCode": null,
        "Ipv6CidrBlock": null,
        "PortRange": {
          "From": 80,
          "To": 80
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "RuleNumber": 100
      },
      {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "IcmpTypeCode": null,
        "Ipv6CidrBlock": null,
        "PortRange": null,
        "Protocol": "-1",
        "RuleAction": "deny",
        "RuleNumber": 32767
      }
    ],
    "is_default": false,
    "network_acl_id": "acl-0d8baf7a8216e9813",
    "owner_id": "632902152528",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest73030"
      }
    ],
    "vpc_id": "vpc-0e5557ef43c2304a4"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:network-acl/acl-0d8baf7a8216e9813"
    ],
    "network_acl_id": "acl-0d8baf7a8216e9813",
    "tags": {
      "Name": "turbottest73030"
    },
    "title": "turbottest73030"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:network-acl/acl-0d8baf7a8216e9813"
    ],
    "network_acl_id": "acl-0d8baf7a8216e9813",
    "owner_id": "632902152528",
    "tags": {
      "Name": "turbottest73030"
    },
    "title": "turbottest73030"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_network_acl

TEARDOWN: tests/aws_vpc_network_acl

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_peering_connection []

PRETEST: tests/aws_vpc_peering_connection

TEST: tests/aws_vpc_peering_connection
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_vpc.first_vpc will be created
  + resource "aws_vpc" "first_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.1.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

  # aws_vpc.second_vpc will be created
  + resource "aws_vpc" "second_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.2.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

  # aws_vpc_peering_connection.named_test_resource will be created
  + resource "aws_vpc_peering_connection" "named_test_resource" {
      + accept_status = (known after apply)
      + auto_accept   = true
      + id            = (known after apply)
      + peer_owner_id = (known after apply)
      + peer_region   = (known after apply)
      + peer_vpc_id   = (known after apply)
      + tags          = {
          + "name" = "turbottest25348"
        }
      + tags_all      = {
          + "name" = "turbottest25348"
        }
      + vpc_id        = (known after apply)

      + accepter {
          + allow_classic_link_to_remote_vpc = (known after apply)
          + allow_remote_vpc_dns_resolution  = (known after apply)
          + allow_vpc_to_remote_classic_link = (known after apply)
        }

      + requester {
          + allow_classic_link_to_remote_vpc = (known after apply)
          + allow_remote_vpc_dns_resolution  = (known after apply)
          + allow_vpc_to_remote_classic_link = (known after apply)
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + id            = (known after apply)
  + peer_vpc_id   = (known after apply)
  + resource_name = "turbottest25348"
  + vpc_id        = (known after apply)
aws_vpc.first_vpc: Creating...
aws_vpc.first_vpc: Creation complete after 3s [id=vpc-03f9750da2f05ab11]
aws_vpc.second_vpc: Creating...
aws_vpc.second_vpc: Creation complete after 4s [id=vpc-01a7883cd92bb13b7]
aws_vpc_peering_connection.named_test_resource: Creating...
aws_vpc_peering_connection.named_test_resource: Creation complete after 2s [id=pcx-0c0afd6e243205e9e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

id = "pcx-0c0afd6e243205e9e"
peer_vpc_id = "vpc-01a7883cd92bb13b7"
resource_name = "turbottest25348"
vpc_id = "vpc-03f9750da2f05ab11"

Running SQL query: test-list-query.sql
[
  {
    "accepter_vpc_id": "vpc-01a7883cd92bb13b7",
    "id": "pcx-0c0afd6e243205e9e",
    "requester_vpc_id": "vpc-03f9750da2f05ab11"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "tags": {
      "name": "turbottest25348"
    },
    "title": "pcx-0c0afd6e243205e9e"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_peering_connection

TEARDOWN: tests/aws_vpc_peering_connection

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_route []

PRETEST: tests/aws_vpc_route

TEST: tests/aws_vpc_route
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_egress_only_internet_gateway.egress will be created
  + resource "aws_egress_only_internet_gateway" "egress" {
      + id       = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_route.named_test_resource will be created
  + resource "aws_route" "named_test_resource" {
      + destination_ipv6_cidr_block = "::/0"
      + egress_only_gateway_id      = (known after apply)
      + id                          = (known after apply)
      + instance_id                 = (known after apply)
      + instance_owner_id           = (known after apply)
      + network_interface_id        = (known after apply)
      + origin                      = (known after apply)
      + route_table_id              = (known after apply)
      + state                       = (known after apply)
    }

  # aws_route_table.example will be created
  + resource "aws_route_table" "example" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "name" = "turbottest95887"
        }
      + tags_all         = {
          + "name" = "turbottest95887"
        }
      + vpc_id           = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest95887"
        }
      + tags_all                             = {
          + "name" = "turbottest95887"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_id   = (known after apply)
  + resource_name = "turbottest95887"
  + turbot_title  = (known after apply)
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-0b02d21635161db03]
aws_egress_only_internet_gateway.egress: Creating...
aws_route_table.example: Creating...
aws_egress_only_internet_gateway.egress: Creation complete after 1s [id=eigw-01928b6d9c48aec23]
aws_route_table.example: Creation complete after 2s [id=rtb-0ed10005c68befbb0]
aws_route.named_test_resource: Creating...
aws_route.named_test_resource: Creation complete after 1s [id=r-rtb-0ed10005c68befbb02750132062]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

resource_id = "rtb-0ed10005c68befbb0"
resource_name = "turbottest95887"
turbot_title = "rtb-0ed10005c68befbb0_::/0"
vpc_id = "vpc-0b02d21635161db03"

Running SQL query: query.sql
[
  {
    "route_table_id": "rtb-0ed10005c68befbb0"
  }
]
✔ PASSED

Running SQL query: test-get-query.sql
[
  {
    "title": "rtb-0ed10005c68befbb0_10.0.0.0/16"
    "title": "rtb-0ed10005c68befbb0_::/0"
  }
]

✘ FAILED

Running SQL query: test-list-query.sql
[
  {
    "route_table_id": "rtb-0ed10005c68befbb0",
    "title": "rtb-0ed10005c68befbb0_::/0"
  }
]
✔ PASSED

TEARDOWN: tests/aws_vpc_route

SUMMARY:

✘ tests/aws_vpc_route failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_route_table []

PRETEST: tests/aws_vpc_route_table

TEST: tests/aws_vpc_route_table
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = (known after apply)
      + vars     = {
          + "account_id" = "632902152528"
          + "partition"  = "aws"
          + "region"     = "us-east-1"
        }
    }

  # aws_route_table.named_test_resource will be created
  + resource "aws_route_table" "named_test_resource" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "turbottest78085"
        }
      + tags_all         = {
          + "Name" = "turbottest78085"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.named_test_resource will be created
  + resource "aws_route_table_association" "named_test_resource" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest78085"
        }
      + tags_all                                       = {
          + "Name" = "turbottest78085"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest78085"
        }
      + tags_all                             = {
          + "name" = "turbottest78085"
        }
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id     = "632902152528"
  + association_id = (known after apply)
  + resource_aka   = (known after apply)
  + resource_id    = (known after apply)
  + resource_name  = "turbottest78085"
  + subnet_id      = (known after apply)
  + vpc_id         = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-067e7b3cd094f5ad1]
aws_subnet.named_test_resource: Creating...
aws_route_table.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-00ca6af794dce28a9]
aws_route_table.named_test_resource: Creation complete after 1s [id=rtb-0743fa3285789d7f9]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=ef20f76fac1d7218bfa4b1b1ad95bcf48a974ff512b06d672fbdd243077e7614]
aws_route_table_association.named_test_resource: Creating...
aws_route_table_association.named_test_resource: Creation complete after 1s [id=rtbassoc-0595b60aaa2ce6702]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
association_id = "rtbassoc-0595b60aaa2ce6702"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:route-table/rtb-0743fa3285789d7f9"
resource_id = "rtb-0743fa3285789d7f9"
resource_name = "turbottest78085"
subnet_id = "subnet-00ca6af794dce28a9"
vpc_id = "vpc-067e7b3cd094f5ad1"

Running SQL query: test-get-query.sql
[
  {
    "associations": [
      {
        "AssociationState": {
          "State": "associated",
          "StatusMessage": null
        },
        "GatewayId": null,
        "Main": false,
        "RouteTableAssociationId": "rtbassoc-0595b60aaa2ce6702",
        "RouteTableId": "rtb-0743fa3285789d7f9",
        "SubnetId": "subnet-00ca6af794dce28a9"
      }
    ],
    "owner_id": "632902152528",
    "route_table_id": "rtb-0743fa3285789d7f9",
    "routes": [
      {
        "CarrierGatewayId": null,
        "CoreNetworkArn": null,
        "DestinationCidrBlock": "10.0.0.0/16",
        "DestinationIpv6CidrBlock": null,
        "DestinationPrefixListId": null,
        "EgressOnlyInternetGatewayId": null,
        "GatewayId": "local",
        "InstanceId": null,
        "InstanceOwnerId": null,
        "LocalGatewayId": null,
        "NatGatewayId": null,
        "NetworkInterfaceId": null,
        "Origin": "CreateRouteTable",
        "State": "active",
        "TransitGatewayId": null,
        "VpcPeeringConnectionId": null
      }
    ],
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest78085"
      }
    ],
    "vpc_id": "vpc-067e7b3cd094f5ad1"
  }
]

✘ FAILED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:route-table/rtb-0743fa3285789d7f9"
    ],
    "route_table_id": "rtb-0743fa3285789d7f9",
    "tags": {
      "Name": "turbottest78085"
    },
    "title": "rtb-0743fa3285789d7f9"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "owner_id": "632902152528",
    "route_table_id": "rtb-0743fa3285789d7f9"
  }
]
✔ PASSED

TEARDOWN: tests/aws_vpc_route_table

SUMMARY:

✘ tests/aws_vpc_route_table failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_security_group []

PRETEST: tests/aws_vpc_security_group

TEST: tests/aws_vpc_security_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_security_group.named_test_resource will be created
  + resource "aws_security_group" "named_test_resource" {
      + arn                    = (known after apply)
      + description            = "Test Security Group."
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = "turbottest23700"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "name" = "turbottest23700"
        }
      + tags_all               = {
          + "name" = "turbottest23700"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest23700"
        }
      + tags_all                             = {
          + "name" = "turbottest23700"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest23700"
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-09238702b336291dd]
aws_security_group.named_test_resource: Creating...
aws_security_group.named_test_resource: Creation complete after 3s [id=sg-05621958623155b58]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:security-group/sg-05621958623155b58"
resource_id = "sg-05621958623155b58"
resource_name = "turbottest23700"
vpc_id = "vpc-09238702b336291dd"

Running SQL query: test-get-query.sql
[
  {
    "arn": "arn:aws:ec2:us-east-1:632902152528:security-group/sg-05621958623155b58",
    "description": "Test Security Group.",
    "group_id": "sg-05621958623155b58",
    "group_name": "turbottest23700",
    "owner_id": "632902152528",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest23700"
      }
    ],
    "vpc_id": "vpc-09238702b336291dd"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:security-group/sg-05621958623155b58"
    ],
    "group_name": "turbottest23700",
    "tags": {
      "name": "turbottest23700"
    },
    "title": "turbottest23700"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "group_id": "sg-05621958623155b58",
    "group_name": "turbottest23700"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_security_group

TEARDOWN: tests/aws_vpc_security_group

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_subnet []

PRETEST: tests/aws_vpc_subnet

TEST: tests/aws_vpc_subnet
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_subnet.named_test_resource will be created
  + resource "aws_subnet" "named_test_resource" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "turbottest11219"
        }
      + tags_all                                       = {
          + "Name" = "turbottest11219"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest11219"
        }
      + tags_all                             = {
          + "name" = "turbottest11219"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest11219"
  + vpc_id        = (known after apply)
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-0e0057b588db12161]
aws_subnet.named_test_resource: Creating...
aws_subnet.named_test_resource: Creation complete after 1s [id=subnet-0f1ce6c64591998a8]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:subnet/subnet-0f1ce6c64591998a8"
resource_id = "subnet-0f1ce6c64591998a8"
resource_name = "turbottest11219"
vpc_id = "vpc-0e0057b588db12161"

Running SQL query: test-get-query.sql
[
  {
    "cidr_block": "10.0.1.0/24",
    "default_for_az": false,
    "map_customer_owned_ip_on_launch": false,
    "map_public_ip_on_launch": false,
    "owner_id": "632902152528",
    "subnet_arn": "arn:aws:ec2:us-east-1:632902152528:subnet/subnet-0f1ce6c64591998a8",
    "subnet_id": "subnet-0f1ce6c64591998a8",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest11219"
      }
    ],
    "vpc_id": "vpc-0e0057b588db12161"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:subnet/subnet-0f1ce6c64591998a8"
    ],
    "subnet_id": "subnet-0f1ce6c64591998a8",
    "tags": {
      "Name": "turbottest11219"
    },
    "title": "turbottest11219"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "subnet_arn": "arn:aws:ec2:us-east-1:632902152528:subnet/subnet-0f1ce6c64591998a8",
    "subnet_id": "subnet-0f1ce6c64591998a8"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_subnet

TEARDOWN: tests/aws_vpc_subnet

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_vpn_connection []

PRETEST: tests/aws_vpc_vpn_connection

TEST: tests/aws_vpc_vpn_connection
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_customer_gateway.named_test_resource will be created
  + resource "aws_customer_gateway" "named_test_resource" {
      + arn        = (known after apply)
      + bgp_asn    = "65000"
      + id         = (known after apply)
      + ip_address = "172.0.0.1"
      + tags_all   = (known after apply)
      + type       = "ipsec.1"
    }

  # aws_vpc.named_test_resource will be created
  + resource "aws_vpc" "named_test_resource" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

  # aws_vpn_connection.named_test_resource will be created
  + resource "aws_vpn_connection" "named_test_resource" {
      + arn                            = (known after apply)
      + core_network_arn               = (known after apply)
      + core_network_attachment_arn    = (known after apply)
      + customer_gateway_configuration = (sensitive value)
      + customer_gateway_id            = (known after apply)
      + enable_acceleration            = (known after apply)
      + id                             = (known after apply)
      + local_ipv4_network_cidr        = (known after apply)
      + local_ipv6_network_cidr        = (known after apply)
      + remote_ipv4_network_cidr       = (known after apply)
      + remote_ipv6_network_cidr       = (known after apply)
      + routes                         = (known after apply)
      + static_routes_only             = true
      + tags                           = {
          + "name" = "turbottest83497"
        }
      + tags_all                       = {
          + "name" = "turbottest83497"
        }
      + transit_gateway_attachment_id  = (known after apply)
      + tunnel1_address                = (known after apply)
      + tunnel1_bgp_asn                = (known after apply)
      + tunnel1_bgp_holdtime           = (known after apply)
      + tunnel1_cgw_inside_address     = (known after apply)
      + tunnel1_inside_cidr            = (known after apply)
      + tunnel1_inside_ipv6_cidr       = (known after apply)
      + tunnel1_preshared_key          = (sensitive value)
      + tunnel1_vgw_inside_address     = (known after apply)
      + tunnel2_address                = (known after apply)
      + tunnel2_bgp_asn                = (known after apply)
      + tunnel2_bgp_holdtime           = (known after apply)
      + tunnel2_cgw_inside_address     = (known after apply)
      + tunnel2_inside_cidr            = (known after apply)
      + tunnel2_inside_ipv6_cidr       = (known after apply)
      + tunnel2_preshared_key          = (sensitive value)
      + tunnel2_vgw_inside_address     = (known after apply)
      + tunnel_inside_ip_version       = (known after apply)
      + type                           = "ipsec.1"
      + vgw_telemetry                  = (known after apply)
      + vpn_gateway_id                 = (known after apply)
    }

  # aws_vpn_gateway.named_test_resource will be created
  + resource "aws_vpn_gateway" "named_test_resource" {
      + amazon_side_asn = (known after apply)
      + arn             = (known after apply)
      + id              = (known after apply)
      + tags_all        = (known after apply)
      + vpc_id          = (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id          = "632902152528"
  + customer_gateway_id = (known after apply)
  + resource_aka        = (known after apply)
  + resource_id         = (known after apply)
  + resource_name       = "turbottest83497"
  + type                = "ipsec.1"
  + vpn_gateway_id      = (known after apply)
aws_customer_gateway.named_test_resource: Creating...
aws_vpc.named_test_resource: Creating...
aws_vpc.named_test_resource: Creation complete after 4s [id=vpc-0f298f2330e29700c]
aws_vpn_gateway.named_test_resource: Creating...
aws_customer_gateway.named_test_resource: Still creating... [10s elapsed]
aws_customer_gateway.named_test_resource: Creation complete after 11s [id=cgw-085eb1ccebd32dc89]
aws_vpn_gateway.named_test_resource: Still creating... [10s elapsed]
aws_vpn_gateway.named_test_resource: Still creating... [20s elapsed]
aws_vpn_gateway.named_test_resource: Creation complete after 29s [id=vgw-04bda21550d9a9a7d]
aws_vpn_connection.named_test_resource: Creating...
aws_vpn_connection.named_test_resource: Still creating... [10s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [20s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [30s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [40s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [50s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [1m0s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [1m10s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [1m20s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [1m30s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [1m40s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [1m50s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [2m0s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [2m10s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [2m20s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [2m30s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [2m40s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [2m50s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [3m0s elapsed]
aws_vpn_connection.named_test_resource: Still creating... [3m10s elapsed]
aws_vpn_connection.named_test_resource: Creation complete after 3m17s [id=vpn-04152ac3f30b7b07f]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
customer_gateway_id = "cgw-085eb1ccebd32dc89"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:vpn-connection/vpn-04152ac3f30b7b07f"
resource_id = "vpn-04152ac3f30b7b07f"
resource_name = "turbottest83497"
type = "ipsec.1"
vpn_gateway_id = "vgw-04bda21550d9a9a7d"

Running SQL query: test-get-query.sql
[
  {
    "customer_gateway_id": "cgw-085eb1ccebd32dc89",
    "type": "ipsec.1",
    "vpn_connection_id": "vpn-04152ac3f30b7b07f",
    "vpn_gateway_id": "vgw-04bda21550d9a9a7d"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "customer_gateway_id": "cgw-085eb1ccebd32dc89",
    "type": "ipsec.1",
    "vpn_connection_id": "vpn-04152ac3f30b7b07f",
    "vpn_gateway_id": "vgw-04bda21550d9a9a7d"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpn-connection/vpn-04152ac3f30b7b07f"
    ],
    "tags": {
      "name": "turbottest83497"
    },
    "title": "vpn-04152ac3f30b7b07f"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_vpn_connection

TEARDOWN: tests/aws_vpc_vpn_connection

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_vpc_vpn_gateway []

PRETEST: tests/aws_vpc_vpn_gateway

TEST: tests/aws_vpc_vpn_gateway
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "name" = "turbottest52891"
        }
      + tags_all                             = {
          + "name" = "turbottest52891"
        }
    }

  # aws_vpn_gateway.named_test_resource will be created
  + resource "aws_vpn_gateway" "named_test_resource" {
      + amazon_side_asn = (known after apply)
      + arn             = (known after apply)
      + id              = (known after apply)
      + tags            = {
          + "Name" = "turbottest52891"
        }
      + tags_all        = {
          + "Name" = "turbottest52891"
        }
      + vpc_id          = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + attached_vpc_id = (known after apply)
  + resource_aka    = (known after apply)
  + resource_id     = (known after apply)
  + resource_name   = "turbottest52891"
aws_vpc.main: Creating...
aws_vpc.main: Creation complete after 3s [id=vpc-07eb68cf7481833f5]
aws_vpn_gateway.named_test_resource: Creating...
aws_vpn_gateway.named_test_resource: Still creating... [10s elapsed]
aws_vpn_gateway.named_test_resource: Creation complete after 19s [id=vgw-049558ca5b9c23e8c]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

attached_vpc_id = "vpc-07eb68cf7481833f5"
resource_aka = "arn:aws:ec2:us-east-1:632902152528:vpn-gateway/vgw-049558ca5b9c23e8c"
resource_id = "vgw-049558ca5b9c23e8c"
resource_name = "turbottest52891"

Running SQL query: test-get-query.sql
[
  {
    "amazon_side_asn": 64512,
    "state": "available",
    "tags_src": [
      {
        "Key": "Name",
        "Value": "turbottest52891"
      }
    ],
    "type": "ipsec.1",
    "vpc_attachments": [
      {
        "State": "attached",
        "VpcId": "vpc-07eb68cf7481833f5"
      }
    ],
    "vpn_gateway_id": "vgw-049558ca5b9c23e8c"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpn-gateway/vgw-049558ca5b9c23e8c"
    ],
    "tags": {
      "Name": "turbottest52891"
    },
    "title": "turbottest52891",
    "vpn_gateway_id": "vgw-049558ca5b9c23e8c"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:ec2:us-east-1:632902152528:vpn-gateway/vgw-049558ca5b9c23e8c"
    ],
    "tags": {
      "Name": "turbottest52891"
    },
    "title": "turbottest52891",
    "type": "ipsec.1",
    "vpn_gateway_id": "vgw-049558ca5b9c23e8c"
  }
]
✔ PASSED

POSTTEST: tests/aws_vpc_vpn_gateway

TEARDOWN: tests/aws_vpc_vpn_gateway

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_waf_rate_based_rule []

PRETEST: tests/aws_waf_rate_based_rule

TEST: tests/aws_waf_rate_based_rule
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_waf_rate_based_rule.named_test_resource will be created
  + resource "aws_waf_rate_based_rule" "named_test_resource" {
      + arn         = (known after apply)
      + id          = (known after apply)
      + metric_name = "turbottest65973"
      + name        = "turbottest65973"
      + rate_key    = "IP"
      + rate_limit  = 100
      + tags        = {
          + "name" = "turbottest65973"
        }
      + tags_all    = {
          + "name" = "turbottest65973"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest65973"
aws_waf_rate_based_rule.named_test_resource: Creating...
aws_waf_rate_based_rule.named_test_resource: Creation complete after 3s [id=3ffd6ee9-07d0-4071-b272-7ac3d72a83e9]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
resource_aka = "arn:aws:waf::632902152528:ratebasedrule/3ffd6ee9-07d0-4071-b272-7ac3d72a83e9"
resource_id = "3ffd6ee9-07d0-4071-b272-7ac3d72a83e9"
resource_name = "turbottest65973"

Running SQL query: test-get-query.sql
[
  {
    "metric_name": "turbottest65973",
    "partition": "aws",
    "title": "turbottest65973"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:waf::632902152528:ratebasedrule/3ffd6ee9-07d0-4071-b272-7ac3d72a83e9"
    ],
    "metric_name": "turbottest65973",
    "tags": {
      "name": "turbottest65973"
    },
    "title": "turbottest65973"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "metric_name": "turbottest65973",
    "partition": "aws",
    "title": "turbottest65973"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:waf::632902152528:ratebasedrule/3ffd6ee9-07d0-4071-b272-7ac3d72a83e9"
    ],
    "title": "turbottest65973"
  }
]
✔ PASSED

POSTTEST: tests/aws_waf_rate_based_rule

TEARDOWN: tests/aws_waf_rate_based_rule

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_wafregional_rule []

PRETEST: tests/aws_wafregional_rule

TEST: tests/aws_wafregional_rule
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_wafregional_ipset.named_test_resource will be created
  + resource "aws_wafregional_ipset" "named_test_resource" {
      + arn  = (known after apply)
      + id   = (known after apply)
      + name = "turbottest67049"

      + ip_set_descriptor {
          + type  = "IPV4"
          + value = "192.0.7.0/24"
        }
    }

  # aws_wafregional_rule.named_test_resource will be created
  + resource "aws_wafregional_rule" "named_test_resource" {
      + arn         = (known after apply)
      + id          = (known after apply)
      + metric_name = "turbottest67049"
      + name        = "turbottest67049"
      + tags_all    = (known after apply)

      + predicate {
          + data_id = (known after apply)
          + negated = false
          + type    = "IPMatch"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest67049"
  + rule_id       = (known after apply)
aws_wafregional_ipset.named_test_resource: Creating...
aws_wafregional_ipset.named_test_resource: Creation complete after 3s [id=10e82421-6334-4c80-a412-e30e48403a36]
aws_wafregional_rule.named_test_resource: Creating...
aws_wafregional_rule.named_test_resource: Creation complete after 2s [id=df43ad1c-6eb3-48b1-91bf-6ae4f99d8a3e]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

aws_partition = "aws"
resource_aka = "arn:aws:waf-regional:us-east-1:632902152528:rule/df43ad1c-6eb3-48b1-91bf-6ae4f99d8a3e"
resource_name = "turbottest67049"
rule_id = "df43ad1c-6eb3-48b1-91bf-6ae4f99d8a3e"

Running SQL query: test-get-query.sql
[
  {
    "name": "turbottest67049",
    "partition": "aws",
    "title": "turbottest67049"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "name": "turbottest67049",
    "rule_id": "df43ad1c-6eb3-48b1-91bf-6ae4f99d8a3e"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "turbottest67049"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:waf-regional:us-east-1:632902152528:rule/df43ad1c-6eb3-48b1-91bf-6ae4f99d8a3e"
    ],
    "title": "turbottest67049"
  }
]
✔ PASSED

POSTTEST: tests/aws_wafregional_rule

TEARDOWN: tests/aws_wafregional_rule

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_waf_rule []

PRETEST: tests/aws_waf_rule

TEST: tests/aws_waf_rule
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_waf_rule.named_test_resource will be created
  + resource "aws_waf_rule" "named_test_resource" {
      + arn         = (known after apply)
      + id          = (known after apply)
      + metric_name = "turbottest36482"
      + name        = "turbottest36482"
      + tags        = {
          + "name" = "turbottest36482"
        }
      + tags_all    = {
          + "name" = "turbottest36482"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_partition = "aws"
  + resource_aka  = (known after apply)
  + resource_name = "turbottest36482"
  + rule_id       = (known after apply)
aws_waf_rule.named_test_resource: Creating...
aws_waf_rule.named_test_resource: Creation complete after 2s [id=b0d0c352-16d7-431f-878a-2661a3453dae]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

aws_partition = "aws"
resource_aka = "arn:aws:waf::632902152528:rule/b0d0c352-16d7-431f-878a-2661a3453dae"
resource_name = "turbottest36482"
rule_id = "b0d0c352-16d7-431f-878a-2661a3453dae"

Running SQL query: test-get-query.sql
[
  {
    "metric_name": "turbottest36482",
    "name": "turbottest36482",
    "partition": "aws",
    "tags": {
      "name": "turbottest36482"
    },
    "title": "turbottest36482"
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "metric_name": "turbottest36482",
    "name": "turbottest36482",
    "partition": "aws",
    "tags": {
      "name": "turbottest36482"
    }
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "name": "turbottest36482",
    "partition": "aws",
    "tags": {
      "name": "turbottest36482"
    },
    "title": "turbottest36482"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:waf::632902152528:rule/b0d0c352-16d7-431f-878a-2661a3453dae"
    ],
    "tags": {
      "name": "turbottest36482"
    },
    "title": "turbottest36482"
  }
]
✔ PASSED

POSTTEST: tests/aws_waf_rule

TEARDOWN: tests/aws_waf_rule

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_wafv2_ip_set []

PRETEST: tests/aws_wafv2_ip_set

TEST: tests/aws_wafv2_ip_set
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_wafv2_ip_set.named_test_resource_global will be created
  + resource "aws_wafv2_ip_set" "named_test_resource_global" {
      + addresses          = [
          + "4.3.2.1/32",
          + "8.7.6.5/32",
        ]
      + arn                = (known after apply)
      + description        = "A global IP set for testing."
      + id                 = (known after apply)
      + ip_address_version = "IPV4"
      + lock_token         = (known after apply)
      + name               = "turbottest35250_global"
      + scope              = "CLOUDFRONT"
      + tags               = {
          + "foo1"  = "bar1"
          + "scope" = "global"
        }
      + tags_all           = {
          + "foo1"  = "bar1"
          + "scope" = "global"
        }
    }

  # aws_wafv2_ip_set.named_test_resource_regional will be created
  + resource "aws_wafv2_ip_set" "named_test_resource_regional" {
      + addresses          = [
          + "1.2.3.4/32",
          + "5.6.7.8/32",
        ]
      + arn                = (known after apply)
      + description        = "A regional IP set for testing."
      + id                 = (known after apply)
      + ip_address_version = "IPV4"
      + lock_token         = (known after apply)
      + name               = "turbottest35250_regional"
      + scope              = "REGIONAL"
      + tags               = {
          + "foo"   = "bar"
          + "scope" = "regional"
        }
      + tags_all           = {
          + "foo"   = "bar"
          + "scope" = "regional"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + aws_region             = "us-east-1"
  + resource_aka_global    = (known after apply)
  + resource_aka_regional  = (known after apply)
  + resource_id_global     = (known after apply)
  + resource_id_regional   = (known after apply)
  + resource_name_global   = "turbottest35250_global"
  + resource_name_regional = "turbottest35250_regional"
aws_wafv2_ip_set.named_test_resource_regional: Creating...
aws_wafv2_ip_set.named_test_resource_global: Creating...
aws_wafv2_ip_set.named_test_resource_global: Creation complete after 1s [id=74d98346-eca9-4d2c-83c8-9cbe521a359c]
aws_wafv2_ip_set.named_test_resource_regional: Creation complete after 1s [id=1ff263c7-b53f-4d1a-9cb7-33362427a714]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka_global = "arn:aws:wafv2:us-east-1:632902152528:global/ipset/turbottest35250_global/74d98346-eca9-4d2c-83c8-9cbe521a359c"
resource_aka_regional = "arn:aws:wafv2:us-east-1:632902152528:regional/ipset/turbottest35250_regional/1ff263c7-b53f-4d1a-9cb7-33362427a714"
resource_id_global = "74d98346-eca9-4d2c-83c8-9cbe521a359c"
resource_id_regional = "1ff263c7-b53f-4d1a-9cb7-33362427a714"
resource_name_global = "turbottest35250_global"
resource_name_regional = "turbottest35250_regional"

Running SQL query: test-getGlobal-query.sql
[
  {
    "account_id": "632902152528",
    "addresses": [
      "8.7.6.5/32",
      "4.3.2.1/32"
    ],
    "arn": "arn:aws:wafv2:us-east-1:632902152528:global/ipset/turbottest35250_global/74d98346-eca9-4d2c-83c8-9cbe521a359c",
    "description": "A global IP set for testing.",
    "id": "74d98346-eca9-4d2c-83c8-9cbe521a359c",
    "ip_address_version": "IPV4",
    "name": "turbottest35250_global",
    "partition": "aws",
    "region": "global",
    "scope": "CLOUDFRONT"
  }
]
✔ PASSED

Running SQL query: test-getRegional-query.sql
[
  {
    "account_id": "632902152528",
    "addresses": [
      "1.2.3.4/32",
      "5.6.7.8/32"
    ],
    "arn": "arn:aws:wafv2:us-east-1:632902152528:regional/ipset/turbottest35250_regional/1ff263c7-b53f-4d1a-9cb7-33362427a714",
    "description": "A regional IP set for testing.",
    "id": "1ff263c7-b53f-4d1a-9cb7-33362427a714",
    "ip_address_version": "IPV4",
    "name": "turbottest35250_regional",
    "partition": "aws",
    "region": "us-east-1",
    "scope": "REGIONAL"
  }
]
✔ PASSED

Running SQL query: test-hydrateGlobal-query.sql
[
  {
    "description": "A global IP set for testing.",
    "name": "turbottest35250_global",
    "tags_src": [
      {
        "Key": "scope",
        "Value": "global"
      },
      {
        "Key": "foo1",
        "Value": "bar1"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrateRegional-query.sql
[
  {
    "description": "A regional IP set for testing.",
    "name": "turbottest35250_regional",
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      },
      {
        "Key": "scope",
        "Value": "regional"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-listGlobal-query.sql
[
  {
    "arn": "arn:aws:wafv2:us-east-1:632902152528:global/ipset/turbottest35250_global/74d98346-eca9-4d2c-83c8-9cbe521a359c",
    "id": "74d98346-eca9-4d2c-83c8-9cbe521a359c",
    "name": "turbottest35250_global",
    "region": "global",
    "scope": "CLOUDFRONT"
  }
]
✔ PASSED

Running SQL query: test-listRegional-query.sql
[
  {
    "arn": "arn:aws:wafv2:us-east-1:632902152528:regional/ipset/turbottest35250_regional/1ff263c7-b53f-4d1a-9cb7-33362427a714",
    "id": "1ff263c7-b53f-4d1a-9cb7-33362427a714",
    "name": "turbottest35250_regional",
    "region": "us-east-1",
    "scope": "REGIONAL"
  }
]
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:wafv2:us-east-1:632902152528:regional/ipset/turbottest35250_regional/1ff263c7-b53f-4d1a-9cb7-33362427a714"
    ],
    "tags": {
      "foo": "bar",
      "scope": "regional"
    },
    "title": "turbottest35250_regional"
  }
]
✔ PASSED

POSTTEST: tests/aws_wafv2_ip_set

TEARDOWN: tests/aws_wafv2_ip_set

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_wafv2_regex_pattern_set []

PRETEST: tests/aws_wafv2_regex_pattern_set

TEST: tests/aws_wafv2_regex_pattern_set
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_wafv2_regex_pattern_set.named_test_resource_global will be created
  + resource "aws_wafv2_regex_pattern_set" "named_test_resource_global" {
      + arn         = (known after apply)
      + description = "A global Regex Pattern set for testing."
      + id          = (known after apply)
      + lock_token  = (known after apply)
      + name        = "turbottest19449_global"
      + scope       = "CLOUDFRONT"
      + tags        = {
          + "foo1"  = "bar1"
          + "scope" = "global"
        }
      + tags_all    = {
          + "foo1"  = "bar1"
          + "scope" = "global"
        }

      + regular_expression {
          + regex_string = "^google"
        }
      + regular_expression {
          + regex_string = "^turbot"
        }
    }

  # aws_wafv2_regex_pattern_set.named_test_resource_regional will be created
  + resource "aws_wafv2_regex_pattern_set" "named_test_resource_regional" {
      + arn         = (known after apply)
      + description = "A regional Regex Pattern set for testing."
      + id          = (known after apply)
      + lock_token  = (known after apply)
      + name        = "turbottest19449_regional"
      + scope       = "REGIONAL"
      + tags        = {
          + "foo"   = "bar"
          + "scope" = "regional"
        }
      + tags_all    = {
          + "foo"   = "bar"
          + "scope" = "regional"
        }

      + regular_expression {
          + regex_string = "^google"
        }
      + regular_expression {
          + regex_string = "^turbot"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + aws_region             = "us-east-1"
  + resource_aka_global    = (known after apply)
  + resource_aka_regional  = (known after apply)
  + resource_id_global     = (known after apply)
  + resource_id_regional   = (known after apply)
  + resource_name_global   = "turbottest19449_global"
  + resource_name_regional = "turbottest19449_regional"
aws_wafv2_regex_pattern_set.named_test_resource_global: Creating...
aws_wafv2_regex_pattern_set.named_test_resource_regional: Creating...
aws_wafv2_regex_pattern_set.named_test_resource_regional: Creation complete after 1s [id=b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec]
aws_wafv2_regex_pattern_set.named_test_resource_global: Creation complete after 1s [id=4c47ddb3-4e29-4f63-ab7f-044c05db24c5]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka_global = "arn:aws:wafv2:us-east-1:632902152528:global/regexpatternset/turbottest19449_global/4c47ddb3-4e29-4f63-ab7f-044c05db24c5"
resource_aka_regional = "arn:aws:wafv2:us-east-1:632902152528:regional/regexpatternset/turbottest19449_regional/b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec"
resource_id_global = "4c47ddb3-4e29-4f63-ab7f-044c05db24c5"
resource_id_regional = "b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec"
resource_name_global = "turbottest19449_global"
resource_name_regional = "turbottest19449_regional"

Running SQL query: test-getGlobal-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:wafv2:us-east-1:632902152528:global/regexpatternset/turbottest19449_global/4c47ddb3-4e29-4f63-ab7f-044c05db24c5",
    "description": "A global Regex Pattern set for testing.",
    "id": "4c47ddb3-4e29-4f63-ab7f-044c05db24c5",
    "name": "turbottest19449_global",
    "partition": "aws",
    "region": "global",
    "regular_expressions": [
      "^turbot",
      "^google"
    ],
    "scope": "CLOUDFRONT"
  }
]
✔ PASSED

Running SQL query: test-getRegional-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:wafv2:us-east-1:632902152528:regional/regexpatternset/turbottest19449_regional/b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec",
    "description": "A regional Regex Pattern set for testing.",
    "id": "b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec",
    "name": "turbottest19449_regional",
    "partition": "aws",
    "region": "us-east-1",
    "regular_expressions": [
      "^turbot",
      "^google"
    ],
    "scope": "REGIONAL"
  }
]
✔ PASSED

Running SQL query: test-hydrateGlobal-query.sql
[
  {
    "description": "A global Regex Pattern set for testing.",
    "name": "turbottest19449_global",
    "tags_src": [
      {
        "Key": "scope",
        "Value": "global"
      },
      {
        "Key": "foo1",
        "Value": "bar1"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrateRegional-query.sql
[
  {
    "description": "A regional Regex Pattern set for testing.",
    "name": "turbottest19449_regional",
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      },
      {
        "Key": "scope",
        "Value": "regional"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-listGlobal-query.sql
[
  {
    "arn": "arn:aws:wafv2:us-east-1:632902152528:global/regexpatternset/turbottest19449_global/4c47ddb3-4e29-4f63-ab7f-044c05db24c5",
    "id": "4c47ddb3-4e29-4f63-ab7f-044c05db24c5",
    "name": "turbottest19449_global",
    "region": "global",
    "scope": "CLOUDFRONT"
  }
]
✔ PASSED

Running SQL query: test-listRegional-query.sql
[
  {
    "arn": "arn:aws:wafv2:us-east-1:632902152528:regional/regexpatternset/turbottest19449_regional/b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec",
    "id": "b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec",
    "name": "turbottest19449_regional",
    "region": "us-east-1",
    "scope": "REGIONAL"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:wafv2:us-east-1:632902152528:regional/regexpatternset/turbottest19449_regional/b392fb5d-e9b4-4ce2-b0f0-c0f59a3103ec"
    ],
    "tags": {
      "foo": "bar",
      "scope": "regional"
    },
    "title": "turbottest19449_regional"
  }
]
✔ PASSED

POSTTEST: tests/aws_wafv2_regex_pattern_set

TEARDOWN: tests/aws_wafv2_regex_pattern_set

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_wafv2_rule_group []

PRETEST: tests/aws_wafv2_rule_group

TEST: tests/aws_wafv2_rule_group
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_wafv2_rule_group.named_test_resource_global will be created
  + resource "aws_wafv2_rule_group" "named_test_resource_global" {
      + arn         = (known after apply)
      + capacity    = 2
      + description = "A global rule group for testing."
      + id          = (known after apply)
      + lock_token  = (known after apply)
      + name        = "turbottest30237_global"
      + scope       = "CLOUDFRONT"
      + tags        = {
          + "foo1"  = "bar1"
          + "scope" = "global"
        }
      + tags_all    = {
          + "foo1"  = "bar1"
          + "scope" = "global"
        }

      + rule {
          + name     = "rule-1"
          + priority = 1

          + action {
              + allow {
                }
            }

          + statement {

              + geo_match_statement {
                  + country_codes = [
                      + "US",
                      + "IN",
                    ]
                }
            }

          + visibility_config {
              + cloudwatch_metrics_enabled = false
              + metric_name                = "turbottest30237_global"
              + sampled_requests_enabled   = false
            }
        }

      + visibility_config {
          + cloudwatch_metrics_enabled = false
          + metric_name                = "turbottest30237_global"
          + sampled_requests_enabled   = false
        }
    }

  # aws_wafv2_rule_group.named_test_resource_regional will be created
  + resource "aws_wafv2_rule_group" "named_test_resource_regional" {
      + arn         = (known after apply)
      + capacity    = 2
      + description = "A regional rule group for testing."
      + id          = (known after apply)
      + lock_token  = (known after apply)
      + name        = "turbottest30237_regional"
      + scope       = "REGIONAL"
      + tags        = {
          + "foo"   = "bar"
          + "scope" = "regional"
        }
      + tags_all    = {
          + "foo"   = "bar"
          + "scope" = "regional"
        }

      + rule {
          + name     = "rule-1"
          + priority = 1

          + action {
              + allow {
                }
            }

          + statement {

              + geo_match_statement {
                  + country_codes = [
                      + "US",
                      + "IN",
                    ]
                }
            }

          + visibility_config {
              + cloudwatch_metrics_enabled = false
              + metric_name                = "turbottest30237_regional"
              + sampled_requests_enabled   = false
            }
        }

      + visibility_config {
          + cloudwatch_metrics_enabled = false
          + metric_name                = "turbottest30237_regional"
          + sampled_requests_enabled   = false
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id             = "632902152528"
  + aws_partition          = "aws"
  + aws_region             = "us-east-1"
  + resource_aka_global    = (known after apply)
  + resource_aka_regional  = (known after apply)
  + resource_id_global     = (known after apply)
  + resource_id_regional   = (known after apply)
  + resource_name_global   = "turbottest30237_global"
  + resource_name_regional = "turbottest30237_regional"
aws_wafv2_rule_group.named_test_resource_global: Creating...
aws_wafv2_rule_group.named_test_resource_regional: Creating...
aws_wafv2_rule_group.named_test_resource_global: Creation complete after 1s [id=e8748321-255f-48fc-bd6c-b407279935d8]
aws_wafv2_rule_group.named_test_resource_regional: Creation complete after 1s [id=d09fc41e-659d-4402-98ee-3006b79e37c3]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka_global = "arn:aws:wafv2:us-east-1:632902152528:global/rulegroup/turbottest30237_global/e8748321-255f-48fc-bd6c-b407279935d8"
resource_aka_regional = "arn:aws:wafv2:us-east-1:632902152528:regional/rulegroup/turbottest30237_regional/d09fc41e-659d-4402-98ee-3006b79e37c3"
resource_id_global = "e8748321-255f-48fc-bd6c-b407279935d8"
resource_id_regional = "d09fc41e-659d-4402-98ee-3006b79e37c3"
resource_name_global = "turbottest30237_global"
resource_name_regional = "turbottest30237_regional"

Running SQL query: test-getGlobal-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:wafv2:us-east-1:632902152528:global/rulegroup/turbottest30237_global/e8748321-255f-48fc-bd6c-b407279935d8",
    "capacity": 2,
    "description": "A global rule group for testing.",
    "id": "e8748321-255f-48fc-bd6c-b407279935d8",
    "name": "turbottest30237_global",
    "partition": "aws",
    "region": "global",
    "rules": [
      {
        "Action": {
          "Allow": {
            "CustomRequestHandling": null
          },
          "Block": null,
          "Captcha": null,
          "Count": null
        },
        "CaptchaConfig": null,
        "Name": "rule-1",
        "OverrideAction": null,
        "Priority": 1,
        "RuleLabels": null,
        "Statement": {
          "AndStatement": null,
          "ByteMatchStatement": null,
          "GeoMatchStatement": {
            "CountryCodes": [
              "US",
              "IN"
            ],
            "ForwardedIPConfig": null
          },
          "IPSetReferenceStatement": null,
          "LabelMatchStatement": null,
          "ManagedRuleGroupStatement": null,
          "NotStatement": null,
          "OrStatement": null,
          "RateBasedStatement": null,
          "RegexMatchStatement": null,
          "RegexPatternSetReferenceStatement": null,
          "RuleGroupReferenceStatement": null,
          "SizeConstraintStatement": null,
          "SqliMatchStatement": null,
          "XssMatchStatement": null
        },
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": false,
          "MetricName": "turbottest30237_global",
          "SampledRequestsEnabled": false
        }
      }
    ],
    "scope": "CLOUDFRONT",
    "visibility_config": {
      "CloudWatchMetricsEnabled": false,
      "MetricName": "turbottest30237_global",
      "SampledRequestsEnabled": false
    }
  }
]

✘ FAILED

Running SQL query: test-getRegional-query.sql
[
  {
    "account_id": "632902152528",
    "arn": "arn:aws:wafv2:us-east-1:632902152528:regional/rulegroup/turbottest30237_regional/d09fc41e-659d-4402-98ee-3006b79e37c3",
    "capacity": 2,
    "description": "A regional rule group for testing.",
    "id": "d09fc41e-659d-4402-98ee-3006b79e37c3",
    "name": "turbottest30237_regional",
    "partition": "aws",
    "region": "us-east-1",
    "rules": [
      {
        "Action": {
          "Allow": {
            "CustomRequestHandling": null
          },
          "Block": null,
          "Captcha": null,
          "Count": null
        },
        "CaptchaConfig": null,
        "Name": "rule-1",
        "OverrideAction": null,
        "Priority": 1,
        "RuleLabels": null,
        "Statement": {
          "AndStatement": null,
          "ByteMatchStatement": null,
          "GeoMatchStatement": {
            "CountryCodes": [
              "US",
              "IN"
            ],
            "ForwardedIPConfig": null
          },
          "IPSetReferenceStatement": null,
          "LabelMatchStatement": null,
          "ManagedRuleGroupStatement": null,
          "NotStatement": null,
          "OrStatement": null,
          "RateBasedStatement": null,
          "RegexMatchStatement": null,
          "RegexPatternSetReferenceStatement": null,
          "RuleGroupReferenceStatement": null,
          "SizeConstraintStatement": null,
          "SqliMatchStatement": null,
          "XssMatchStatement": null
        },
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": false,
          "MetricName": "turbottest30237_regional",
          "SampledRequestsEnabled": false
        }
      }
    ],
    "scope": "REGIONAL",
    "visibility_config": {
      "CloudWatchMetricsEnabled": false,
      "MetricName": "turbottest30237_regional",
      "SampledRequestsEnabled": false
    }
  }
]

✘ FAILED

Running SQL query: test-hydrateGlobal-query.sql
[
  {
    "description": "A global rule group for testing.",
    "name": "turbottest30237_global",
    "tags_src": [
      {
        "Key": "scope",
        "Value": "global"
      },
      {
        "Key": "foo1",
        "Value": "bar1"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-hydrateRegional-query.sql
[
  {
    "description": "A regional rule group for testing.",
    "name": "turbottest30237_regional",
    "tags_src": [
      {
        "Key": "foo",
        "Value": "bar"
      },
      {
        "Key": "scope",
        "Value": "regional"
      }
    ]
  }
]
✔ PASSED

Running SQL query: test-listGlobal-query.sql
[
  {
    "arn": "arn:aws:wafv2:us-east-1:632902152528:global/rulegroup/turbottest30237_global/e8748321-255f-48fc-bd6c-b407279935d8",
    "id": "e8748321-255f-48fc-bd6c-b407279935d8",
    "name": "turbottest30237_global",
    "region": "global",
    "scope": "CLOUDFRONT"
  }
]
✔ PASSED

Running SQL query: test-listRegional-query.sql
[
  {
    "arn": "arn:aws:wafv2:us-east-1:632902152528:regional/rulegroup/turbottest30237_regional/d09fc41e-659d-4402-98ee-3006b79e37c3",
    "id": "d09fc41e-659d-4402-98ee-3006b79e37c3",
    "name": "turbottest30237_regional",
    "region": "us-east-1",
    "scope": "REGIONAL"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "akas": [
      "arn:aws:wafv2:us-east-1:632902152528:regional/rulegroup/turbottest30237_regional/d09fc41e-659d-4402-98ee-3006b79e37c3"
    ],
    "tags": {
      "foo": "bar",
      "scope": "regional"
    },
    "title": "turbottest30237_regional"
  }
]
✔ PASSED

TEARDOWN: tests/aws_wafv2_rule_group

SUMMARY:

✘ tests/aws_wafv2_rule_group failed.

0/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_wafv2_web_acl []

PRETEST: tests/aws_wafv2_web_acl

TEST: tests/aws_wafv2_web_acl
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_role.firehose_role will be created
  + resource "aws_iam_role" "firehose_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "firehose.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "turbottest43903"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # aws_kinesis_firehose_delivery_stream.named_test_resource will be created
  + resource "aws_kinesis_firehose_delivery_stream" "named_test_resource" {
      + arn            = (known after apply)
      + destination    = "s3"
      + destination_id = (known after apply)
      + id             = (known after apply)
      + name           = "aws-waf-logs-turbottest43903"
      + tags_all       = (known after apply)
      + version_id     = (known after apply)

      + s3_configuration {
          + bucket_arn         = (known after apply)
          + buffer_interval    = 300
          + buffer_size        = 5
          + compression_format = "UNCOMPRESSED"
          + role_arn           = (known after apply)

          + cloudwatch_logging_options {
              + enabled         = (known after apply)
              + log_group_name  = (known after apply)
              + log_stream_name = (known after apply)
            }
        }
    }

  # aws_s3_bucket.firehose_bucket will be created
  + resource "aws_s3_bucket" "firehose_bucket" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "turbottest43903"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule {
          + allowed_headers = (known after apply)
          + allowed_methods = (known after apply)
          + allowed_origins = (known after apply)
          + expose_headers  = (known after apply)
          + max_age_seconds = (known after apply)
        }

      + grant {
          + id          = (known after apply)
          + permissions = (known after apply)
          + type        = (known after apply)
          + uri         = (known after apply)
        }

      + lifecycle_rule {
          + abort_incomplete_multipart_upload_days = (known after apply)
          + enabled                                = (known after apply)
          + id                                     = (known after apply)
          + prefix                                 = (known after apply)
          + tags                                   = (known after apply)

          + expiration {
              + date                         = (known after apply)
              + days                         = (known after apply)
              + expired_object_delete_marker = (known after apply)
            }

          + noncurrent_version_expiration {
              + days = (known after apply)
            }

          + noncurrent_version_transition {
              + days          = (known after apply)
              + storage_class = (known after apply)
            }

          + transition {
              + date          = (known after apply)
              + days          = (known after apply)
              + storage_class = (known after apply)
            }
        }

      + logging {
          + target_bucket = (known after apply)
          + target_prefix = (known after apply)
        }

      + object_lock_configuration {
          + object_lock_enabled = (known after apply)

          + rule {
              + default_retention {
                  + days  = (known after apply)
                  + mode  = (known after apply)
                  + years = (known after apply)
                }
            }
        }

      + replication_configuration {
          + role = (known after apply)

          + rules {
              + delete_marker_replication_status = (known after apply)
              + id                               = (known after apply)
              + prefix                           = (known after apply)
              + priority                         = (known after apply)
              + status                           = (known after apply)

              + destination {
                  + account_id         = (known after apply)
                  + bucket             = (known after apply)
                  + replica_kms_key_id = (known after apply)
                  + storage_class      = (known after apply)

                  + access_control_translation {
                      + owner = (known after apply)
                    }

                  + metrics {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }

                  + replication_time {
                      + minutes = (known after apply)
                      + status  = (known after apply)
                    }
                }

              + filter {
                  + prefix = (known after apply)
                  + tags   = (known after apply)
                }

              + source_selection_criteria {
                  + sse_kms_encrypted_objects {
                      + enabled = (known after apply)
                    }
                }
            }
        }

      + server_side_encryption_configuration {
          + rule {
              + bucket_key_enabled = (known after apply)

              + apply_server_side_encryption_by_default {
                  + kms_master_key_id = (known after apply)
                  + sse_algorithm     = (known after apply)
                }
            }
        }

      + versioning {
          + enabled    = (known after apply)
          + mfa_delete = (known after apply)
        }

      + website {
          + error_document           = (known after apply)
          + index_document           = (known after apply)
          + redirect_all_requests_to = (known after apply)
          + routing_rules            = (known after apply)
        }
    }

  # aws_wafv2_web_acl.named_test_resource will be created
  + resource "aws_wafv2_web_acl" "named_test_resource" {
      + arn         = (known after apply)
      + capacity    = (known after apply)
      + description = "Example of a managed rule."
      + id          = (known after apply)
      + lock_token  = (known after apply)
      + name        = "turbottest43903"
      + scope       = "REGIONAL"
      + tags        = {
          + "name" = "turbottest43903"
        }
      + tags_all    = {
          + "name" = "turbottest43903"
        }

      + default_action {
          + allow {
            }
        }

      + rule {
          + name     = "rule-1"
          + priority = 1

          + override_action {
              + count {}
            }

          + statement {

              + managed_rule_group_statement {
                  + name        = "AWSManagedRulesCommonRuleSet"
                  + vendor_name = "AWS"

                  + excluded_rule {
                      + name = "SizeRestrictions_QUERYSTRING"
                    }
                  + excluded_rule {
                      + name = "NoUserAgent_HEADER"
                    }
                }
            }

          + visibility_config {
              + cloudwatch_metrics_enabled = false
              + metric_name                = "friendly-rule-metric-turbottest43903"
              + sampled_requests_enabled   = false
            }
        }

      + visibility_config {
          + cloudwatch_metrics_enabled = false
          + metric_name                = "friendly-metric-turbottest43903"
          + sampled_requests_enabled   = false
        }
    }

  # aws_wafv2_web_acl_logging_configuration.example will be created
  + resource "aws_wafv2_web_acl_logging_configuration" "example" {
      + id                      = (known after apply)
      + log_destination_configs = (known after apply)
      + resource_arn            = (known after apply)

      + redacted_fields {

          + single_header {
              + name = "user-agent"
            }
        }
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + log_destination_configs = (known after apply)
  + resource_aka            = (known after apply)
  + resource_id             = (known after apply)
  + resource_name           = "turbottest43903"
aws_iam_role.firehose_role: Creating...
aws_s3_bucket.firehose_bucket: Creating...
aws_wafv2_web_acl.named_test_resource: Creating...
aws_iam_role.firehose_role: Creation complete after 2s [id=turbottest43903]
aws_wafv2_web_acl.named_test_resource: Creation complete after 2s [id=a5569366-0781-4f9c-bb31-72e32afd335a]
aws_s3_bucket.firehose_bucket: Creation complete after 4s [id=turbottest43903]
aws_kinesis_firehose_delivery_stream.named_test_resource: Creating...
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [10s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [20s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [30s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [40s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [50s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [1m0s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Still creating... [1m10s elapsed]
aws_kinesis_firehose_delivery_stream.named_test_resource: Creation complete after 1m13s [id=arn:aws:firehose:us-east-1:632902152528:deliverystream/aws-waf-logs-turbottest43903]
aws_wafv2_web_acl_logging_configuration.example: Creating...
aws_wafv2_web_acl_logging_configuration.example: Creation complete after 1s [id=arn:aws:wafv2:us-east-1:632902152528:regional/webacl/turbottest43903/a5569366-0781-4f9c-bb31-72e32afd335a]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on variables.tf line 43, in data "null_data_source" "resource":
  43: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

log_destination_configs = "arn:aws:firehose:us-east-1:632902152528:deliverystream/aws-waf-logs-turbottest43903"
resource_aka = "arn:aws:wafv2:us-east-1:632902152528:regional/webacl/turbottest43903/a5569366-0781-4f9c-bb31-72e32afd335a"
resource_id = "a5569366-0781-4f9c-bb31-72e32afd335a"
resource_name = "turbottest43903"

Running SQL query: test-get-query.sql
[
  {
    "akas": [
      "arn:aws:wafv2:us-east-1:632902152528:regional/webacl/turbottest43903/a5569366-0781-4f9c-bb31-72e32afd335a"
    ],
    "default_action": {
      "Allow": {
        "CustomRequestHandling": null
      },
      "Block": null
    },
    "description": "Example of a managed rule.",
    "name": "turbottest43903",
    "scope": "REGIONAL",
    "tags_src": [
      {
        "Key": "name",
        "Value": "turbottest43903"
      }
    ],
    "title": "turbottest43903",
    "visibility_config": {
      "CloudWatchMetricsEnabled": false,
      "MetricName": "friendly-metric-turbottest43903",
      "SampledRequestsEnabled": false
    }
  }
]
✔ PASSED

Running SQL query: test-hydrate-query.sql
[
  {
    "akas": [
      "arn:aws:wafv2:us-east-1:632902152528:regional/webacl/turbottest43903/a5569366-0781-4f9c-bb31-72e32afd335a"
    ],
    "logging_configuration": {
      "LogDestinationConfigs": [
        "arn:aws:firehose:us-east-1:632902152528:deliverystream/aws-waf-logs-turbottest43903"
      ],
      "LoggingFilter": null,
      "ManagedByFirewallManager": false,
      "RedactedFields": [
        {
          "AllQueryArguments": null,
          "Body": null,
          "JsonBody": null,
          "Method": null,
          "QueryString": null,
          "SingleHeader": {
            "Name": "user-agent"
          },
          "SingleQueryArgument": null,
          "UriPath": null
        }
      ],
      "ResourceArn": "arn:aws:wafv2:us-east-1:632902152528:regional/webacl/turbottest43903/a5569366-0781-4f9c-bb31-72e32afd335a"
    },
    "name": "turbottest43903",
    "scope": "REGIONAL",
    "tags": {
      "name": "turbottest43903"
    },
    "title": "turbottest43903"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:wafv2:us-east-1:632902152528:regional/webacl/turbottest43903/a5569366-0781-4f9c-bb31-72e32afd335a"
    ],
    "description": "Example of a managed rule.",
    "name": "turbottest43903",
    "scope": "REGIONAL",
    "title": "turbottest43903"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

POSTTEST: tests/aws_wafv2_web_acl

TEARDOWN: tests/aws_wafv2_web_acl

SUMMARY:

1/1 passed.

customEnv TURBOT_TEST_EXPECTED_TIMEOUT undefined

SETUP: tests/aws_wellarchitected_workload []

PRETEST: tests/aws_wellarchitected_workload
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.local_file.input will be read during apply
  # (config refers to values not yet known)
 <= data "local_file" "input"  {
      + content        = (known after apply)
      + content_base64 = (known after apply)
      + filename       = "/tmp/tests/aws_wellarchitected_workload/terraform/pretest/kinesis_stream.json"
      + id             = (known after apply)
    }

  # data.template_file.resource_aka will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "resource_aka"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = "arn:${partition}:wellarchitected:${region}:${account_id}:workload/${resource_id}"
      + vars     = {
          + "account_id"       = "632902152528"
          + "alternate_region" = "us-east-2"
          + "partition"        = "aws"
          + "region"           = "us-east-1"
          + "resource_id"      = (known after apply)
        }
    }

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + account_id    = "632902152528"
  + aws_partition = "aws"
  + aws_region    = "us-east-1"
  + resource_aka  = (known after apply)
  + resource_id   = (known after apply)
  + resource_name = "turbottest85003"
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "aws wellarchitected create-workload --workload-name turbottest85003 --description 'testinh-cli'  --environment 'PREPRODUCTION' --review-owner 'khushboo' --lenses 'wellarchitected' --aws-regions 'us-east-1' > /tmp/tests/aws_wellarchitected_workload/terraform/pretest/kinesis_stream.json"]
null_resource.named_test_resource: Creation complete after 3s [id=6878442575805115022]
data.local_file.input: Reading...
data.local_file.input: Read complete after 0s [id=17d3e73eb67c7a6346f9829565948e34f49e7425]
data.template_file.resource_aka: Reading...
data.template_file.resource_aka: Read complete after 0s [id=d9834bdfd7eed2a266cf9552df8b296c9e9c09449f9756e0b764f706d7ef2be2]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on pretest-variables.tf line 44, in data "null_data_source" "resource":
  44: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

account_id = "632902152528"
aws_partition = "aws"
aws_region = "us-east-1"
resource_aka = "arn:aws:wellarchitected:us-east-1:632902152528:workload/81fc8ce43b931e82085a2849b908bb3e"
resource_id = "81fc8ce43b931e82085a2849b908bb3e"
resource_name = "turbottest85003"

TEST: tests/aws_wellarchitected_workload
Running terraform

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Running SQL query: test-get-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:wellarchitected:us-east-1:632902152528:workload/81fc8ce43b931e82085a2849b908bb3e"
    ],
    "title": "turbottest85003",
    "workload_id": "81fc8ce43b931e82085a2849b908bb3e",
    "workload_name": "turbottest85003"
  }
]
✔ PASSED

Running SQL query: test-list-query.sql
[
  {
    "akas": [
      "arn:aws:wellarchitected:us-east-1:632902152528:workload/81fc8ce43b931e82085a2849b908bb3e"
    ],
    "title": "turbottest85003",
    "workload_id": "81fc8ce43b931e82085a2849b908bb3e",
    "workload_name": "turbottest85003"
  }
]
✔ PASSED

Running SQL query: test-notfound-query.sql
null
✔ PASSED

Running SQL query: test-turbot-query.sql
[
  {
    "account_id": "632902152528",
    "akas": [
      "arn:aws:wellarchitected:us-east-1:632902152528:workload/81fc8ce43b931e82085a2849b908bb3e"
    ],
    "partition": "aws",
    "region": "us-east-1",
    "title": "turbottest85003",
    "workload_id": "81fc8ce43b931e82085a2849b908bb3e",
    "workload_name": "turbottest85003"
  }
]
✔ PASSED

POSTTEST: tests/aws_wellarchitected_workload
Running terraform

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # null_resource.named_test_resource will be created
  + resource "null_resource" "named_test_resource" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
null_resource.named_test_resource: Creating...
null_resource.named_test_resource: Provisioning with 'local-exec'...
null_resource.named_test_resource (local-exec): Executing: ["/bin/sh" "-c" "    aws wellarchitected delete-workload --workload-id 81fc8ce43b931e82085a2849b908bb3e\n"]
null_resource.named_test_resource: Creation complete after 2s [id=3307728353638968944]

Warning: Deprecated Resource

  with data.null_data_source.resource,
  on posttest-variables.tf line 37, in data "null_data_source" "resource":
  37: data "null_data_source" "resource" {

The null_data_source was historically used to construct intermediate values
to re-use elsewhere in configuration, the same can now be achieved using
locals

(and one more similar warning elsewhere)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

TEARDOWN: tests/aws_wellarchitected_workload



SUMMARY:

1/1 passed.

Mon Jun 20 17:03:57 UTC 2022
